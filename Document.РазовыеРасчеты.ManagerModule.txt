// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблица_ВзаиморасчетыСПокупателями(ДокументСсылкаРазовыеРасчеты, СтруктураДополнительныеСвойства)
	
	запрос = Новый Запрос;
	запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	запрос.УстановитьПараметр("Ссылка", ДокументСсылкаРазовыеРасчеты);
	запрос.УстановитьПараметр("Подразделение", ДокументСсылкаРазовыеРасчеты.Подразделение);
	запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	запрос.УстановитьПараметр("ПериодКонтроля", СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени.Дата);
	
	#Область ТекстЗапроса
	// Формирование временной таблицы по расчетам с покупателями.
	запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РазовыеРасчетыСостав.Сотрудник.Контрагент КАК Контрагент,
	|	СУММА(РазовыеРасчетыСостав.Результат) КАК СуммаОплаты,
	|	ЕСТЬNULL(ВзаиморасчетыСПокупателямиОстатки.СуммаОстаток, 0) КАК СуммаОстатокИтого,
	|	РазовыеРасчетыСостав.Сотрудник.СтруктурнаяЕдиница КАК Подразделение
	|ПОМЕСТИТЬ ТаблицаОплат
	|ИЗ
	|	Документ.РазовыеРасчеты.Состав КАК РазовыеРасчетыСостав
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВзаиморасчетыСПокупателями.Остатки(&МоментВремени, Подразделение = &Подразделение) КАК ВзаиморасчетыСПокупателямиОстатки
	|		ПО РазовыеРасчетыСостав.Сотрудник.Контрагент = ВзаиморасчетыСПокупателямиОстатки.Контрагент
	|ГДЕ
	|	РазовыеРасчетыСостав.Ссылка = &Ссылка
	|	И РазовыеРасчетыСостав.ВидРасчета = ЗНАЧЕНИЕ(Справочник.ВидыРасчетов.УдержаниеЗаКолбасу)
	|
	|СГРУППИРОВАТЬ ПО
	|	РазовыеРасчетыСостав.Сотрудник.Контрагент,
	|	ЕСТЬNULL(ВзаиморасчетыСПокупателямиОстатки.СуммаОстаток, 0),
	|	РазовыеРасчетыСостав.Сотрудник.СтруктурнаяЕдиница
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВзаиморасчетыСПокупателямиОстатки.Подразделение КАК Подразделение,
	|	ВзаиморасчетыСПокупателямиОстатки.Менеджер КАК Менеджер,
	|	ВзаиморасчетыСПокупателямиОстатки.Контрагент КАК Контрагент,
	|	ВзаиморасчетыСПокупателямиОстатки.КредитныйДокумент КАК КредитныйДокумент,
	|	ВзаиморасчетыСПокупателямиОстатки.СуммаОстаток КАК СуммаОстаток,
	|	ТаблицаОплат.СуммаОплаты КАК СуммаОплаты,
	|	ТаблицаОплат.СуммаОстатокИтого,
	|	ВзаиморасчетыСПокупателямиОстатки.КредитныйДокумент.Дата КАК КредитныйДокументДата
	|ПОМЕСТИТЬ ТаблицаДолги
	|ИЗ
	|	ТаблицаОплат КАК ТаблицаОплат
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВзаиморасчетыСПокупателями.Остатки(
	|				&МоментВремени,
	|				Подразделение = &Подразделение
	|					И Контрагент.ТипВеденияВзаиморасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыВеденияВзаиморасчетов.ПоНакладным)) КАК ВзаиморасчетыСПокупателямиОстатки
	|		ПО ТаблицаОплат.Контрагент = ВзаиморасчетыСПокупателямиОстатки.Контрагент
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Контрагент,
	|	КредитныйДокументДата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДолги.Контрагент КАК Контрагент,
	|	ТаблицаДолги.СуммаОстаток,
	|	ЕСТЬNULL(СУММА(ТаблицаДолги1.СуммаОстаток), 0) КАК СуммаОстатокНакопление,
	|	ТаблицаДолги.КредитныйДокумент КАК КредитныйДокумент,
	|	ТаблицаДолги.Подразделение КАК Подразделение,
	|	ТаблицаДолги.Менеджер КАК Менеджер,
	|	ТаблицаДолги.СуммаОплаты,
	|	ТаблицаДолги.СуммаОстатокИтого,
	|	ТаблицаДолги.КредитныйДокументДата КАК КредитныйДокументДата
	|ПОМЕСТИТЬ ДолгиСНакоплением
	|ИЗ
	|	ТаблицаДолги КАК ТаблицаДолги
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаДолги КАК ТаблицаДолги1
	|		ПО ТаблицаДолги.Контрагент = ТаблицаДолги1.Контрагент
	|			И ТаблицаДолги.КредитныйДокумент > ТаблицаДолги1.КредитныйДокумент
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДолги.Контрагент,
	|	ТаблицаДолги.СуммаОстаток,
	|	ТаблицаДолги.КредитныйДокумент,
	|	ТаблицаДолги.Подразделение,
	|	ТаблицаДолги.Менеджер,
	|	ТаблицаДолги.СуммаОплаты,
	|	ТаблицаДолги.СуммаОстатокИтого,
	|	ТаблицаДолги.КредитныйДокументДата
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Контрагент,
	|	КредитныйДокументДата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.ВидДвижения КАК ВидДвижения,
	|	ВложенныйЗапрос.Подразделение КАК Подразделение,
	|	ВложенныйЗапрос.Менеджер КАК Менеджер,
	|	ВложенныйЗапрос.Контрагент КАК Контрагент,
	|	ВложенныйЗапрос.КредитныйДокумент КАК КредитныйДокумент,
	|	СУММА(ВложенныйЗапрос.Сумма) КАК Сумма,
	|	ВложенныйЗапрос.КредитныйДокументДата КАК КредитныйДокументДата
	|ПОМЕСТИТЬ ВременнаяТаблицаВзаиморасчетыСПокупателями
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|		ДолгиСНакоплением.Подразделение КАК Подразделение,
	|		ДолгиСНакоплением.Менеджер КАК Менеджер,
	|		ДолгиСНакоплением.Контрагент КАК Контрагент,
	|		ДолгиСНакоплением.КредитныйДокумент КАК КредитныйДокумент,
	|		ВЫБОР
	|			КОГДА ДолгиСНакоплением.СуммаОстатокНакопление + ДолгиСНакоплением.СуммаОстаток > ДолгиСНакоплением.СуммаОплаты
	|				ТОГДА ВЫБОР
	|						КОГДА ДолгиСНакоплением.СуммаОплаты - ДолгиСНакоплением.СуммаОстатокНакопление > 0
	|							ТОГДА ДолгиСНакоплением.СуммаОплаты - ДолгиСНакоплением.СуммаОстатокНакопление
	|						ИНАЧЕ 0
	|					КОНЕЦ
	|			ИНАЧЕ ВЫБОР
	|					КОГДА ДолгиСНакоплением.СуммаОстатокНакопление + ДолгиСНакоплением.СуммаОстаток = ДолгиСНакоплением.СуммаОстатокИтого
	|						ТОГДА ДолгиСНакоплением.СуммаОплаты - ДолгиСНакоплением.СуммаОстатокНакопление
	|					ИНАЧЕ ДолгиСНакоплением.СуммаОстаток
	|				КОНЕЦ
	|		КОНЕЦ КАК Сумма,
	|		ДолгиСНакоплением.КредитныйДокументДата КАК КредитныйДокументДата
	|	ИЗ
	|		ДолгиСНакоплением КАК ДолгиСНакоплением
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|		ТаблицаОплат.Подразделение,
	|		ЗНАЧЕНИЕ(Справочник.Менеджеры.БезМенеджера),
	|		ТаблицаОплат.Контрагент,
	|		ЗНАЧЕНИЕ(Документ.РасходнаяНакладная.ПустаяСсылка),
	|		ТаблицаОплат.СуммаОплаты,
	|		&ПериодКонтроля
	|	ИЗ
	|		ТаблицаОплат КАК ТаблицаОплат
	|	ГДЕ
	|		ТаблицаОплат.Контрагент.ТипВеденияВзаиморасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыВеденияВзаиморасчетов.ПоДоговору)) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.КредитныйДокумент,
	|	ВложенныйЗапрос.Контрагент,
	|	ВложенныйЗапрос.Подразделение,
	|	ВложенныйЗапрос.КредитныйДокументДата,
	|	ВложенныйЗапрос.ВидДвижения,
	|	ВложенныйЗапрос.Менеджер
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Контрагент,
	|	КредитныйДокументДата";

	#КонецОбласти
	
   	запрос.Выполнить();
	
	запрос.Текст = "ВЫБРАТЬ * ИЗ ТаблицаДолги";
	запрос.Текст = "ВЫБРАТЬ * ИЗ ДолгиСНакоплением";
	запрос.Текст = "ВЫБРАТЬ * ИЗ ВременнаяТаблицаВзаиморасчетыСПокупателями";
	
	#Область ТекстЗапроса
	// Установка исключительной блокировки контролируемых остатков расчетов с контрагентами.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВременнаяТаблицаВзаиморасчетыСПокупателями.Подразделение КАК Подразделение,
	|	ВременнаяТаблицаВзаиморасчетыСПокупателями.Контрагент КАК Контрагент,
	|	ВременнаяТаблицаВзаиморасчетыСПокупателями.Менеджер КАК Менеджер,
	|	ВременнаяТаблицаВзаиморасчетыСПокупателями.КредитныйДокумент КАК КредитныйДокумент
	|ИЗ
	|	ВременнаяТаблицаВзаиморасчетыСПокупателями";
	#КонецОбласти
	
	результатЗапроса = запрос.Выполнить();
	
	//Блокировка = Новый БлокировкаДанных;
	//ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ВзаиморасчетыСПокупателями");
	//ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	//ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
	//
	//Для каждого КолонкаРезультатЗапроса Из РезультатЗапроса.Колонки Цикл
	//	ЭлементБлокировки.ИспользоватьИзИсточникаДанных(КолонкаРезультатЗапроса.Имя, КолонкаРезультатЗапроса.Имя);
	//КонецЦикла;
	//Блокировка.Заблокировать();

    НомерЗапроса = 0;
	Запрос.Текст = УправлениеНебольшойФирмойСервер.ПолучитьТекстЗапросаКурсовыеРазницыРасчетыСПокупателями(Запрос.МенеджерВременныхТаблиц, Истина, НомерЗапроса);
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("Таблица_ВзаиморасчетыСПокупателями", МассивРезультатов[НомерЗапроса].Выгрузить());

	
КонецПроцедуры


// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства"..
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылкаРазовыеРасчеты, СтруктураДополнительныеСвойства) Экспорт
	
	запрос = Новый Запрос;
	запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	#Область ТекстЗапроса
	запрос.Текст =
	"ВЫБРАТЬ
	|	РазовыеРасчетыСостав.Ссылка.Дата КАК Период,
	|	&Подразделение КАК Подразделение,
	|	РазовыеРасчетыСостав.Сотрудник,
	|	РазовыеРасчетыСостав.ВидРасчета,
	|	РазовыеРасчетыСостав.Результат,
	|	РазовыеРасчетыСостав.Сотрудник.Контрагент
	|ПОМЕСТИТЬ ВременнаяТаблицаЗапасы
	|ИЗ
	|	Документ.РазовыеРасчеты.Состав КАК РазовыеРасчетыСостав
	|ГДЕ
	|	РазовыеРасчетыСостав.Ссылка = &Ссылка";
	#КонецОбласти
	
	запрос.УстановитьПараметр("Ссылка", ДокументСсылкаРазовыеРасчеты);
	запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	запрос.УстановитьПараметр("Подразделение", ДокументСсылкаРазовыеРасчеты.Подразделение);
	
	запрос.ВыполнитьПакет();
	
	запрос.Текст = "ВЫБРАТЬ * ИЗ ВременнаяТаблицаЗапасы";
	
	// Формирование проводок документа.
	//УправлениеНебольшойФирмойСервер.СформироватьТаблицуПроводок(ДокументСсылкаРасходнаяНакладная, СтруктураДополнительныеСвойства);
	
	СформироватьТаблица_ВзаиморасчетыСПокупателями(ДокументСсылкаРазовыеРасчеты, СтруктураДополнительныеСвойства);
	
КонецПроцедуры // ИнициализироватьДанныеДокумента()

