
&НаСервере
Функция ОбработкаВыбораСервер(выбраннаяСтрока)
	
	//ПараметрыСеанса.Кладовщик = Кладовщик;
	//ПараметрыСеанса.Наборщик = Наборщик;
	
	
	заказСсылка = выбраннаяСтрока.Ссылка;
	
	накладнаяСсылка = Документы.РасходнаяНакладная.НайтиПоРеквизиту("ДокОсн", заказСсылка);
	
	Если накладнаяСсылка = Документы.РасходнаяНакладная.ПустаяСсылка() Тогда
		
		УстановитьПривилегированныйРежим(Истина);
		
		документОбъект = Документы.РасходнаяНакладная.СоздатьДокумент();
		
		документОбъект.ДополнительныеСвойства.Вставить("Кладовщик", Кладовщик);
		документОбъект.ДополнительныеСвойства.Вставить("Наборщик", Наборщик);
		
		документОбъект.Заполнить(заказСсылка);
		документОбъект.Записать();
		
		накладнаяСсылка = документОбъект.Ссылка;
		
		УстановитьПривилегированныйРежим(Ложь);
		
	КонецЕсли;
	
	Возврат накладнаяСсылка;
	
КонецФункции

&НаКлиенте
Процедура СписокВыбор(элемент, выбраннаяСтрока, поле, стандартнаяОбработка)
	
	накладнаяСсылка = ОбработкаВыбораСервер(выбраннаяСтрока);
	
	Если Не накладнаяСсылка = Неопределено Тогда
		параметрыФормы = Новый Структура("Ключ", накладнаяСсылка); 
		Форма = ОткрытьФорму("Документ.РасходнаяНакладная.Форма.ФормаДокумента", параметрыФормы);
	Иначе
		
		//ПараметрыФормы=Новый Структура("Заполнить, ЗначенияЗаполнения",Истина, Новый Структура("ДокументОснование, Кладовщик, Наборщик",ВыбраннаяСтрока, Кладовщик, Наборщик));
		ПараметрыФормы=Новый Структура("Заполнить, Основание",Истина, ВыбраннаяСтрока);
		ОткрытьФорму("Документ.РасходнаяНакладная.Форма.ФормаДокумента",ПараметрыФормы, , Ложь,);
		
	КонецЕсли;
	
	Элементы.Список.Обновить();	
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура МаршрутПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "МаршрутРазвоза",  Маршрут, ВидСравненияКомпоновкиДанных.Равно,, ЗначениеЗаполнено(Маршрут));

КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "МаршрутРазвоза",  Маршрут, ВидСравненияКомпоновкиДанных.Равно,, ЗначениеЗаполнено(Маршрут));

КонецПроцедуры
