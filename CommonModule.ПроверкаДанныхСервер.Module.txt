
#Область ПроверкаРеквизитовОбъектов

// Возвращает структуру, содержащую данные, необходимые для формирования представления строки списка при выводе
// информационных сообщений, касающихся табличной части.
//
// Параметры
//  ТабличнаяЧасть  - <Тип объекта>ТабличнаяЧасть.<Имя документа>.<Имя табличной части> - Табличная часть объекта,
//                 для которой будет получена структура описания строки.
//
// Возвращаемое значение:
//   Структура   - Содержит информацию, необходимую для формирования пути к данным реквизита списка. Структура содержит
//                 следующие свойства:
//                 		ИмяСписка  - Строка - Имя списка (табличной части), для реквизита которого выводится сообщение.
//                 		НомерСтроки  - Число - Номер строки списка (табличной части), для реквизита которого выводится
//                 			сообщение.
//                 		ПредставлениеСписка  - Строка - Пользовательское представление списка (табличной части).
//
Функция ПолучитьОписаниеСтрокиТабличнойЧасти(ТабличнаяЧасть) Экспорт

	ТабличнаяЧастьМетаданные = Метаданные.НайтиПоТипу(ТипЗнч(ТабличнаяЧасть));
	Возврат Новый Структура("ИмяСписка,ПредставлениеСписка,НомерСтроки", ТабличнаяЧастьМетаданные.Имя, ТабличнаяЧастьМетаданные.Представление());

КонецФункции // ПолучитьОписаниеСтрокиТабличнойЧасти()

#КонецОбласти 

#Область ПрочиеПроцедурыИФункции

// Показывает установку права доступа к объекту метаданных для текущего пользователя.
//
// Параметры
//  Право  - Строка - Название права доступа. Перечень возможных значений указан в описании
//                 функции сеанса работы ПравоДоступа().
//  Объект  - Произвольная ссылка, Произвольный объект, ОбъектМетаданных: <Имя объекта метаданых> - Любой объект, для
//                 которого доступен метод Метаданные() либо значение типа ОбъектМетаданных. Перечень возможных значений
//                 объектов метаданных указан в описании функции сеанса работы ПравоДоступа().
//
// Возвращаемое значение:
//   Булево   - Истина - право доступа к объекту установлено; Ложь - в противном случае.
//
Функция ПроверитьПравоДоступа(Право, Объект) Экспорт

	Возврат ПравоДоступа(Право, ?(ТипЗнч(Объект) = Тип("ОбъектМетаданных"), Объект, Объект.Метаданные()));

КонецФункции // ПроверитьПравоДоступа()

// Определяет доступность указанной роли текущему пользователю.
//
// Параметры
//  Роль  -  Строка, ОбъектМетаданных: Роль - Название роли как она задана в конфигураторе или объект описания
//                 метаданного роли.
//  УчитыватьРольПолныеПрава  -  Булево - Определяет необходимость учитывать доступность роли "ПолныеПрава" при
//                 определении доступности требуемой роли. Таким образом, для пользователей с ролью "ПолныеПрава"
//                 при необходимости все роли считаются доступными.
//
// Возвращаемое значение:
//   Булево   - Истина - роль доступна текущему пользователю; Ложь - в противном случае.
//
Функция ПроверитьДоступностьРоли(Роль, УчитыватьРольПолныеПрава = Истина) Экспорт

	Возврат РольДоступна(Роль) Или ?(УчитыватьРольПолныеПрава, РольДоступна("ПолныеПрава"), Ложь);

КонецФункции // ПроверитьДоступностьРоли()

// Функция выполняет непосредственную проверку объекта на наличие изменений по сравнению с данными,
// записанными в базу данных. При наличии изменений в дополнительные свойства объекта (свойство
// ДополнительныеСвойства) будет добавлен новый ключ ОбъектИзменён со значением Истина. В
// дополнительных свойствах дожно быть свойство ЭтоНовый типа Булево, показывающее, является ли объект
// новым.
// Данную функцию имеет смысл вызывать последовательно в нескольких местах для отслеживания всех
// изменений объекта, таких как изменение значений реквизитов, пометки удаления или проведённости
// у документов. Например, можно использовать обработчики объектов ПередЗаписью и ПриЗаписи.
//
// Параметры
//  Объект  - <Тип объекта>Объект.<Имя объекта> - Любой объект, хранящийся в базе данных и имеющий
//                 объектно-ссылочную природу.
//
// Возвращаемое значение:
//   Булево   - Истина - данные объекта изменились по сравнению с данными, записанными в базе данных;
//                 Ложь - данные объекта не изменились.
//
Функция ОбъектИзменён(Объект) Экспорт
	
	Если ПроверитьИзменениеОбъекта(Объект) Тогда
	
		Объект.ДополнительныеСвойства.Вставить("ОбъектИзменён", Истина);
		Возврат Истина;
	
	Иначе
		Возврат Ложь;
	КонецЕсли;

КонецФункции // ОбъектИзменён()

// Функция выполняет непосредственную проверку объекта на наличие изменений. Является вспомогательной
// функцией для функции ОбъектИзменён().
//
// Параметры
//  Объект  - <Тип объекта>Объект.<Имя объекта> - Любой объект, хранящийся в базе данных и имеющий
//                 объектно-ссылочную природу.
//
// Возвращаемое значение:
//   Булево   - Истина - данные объекта изменились по сравнению с данными, записанными в базе данных;
//                 Ложь - данные объекта не изменились.
//
Функция ПроверитьИзменениеОбъекта(Объект)

	ОбъектИзменён = Ложь;
	
	// Если объект уже проверялся на изменение, то повторную проверку делать смысла нет. Флаг
	// изменённости объекта будет сохранён до тех пор, пока объект не будет считан или создан
	// заново.
	Если Объект.ДополнительныеСвойства.Свойство("ОбъектИзменён", ОбъектИзменён) И ОбъектИзменён Тогда
		Возврат Истина;
	КонецЕсли; 

	// Проверяем соответствие ранее сохранённому состоянию объекта.
	ЗаписьXML = Новый ЗаписьXML;
	
	// Получим XML-слепок нового состояния объекта.
	ЗаписьXML.УстановитьСтроку();
	ЗаписатьXML(ЗаписьXML, Объект);
	НовоеСостояниеОбъекта = ЗаписьXML.Закрыть();
	
	ИсходноеСостояниеОбъекта = Неопределено;
	Если Объект.ДополнительныеСвойства.Свойство("ИсходноеСостояниеОбъекта", ИсходноеСостояниеОбъекта) Тогда
		ОбъектИзменён = ИсходноеСостояниеОбъекта <> НовоеСостояниеОбъекта;
	Иначе
		
		ОбъектИзменён = Ложь;
		Объект.ДополнительныеСвойства.Вставить("ИсходноеСостояниеОбъекта", НовоеСостояниеОбъекта);
		
	КонецЕсли; 
	
	// Сравним объект с его же записанным в базу данных состоянием.
	Если Не ОбъектИзменён Тогда
	
		// Получим XML-слепок текущего состояния объекта, т.е. то состояние, которое сохранено
		// в базе данных и доступно через получение объекта по ссылке проверяемого объекта.
		ЗаписьXML.УстановитьСтроку();
		ЗаписатьXML(ЗаписьXML, Объект.Ссылка.ПолучитьОбъект());
		ТекущееСостояниеОбъекта = ЗаписьXML.Закрыть();
		
		ОбъектИзменён = ТекущееСостояниеОбъекта <> НовоеСостояниеОбъекта;
	
	КонецЕсли; 
	
	Возврат ОбъектИзменён;

КонецФункции // ПроверитьИзменениеОбъекта()

#КонецОбласти 
