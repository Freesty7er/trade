&НаКлиенте
Перем НомерВерсииМодуля;

&НаСервере
Перем НомерВерсииМодуля;

&НаКлиенте
Процедура апКаталогВременныхФайловНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	апКлиент.ВыбратьКаталог(НаборКонстант.апКаталогВременныхФайлов, "Выберите каталог временных файлов для обмена данными");
	
КонецПроцедуры

&НаКлиенте
Процедура апКаталогВременныхФайловОткрытие(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	
	ИмяПапки = Элемент.ТекстРедактирования;
	
	Если ЗначениеЗаполнено(ИмяПапки) Тогда 		
		
		ПапкаНаДиске = Новый Файл(ИмяПапки);
		
		Если Не ПапкаНаДиске.Существует() Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Каталог временных файлов: " + ИмяПапки + " не существует!");	
		КонецЕсли;
		
		ЗапуститьПриложение(ИмяПапки);      		
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура апСпособОбменаПриИзменении(Элемент)
	
	НастроитьВидимостьПанелиОбмена();

КонецПроцедуры

&НаКлиенте
Процедура НастроитьВидимостьПанелиОбмена()
	
	СтраницыПанели = Элементы.ГруппаНастройкиОбмена.ПодчиненныеЭлементы;
		
	Если НаборКонстант.апСпособОбмена = ПредопределенноеЗначение("Перечисление.апСпособыОбменаДанными.АгентСОД") Тогда // А+ Сервер
		Элементы.ГруппаНастройкиОбмена.ТекущаяСтраница = СтраницыПанели.ГруппаАгентСервер;
	ИначеЕсли НаборКонстант.апСпособОбмена = ПредопределенноеЗначение("Перечисление.апСпособыОбменаДанными.ФТП") Тогда // ФТП-Сервер
		Элементы.ГруппаНастройкиОбмена.ТекущаяСтраница = СтраницыПанели.ГруппаФТП;
	Иначе
		Элементы.ГруппаНастройкиОбмена.ТекущаяСтраница = СтраницыПанели.ГруппаПрямоеПодключение;
	КонецЕсли;
	
КонецПроцедуры //НастроитьВидимостьПанелиОбмена()

Процедура УстановитьВидимостьЭлементовФормы()
	
	//Элементы.апРежимВыгрузкиНоменклатуры.Видимость = ИспользоватьХарактеристики;	
	//Элементы.апРезервированиеЗаказов.Видимость 	   = ИспользоватьЗаказы; 				
	
	//Элементы.апИнтервалПросроченныхДолгов.Видимость = НаборКонстант.апВыгружатьТолькоПросроченныеДолги; 				
	//Элементы.ДекорацияДнейДолг.Видимость			= НаборКонстант.апВыгружатьТолькоПросроченныеДолги; 				
	
	//Элементы.ЦветПросроченныхДолгов.Видимость = НаборКонстант.апВыделятьЦветомПросроченныеДолги;
	
	//Элементы.апИнтервалПросроченныхДолгов.Видимость = Не (НаборКонстант.апСпособРасчетаПросроченныхДолгов = СпособРасчетаДолговПоДокументам);
	//Элементы.ДекорацияДнейДолг.Видимость		    = Не (НаборКонстант.апСпособРасчетаПросроченныхДолгов = СпособРасчетаДолговПоДокументам);
	
	//Элементы.апПапкаХраненияТреков.Видимость = НаборКонстант.апХранитьФайлыТрековВоВнешнихФайлах;	
	
КонецПроцедуры //УстановитьВидимостьЭлементовGPS()

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	
	УстановитьВидимостьЭлементовФормы();
	
	НастроитьВидимостьПанелиОбмена();
	
	Элементы.ДекорацияВерсияМодуля.Заголовок = "Версия модуля: " + НомерВерсииМодуля;

	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)   	
		
	
	СпособОбмена = НаборКонстант.апСпособОбмена;
	
	Если Не ЗначениеЗаполнено(СпособОбмена) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не указана настройка ""Способ обмена""!", , "НаборКонстант.апСпособОбмена");
		Отказ = Истина;		
				
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаПодключенияФТП(Команда)
	
	Сервер 			= СокрЛП(НаборКонстант.апФТПСервер);
	Логин 			= СокрЛП(НаборКонстант.апФТППользователь);
	Пароль 			= СокрЛП(НаборКонстант.апФТППароль);
	ПассивныйРежим 	= НаборКонстант.апФТППассивныйРежим;
	
	Если ПустаяСтрока(Сервер) Или ПустаяСтрока(Логин) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Указаны не все параметры соединения с FTP-сервером!");	
		Возврат;
	КонецЕсли;
		
	Попытка
		ПодключениеКФТП = Новый FTPСоединение(Сервер, , Логин, Пароль, ,ПассивныйРежим, 60);
	Исключение		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Ошибка подключения. Причина: " + ОписаниеОшибки());	
		Возврат;		
	КонецПопытки; 	
	
	Сообщить("Подключение к FTP-серверу успешно выполнено", СтатусСообщения.Информация);	
	
КонецПроцедуры



НомерВерсииМодуля = "11.0.8.13";
