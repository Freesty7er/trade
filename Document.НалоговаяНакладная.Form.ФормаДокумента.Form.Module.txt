&НаСервере
Процедура ЗаполнитьСервер()
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	РасходнаяНакладнаяЗапасы.Номенклатура КАК Номенклатура,
	|	РасходнаяНакладнаяЗапасы.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	РасходнаяНакладнаяЗапасы.Количество КАК Количество,
	|	РасходнаяНакладнаяЗапасы.Сумма КАК Сумма,
	|	РасходнаяНакладнаяЗапасы.СуммаНДС КАК СуммаНДС,
	|	РасходнаяНакладнаяЗапасы.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница
	|ИЗ
	|	Документ.РасходнаяНакладная.Запасы КАК РасходнаяНакладнаяЗапасы
	|ГДЕ
	|	РасходнаяНакладнаяЗапасы.Ссылка В (&СписокРасходныхНакладных)
	|ИТОГИ
	|	СУММА(Количество),
	|	СУММА(Сумма),
	|	СУММА(СуммаНДС)
	|ПО
	|	СтруктурнаяЕдиница,
	|	Номенклатура,
	|	ЕдиницаИзмерения");
	
	СписокРасходныхНакладных = Новый Массив;
	Для Каждого СтрокаСостава Из Объект.Состав Цикл
		
		Если ЗначениеЗаполнено(СтрокаСостава.РасходняНакладная) Тогда
			СписокРасходныхНакладных.Добавить(СтрокаСостава.РасходняНакладная);
		КонецЕсли;
	
	КонецЦикла;
	
	Запрос.УстановитьПараметр("СписокРасходныхНакладных", СписокРасходныхНакладных);
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.Прямой);
	
	СтрокиДокумента = Объект.Запасы;
	СтрокиДокумента.Очистить();
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.Группировка() = "ЕдиницаИзмерения" И НЕ(Выборка.Количество = 0) Тогда
			НоваяСтрока = СтрокиДокумента.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			
			НоваяСтрока.Цена = НоваяСтрока.Сумма / НоваяСтрока.Количество;
			
		КонецЕсли;
		
	КонецЦикла;

	
	
	
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	ЗаполнитьСервер();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНакладныеСервер()
	
	запрос = Новый Запрос;
	
	#Область ТекстЗапроса
	
	запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасходнаяНакладнаяЗапасы.Ссылка КАК РасходняНакладная,
	|	СУММА(РасходнаяНакладнаяЗапасы.Сумма - РасходнаяНакладнаяЗапасы.СуммаНДС) КАК СуммаБезНДС,
	|	СУММА(РасходнаяНакладнаяЗапасы.СуммаНДС) КАК СуммаНДС,
	|	СУММА(РасходнаяНакладнаяЗапасы.Сумма) КАК СуммаДокумента,
	|	РасходнаяНакладнаяЗапасы.Ссылка.Дата КАК Дата
	|ИЗ
	|	Документ.РасходнаяНакладная.Запасы КАК РасходнаяНакладнаяЗапасы
	|ГДЕ
	|	РасходнаяНакладнаяЗапасы.Ссылка.Контрагент = &Контрагент
	|	И РасходнаяНакладнаяЗапасы.Ссылка.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	И РасходнаяНакладнаяЗапасы.Ссылка.Организация = &Организация
	|	И РасходнаяНакладнаяЗапасы.Ссылка.Проведен = ИСТИНА
	|
	|СГРУППИРОВАТЬ ПО
	|	РасходнаяНакладнаяЗапасы.Ссылка,
	|	РасходнаяНакладнаяЗапасы.Ссылка.Дата
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасходнаяНакладнаяЗапасы.Ссылка,
	|	СУММА(РасходнаяНакладнаяЗапасы.Сумма - РасходнаяНакладнаяЗапасы.СуммаНДС),
	|	СУММА(РасходнаяНакладнаяЗапасы.СуммаНДС),
	|	СУММА(РасходнаяНакладнаяЗапасы.Сумма),
	|	РасходнаяНакладнаяЗапасы.Ссылка.Дата
	|ИЗ
	|	Документ.РасходнаяНакладная.Запасы КАК РасходнаяНакладнаяЗапасы
	|ГДЕ
	|	РасходнаяНакладнаяЗапасы.Ссылка.Контрагент.КД_Контрагент В
	|			(ВЫБРАТЬ
	|				Контрагенты.КД_Контрагент
	|			ИЗ
	|				Справочник.Контрагенты КАК Контрагенты
	|			ГДЕ
	|				Контрагенты.Ссылка = &Контрагент)
	|	И РасходнаяНакладнаяЗапасы.Ссылка.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	И РасходнаяНакладнаяЗапасы.Ссылка.Организация = &Организация
	|	И РасходнаяНакладнаяЗапасы.Ссылка.Проведен = ИСТИНА
	|	И РасходнаяНакладнаяЗапасы.Ссылка.Контрагент <> &Контрагент
	|
	|СГРУППИРОВАТЬ ПО
	|	РасходнаяНакладнаяЗапасы.Ссылка,
	|	РасходнаяНакладнаяЗапасы.Ссылка.Дата
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата";
	
	#КонецОбласти
	
	запрос.УстановитьПараметр("НачалоПериода", НачалоДня(Объект.Дата));
	запрос.УстановитьПараметр("ОкончаниеПериода", КонецДня(Объект.Дата));
	запрос.УстановитьПараметр("Контрагент", Объект.Контрагент);
	запрос.УстановитьПараметр("Организация", Объект.Организация);
	
	результатЗапроса = запрос.Выполнить();
	
	Если результатЗапроса.Пустой() Тогда
		сообщить("Нет данных для заполнения");
		Возврат;
	КонецЕсли;
	
	Объект.Состав.Загрузить(результатЗапроса.Выгрузить());
	
	// заполним "Номенклатуру"
	ЗаполнитьСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНакладные(Команда)
	ЗаполнитьНакладныеСервер();
КонецПроцедуры

&НаСервереБезКонтекста
// Получает набор данных с сервера для процедуры ДатаПриИзменении.
//
Функция ПолучитьДанныеДатаПриИзменении(ДокументСсылка, ДатаНовая, ДатаПередИзменением)
	
	СтруктураДанные = Новый Структура();
	СтруктураДанные.Вставить("РазностьДат", УправлениеНебольшойФирмойСервер.ПроверитьНомерДокумента(ДокументСсылка, ДатаНовая, ДатаПередИзменением));
	
	Возврат СтруктураДанные;
	
КонецФункции // ПолучитьДанныеДатаПриИзменении()

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	// Обработка события изменения даты.
	ДатаПередИзменением = ДатаДокумента;
	ДатаДокумента = Объект.Дата;
	Если Объект.Дата <> ДатаПередИзменением Тогда
		СтруктураДанные = ПолучитьДанныеДатаПриИзменении(Объект.Ссылка, Объект.Дата, ДатаПередИзменением);
		Если СтруктураДанные.РазностьДат <> 0 Тогда
			Объект.Номер = "";
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УправлениеНебольшойФирмойСервер.ЗаполнитьШапкуДокумента(Объект,
		,
		Параметры.ЗначениеКопирования,
		Параметры.Основание,
		СостояниеДокумента,
		КартинкаСостоянияДокумента,
		РазрешеноПроведение);
		
	// Установка реквизитов формы.
	ДатаДокумента = Объект.Дата;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	УправлениеНебольшойФирмойКлиент.ОбновитьСостояниеДокумента(Объект, СостояниеДокумента, КартинкаСостоянияДокумента, РазрешеноПроведение);

КонецПроцедуры

&НаКлиенте
Процедура ЗапасыНоменклатураПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.Запасы.ТекущиеДанные;
	
	СтруктураДанные = Новый Структура();
	СтруктураДанные.Вставить("Номенклатура", 	СтрокаТабличнойЧасти.Номенклатура);
	
	// Выполнить общие действия для всех документов при изменении номенклатуры.
	СтруктураДанные = ОбработкаТабличныхЧастейСервер.ПолучитьДанныеНоменклатураПриИзменении(СтруктураДанные, Объект);
	
	СтрокаТабличнойЧасти.ЕдиницаИзмерения 	= СтруктураДанные.ЕдиницаИзмерения;
	СтрокаТабличнойЧасти.СтруктурнаяЕдиница	= СтруктураДанные.СтруктурнаяЕдиница;
	СтрокаТабличнойЧасти.Цена 				= СтруктураДанные.Цена;
	
	ОбработкаТабличныхЧастейКлиент.РассчитатьСуммуВСтрокеТабличнойЧасти(СтрокаТабличнойЧасти);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапасыКоличествоПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиент.РассчитатьСуммуВСтрокеТабличнойЧасти(Элементы.Запасы.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура ЗапасыЦенаПриИзменении(Элемент)
	ОбработкаТабличныхЧастейКлиент.РассчитатьСуммуВСтрокеТабличнойЧасти(Элементы.Запасы.ТекущиеДанные);
КонецПроцедуры
