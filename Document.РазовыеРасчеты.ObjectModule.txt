
#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(данныеЗаполнения, стандартнаяОбработка)
	
	заполненНаОснованииДокумента = Ложь;
	
	ЗаполнениеОбъектовСервер.ЗаполнитьДанныеНовогоДокумента(ЭтотОбъект, данныеЗаполнения);
	
	// Заполнение по умолчанию.
	Если Подразделение.Пустая() Тогда
		Подразделение = ПользователиСервер.ПолучитьЗначениеНастройки("ОсновноеПодразделение");
	КонецЕсли;

	// Ввод на основании.
	типДанныхЗаполнения = ТипЗнч(данныеЗаполнения);
	
	Если типДанныхЗаполнения = Тип("Структура") Тогда
		
		ЗаполнитьДокументПоОтбору(данныеЗаполнения);
	
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(отказ, режимПроведения)
	
	// Инициализация дополнительных свойств для проведения документа.
	ОбщегоНазначенияСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Инициализация данных документа.
	Документы.РазовыеРасчеты.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей.
	ОбщегоНазначенияСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Отражение в разделах учета
	УправлениеНебольшойФирмойСервер.ОтразитьВзаиморасчетыСПокупателями(ДополнительныеСвойства, Движения, Отказ);

	
	РасчетыПоОплатеТруда = Движения.РасчетыПоОплатеТруда;
	ВзаиморасчетыССотрудниками = Движения.ВзаиморасчетыССотрудниками;
	//ВзаиморасчетыСПокупателями = Движения.ВзаиморасчетыСПокупателями;
	ФинансовыеРезультаты = Движения.ФинансовыйРезультат;
	ВзаиморасчетыПоКредитам = Движения.ВзаиморасчетыПоВыданнымКредитам;
	
	Для Каждого СтрокаСостава Из Состав Цикл
		
			
		Если СтрокаСостава.ВидРасчета.Тип = 1 Тогда
			// Начисление
			Движение = ФинансовыеРезультаты.Добавить();
			Движение.Период = Дата;
			Движение.Подразделение 	= Подразделение;
			Движение.СтатьяЗатрат 	= КатегорияРаботников.СтатьяЗатратПоЗарплате;
			Движение.СуммаРасходов 	= СтрокаСостава.Результат;
			
			Движение = ВзаиморасчетыССотрудниками.Добавить();
			Движение.ВидДвижения 	= ВидДвиженияНакопления.Расход;
			Движение.Период 		= Дата;
			Движение.Подразделение 	= Подразделение;
			Движение.Сотрудник 		= СтрокаСостава.Сотрудник;
			Движение.Сумма 			= СтрокаСостава.Результат;
			Движение.СчетУчета      = ПланыСчетов.Внутренний.Зарплата;
			
		Иначе
			// Удержание
			Движение = ВзаиморасчетыССотрудниками.Добавить();
			Движение.ВидДвижения 	= ВидДвиженияНакопления.Приход;
			Движение.Период 		= Дата;
			Движение.Подразделение 	= Подразделение;
			Движение.Сотрудник 		= СтрокаСостава.Сотрудник;
			Движение.Сумма 			= СтрокаСостава.Результат;
			Движение.СчетУчета		= ПланыСчетов.Внутренний.Зарплата;
			
			Если СтрокаСостава.ВидРасчета = Справочники.ВидыРасчетов.УдержаниеКредита Тогда
				
				Движение = ВзаиморасчетыПоКредитам.Добавить();
				Движение.Период = Дата;
				Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
				Движение.Подразделение = Подразделение;
				Движение.Сотрудник = СтрокаСостава.Сотрудник;
				Движение.Сумма = СтрокаСостава.Результат;
				Движение.СчетУчета = ПланыСчетов.Внутренний.КредитыИЗаймы;
				
				
			ИначеЕсли СтрокаСостава.ВидРасчета = Справочники.ВидыРасчетов.УдержаниеЗаКолбасу Тогда
				
				//КредитныйДокумент = СтрокаСостава.КредитныйДокумент;
				
				//Движение = ВзаиморасчетыСПокупателями.Добавить();
				//Движение.Период = Дата;
				//Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
				//Движение.Контрагент = СтрокаСостава.Сотрудник.Контрагент;
				
				//Движение.КредитныйДокумент = КредитныйДокумент;
				//Движение.Менеджер = КредитныйДокумент.Менеджер;
				
				//Движение.Менеджер = Справочники.Менеджеры.БезМенеджера;
				//Движение.Подразделение = Подразделение;
				//Движение.Сумма = СтрокаСостава.Результат;
				
			Иначе
				// Уменьшим расходы на оплату труда....
				Движение = ФинансовыеРезультаты.Добавить();
				Движение.Период = Дата;
				Движение.Подразделение 	= Подразделение;
				Движение.СтатьяЗатрат 	= КатегорияРаботников.СтатьяЗатратПоЗарплате;
				Движение.СуммаРасходов 	= -1*СтрокаСостава.Результат;

			КонецЕсли;


		КонецЕсли;
		
		// 
		Движение = РасчетыПоОплатеТруда.Добавить();
		Движение.Период = Дата;
		Движение.ВидРасчета = СтрокаСостава.ВидРасчета;
		Движение.ПериодРегистрации = ПериодРегистрации;
		Движение.Подразделение = Подразделение;
		Движение.Сотрудник = СтрокаСостава.Сотрудник;
		Движение.Результат = СтрокаСостава.Результат;
		
	КонецЦикла;
	
	РасчетыПоОплатеТруда.Записывать = Истина;
	ВзаиморасчетыССотрудниками.Записывать = Истина;
	//ВзаиморасчетыСПокупателями.Записать();
	ВзаиморасчетыПоКредитам.Записывать = Истина;
	ФинансовыеРезультаты.Записывать = Истина;
	
	// Запись наборов записей.
	УправлениеНебольшойФирмойСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	// Контроль возникновения отрицательного остатка.
	//Документы.РазовыеРасчеты.ВыполнитьКонтроль(Ссылка, ДополнительныеСвойства, Отказ);
	
	ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц.Закрыть();
	
КонецПроцедуры

Процедура ПриКопировании(объектКопирования)
	
	ЗаполнениеОбъектовСервер.ЗаполнитьДанныеСкопированногоДокумента(ЭтотОбъект, объектКопирования);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ЗаполнениеПоОснованию

Процедура ЗаполнитьДокументПоОтбору(Знач данныеЗаполнения)
	ПериодРегистрации = НачалоМесяца(Дата);	
КонецПроцедуры

#КонецОбласти

#КонецОбласти