
#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ЭтоКорректировка = Ложь;
	
	ДенежныеСредства 	= Движения.ДенежныеСредства;
	Финрезультат 		= Движения.ФинансовыйРезультат;
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	ВЫБОР
	               |		КОГДА УправленческийОстатки.Счет = &ТоварыВРознице
	               |			ТОГДА УправленческийОстатки.СуммаОстаток
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК ТоварыВРознице,
	               |	ВЫБОР
	               |		КОГДА УправленческийОстатки.Счет = &НаценкаВРознице
	               |			ТОГДА -УправленческийОстатки.СуммаОстаток
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК НаценкаВРознице
	               |ИЗ
	               |	РегистрБухгалтерии.Управленческий.Остатки(
	               |			&ДатаДокумента,
	               |			Счет = &ТоварыВРознице
	               |				ИЛИ Счет = &НаценкаВРознице,
	               |			,
	               |			Субконто1 = &Магазин
	               |				И Субконто2 = &Отдел) КАК УправленческийОстатки
	               |ИТОГИ
	               |	СУММА(ТоварыВРознице),
	               |	СУММА(НаценкаВРознице)
	               |ПО
	               |	ОБЩИЕ,
	               |	УправленческийОстатки.Субконто1";

	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ДатаДокумента", Ссылка.Дата);
	Запрос.УстановитьПараметр("Магазин", Ссылка.Магазин);
	Запрос.УстановитьПараметр("Отдел", Ссылка.Отдел);
	Запрос.УстановитьПараметр("ТоварыВРознице", ПланыСчетов.Внутренний.ТоварыВРознице);
	Запрос.УстановитьПараметр("НаценкаВРознице", ПланыСчетов.Внутренний.РозничнаяНаценкаБаза);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Результат = Новый Структура("ТоварыВРознице, НаценкаВРознице",0,0);
	Иначе
		Результат = Результат.Выбрать();
		Результат.Следующий();
	КонецЕсли;
		
	БазаДляСписанияНаценки 	= 0;
	ПриходВРозницу 			= 0;
	ПриходНаценки 			= 0;
	
	ДокументыПродажи = Движения.ДокументыПродажи;
	
	Проводки = Движения.Управленческий;
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	ДневнойОтчетСтрокиДокумента.НаправлениеДвижения,
	               |	ДневнойОтчетСтрокиДокумента.Объект,
	               |	ДневнойОтчетСтрокиДокумента.Комментарий,
	               |	ДневнойОтчетСтрокиДокумента.ПриходСумма,
	               |	ДневнойОтчетСтрокиДокумента.ПриходСуммаРозн,
	               |	ДневнойОтчетСтрокиДокумента.РасходСумма,
	               |	ДневнойОтчетСтрокиДокумента.РасходСуммаРозн,
	               |	ДокументыПродажи.ДатаДокумента
	               |ИЗ
	               |	Документ.ДневнойОтчет.СтрокиДокумента КАК ДневнойОтчетСтрокиДокумента
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДокументыПродажи КАК ДокументыПродажи
	               |		ПО ДневнойОтчетСтрокиДокумента.Ссылка.Подразделение = ДокументыПродажи.Подразделение
	               |			И ДневнойОтчетСтрокиДокумента.Ссылка.Магазин = ДокументыПродажи.Магазин
	               |			И ДневнойОтчетСтрокиДокумента.Ссылка.Отдел = ДокументыПродажи.Отдел
	               |			И ДневнойОтчетСтрокиДокумента.Объект = ДокументыПродажи.Контрагент
	               |			И ДневнойОтчетСтрокиДокумента.Комментарий = ДокументыПродажи.НомерДокумента
	               |ГДЕ
	               |	ДневнойОтчетСтрокиДокумента.Ссылка = &Ссылка";
	
	ЗапросПоСтрокамДокумента = Новый Запрос(ТекстЗапроса);
	ЗапросПоСтрокамДокумента.УстановитьПараметр("Ссылка", Ссылка);
	
	//Выборка = ЗапросПоСтрокамДокумента.Выполнить().Выбрать();
	
	Для Каждого СтрокаДокумента Из СтрокиДокумента Цикл
	//Пока Выборка.Следующий() Цикл
		
		//СтрокаДокумента = Выборка;
		
		// Закупка товара
		Если (СтрокаДокумента.НаправлениеДвижения = Перечисления.НаправленияДвижения.ЗакупкаТовара) Тогда
			
			ПриходВРозницу = СтрокаДокумента.ПриходСуммаРозн;
			ПриходНаценки = СтрокаДокумента.ПриходСуммаРозн - СтрокаДокумента.ПриходСумма;
			
			//Если (СтрокаДокумента.Объект.База) Тогда
				СчетВзаиморасчетов = ПланыСчетов.Внутренний.ПоставщикиБаза;
				СчетНаценки	= ПланыСчетов.Внутренний.РозничнаяНаценкаБаза;
			//Иначе
			//	СчетВзаиморасчетов = ПланыСчетов.Внутренний.ПоставщикиПрочие;
			//	СчетНаценки	= ПланыСчетов.Внутренний.РозничнаяНаценкаПрочее;
			//КонецЕсли;

			
			НоваяПроводка = Проводки.Добавить();
			НоваяПроводка.Подразделение = Подразделение;
			НоваяПроводка.Период	= Дата;
			НоваяПроводка.СчетДт = ПланыСчетов.Внутренний.ТоварыВРознице;
			НоваяПроводка.СубконтоДт.Магазины = Магазин;
			НоваяПроводка.СубконтоДт.Отделы = Отдел;
			
			
			НоваяПроводка.СчетКт = СчетВзаиморасчетов;
			НоваяПроводка.СубконтоКт.Контрагенты = СтрокаДокумента.Объект;
			НоваяПроводка.СубконтоКт.ДокументПоставки = СтрокаДокумента.Комментарий;
			НоваяПроводка.СубконтоКт.Отделы = Отдел;
			
			НоваяПроводка.Сумма	= СтрокаДокумента.ПриходСумма;
			НоваяПроводка.Содержание	= "Закупка: "+ СокрЛП(СтрокаДокумента.Комментарий);
			
			НоваяПроводка = Проводки.Добавить();
			НоваяПроводка.Подразделение = Подразделение;
			НоваяПроводка.Период	= Дата;
			НоваяПроводка.СчетДт = ПланыСчетов.Внутренний.ТоварыВРознице;
			НоваяПроводка.СубконтоДт.Магазины = Магазин;
			НоваяПроводка.СубконтоДт.Отделы = Отдел;
			
			НоваяПроводка.СчетКт = СчетНаценки;
			НоваяПроводка.СубконтоКт.Магазины = Магазин;
			НоваяПроводка.СубконтоКт.Отделы = Отдел;
			НоваяПроводка.Сумма	= (СтрокаДокумента.ПриходСуммаРозн - СтрокаДокумента.ПриходСумма);
			
			НовыйДокументПродажи = ДокументыПродажи.Добавить();
			НовыйДокументПродажи.Контрагент = СтрокаДокумента.Объект;
			НовыйДокументПродажи.Подразделение = Подразделение;
			НовыйДокументПродажи.НомерДокумента = СтрокаДокумента.Комментарий;
			//НовыйДокументПродажи.ДатаДокумента = Дата;
			НовыйДокументПродажи.Магазин = Магазин;
			НовыйДокументПродажи.Отдел = Отдел;
			НовыйДокументПродажи.Сумма = СтрокаДокумента.ПриходСумма;
			
			// Оплата
			//Если НЕ(СтрокаДокумента.РасходСуммаРозн = 0) Тогда
			//	НоваяПроводка = Проводки.Добавить();
			//	НоваяПроводка.Подарзделение = Подразделение;
			//	НоваяПроводка.Период	= Дата;
			//	НоваяПроводка.СчетДт = СчетВзаиморасчетов;
			//	НоваяПроводка.СубконтоДт.Контрагенты = СтрокаДокумента.Объект;
			//	НоваяПроводка.СубконтоДт.ДокументПоставки = СтрокаДокумента.Комментарий;
			//	НоваяПроводка.СубконтоДт.ДатаДокумента = Дата;
			//	
			//	НоваяПроводка.СчетКт = ПланыСчетов.Внутренний.ТоварыВРознице;
			//	НоваяПроводка.СубконтоКт.Магазины = Магазин;
			//	НоваяПроводка.СубконтоКт.Отдел = Отдел;
			//	НоваяПроводка.Сумма	= СтрокаДокумента.РасходСуммаРозн;
			//КонецЕсли;
			
		// Инкассация
		ИначеЕсли (СтрокаДокумента.НаправлениеДвижения = Перечисления.НаправленияДвижения.Инкассация) Тогда
			
			НоваяПроводка = Проводки.Добавить();
			НоваяПроводка.Подразделение = Подразделение;
			НоваяПроводка.Период	= Дата;
			НоваяПроводка.СчетДт = ПланыСчетов.Внутренний.Инкассация;
			НоваяПроводка.СубконтоКт.Магазины = Магазин;
			
			НоваяПроводка.СчетКт = ПланыСчетов.Внутренний.ТоварыВРознице;
			НоваяПроводка.СубконтоКт.Магазины = Магазин;
			НоваяПроводка.СубконтоКт.Отделы = Отдел;
			
			НоваяПроводка.Сумма	= СтрокаДокумента.РасходСуммаРозн;
			НоваяПроводка.Содержание	= "Инкассация: "+ СокрЛП(СтрокаДокумента.Комментарий);
			
			// списать наценку
			БазаДляСписанияНаценки = БазаДляСписанияНаценки + СтрокаДокумента.РасходСуммаРозн;
					
		ИначеЕсли (СтрокаДокумента.НаправлениеДвижения = Перечисления.НаправленияДвижения.ОплатаБонусами) Тогда
			
			НоваяПроводка = Проводки.Добавить();
			НоваяПроводка.Подразделение = Подразделение;
			НоваяПроводка.Период	= Дата;
			НоваяПроводка.СчетДт = ПланыСчетов.Внутренний.ОплатаБонусами;
			НоваяПроводка.СубконтоКт.Магазины = Магазин;
			
			НоваяПроводка.СчетКт = ПланыСчетов.Внутренний.ТоварыВРознице;
			НоваяПроводка.СубконтоКт.Магазины = Магазин;
			НоваяПроводка.СубконтоКт.Отделы = Отдел;
			
			НоваяПроводка.Сумма	= СтрокаДокумента.РасходСуммаРозн;
			НоваяПроводка.Содержание	= "Оплата бонусами: "+ СокрЛП(СтрокаДокумента.Комментарий);
			
			// списать наценку
			БазаДляСписанияНаценки = БазаДляСписанияНаценки + СтрокаДокумента.РасходСуммаРозн;
			
		ИначеЕсли (СтрокаДокумента.НаправлениеДвижения = Перечисления.НаправленияДвижения.Скидка) Тогда
			
			НоваяПроводка = Проводки.Добавить();
			НоваяПроводка.Подразделение = Подразделение;
			НоваяПроводка.Период	= Дата;
			НоваяПроводка.СчетДт = ПланыСчетов.Внутренний.Скидка;
			НоваяПроводка.СубконтоКт.Магазины = Магазин;
			
			НоваяПроводка.СчетКт = ПланыСчетов.Внутренний.ТоварыВРознице;
			НоваяПроводка.СубконтоКт.Магазины = Магазин;
			НоваяПроводка.СубконтоКт.Отделы = Отдел;
			
			НоваяПроводка.Сумма	= СтрокаДокумента.РасходСуммаРозн;
			НоваяПроводка.Содержание	= "Скидка: "+ СокрЛП(СтрокаДокумента.Комментарий);
			
			// списать наценку
			БазаДляСписанияНаценки = БазаДляСписанияНаценки + СтрокаДокумента.РасходСуммаРозн;
					
		
		ИначеЕсли (СтрокаДокумента.НаправлениеДвижения = Перечисления.НаправленияДвижения.ПолучениеКредита) Тогда
			
			СчетВзаиморасчетов = ПланыСчетов.Внутренний.КредитыПолученные;

			
			НоваяПроводка = Проводки.Добавить();
			НоваяПроводка.Подразделение = Подразделение;
			НоваяПроводка.Период	= Дата;
			НоваяПроводка.СчетДт = ПланыСчетов.Внутренний.ТоварыВРознице;
			НоваяПроводка.СубконтоДт.Магазины = Магазин;
			НоваяПроводка.СубконтоДт.Отделы = Отдел;
			
			
			НоваяПроводка.СчетКт = СчетВзаиморасчетов;
			НоваяПроводка.СубконтоКт.Контрагенты = СтрокаДокумента.Объект;
			НоваяПроводка.СубконтоКт.Отделы = Отдел;
			
			НоваяПроводка.Сумма	= СтрокаДокумента.ПриходСуммаРозн;
			НоваяПроводка.Содержание	= "Получение кредита: "+ СокрЛП(СтрокаДокумента.Комментарий);
			
		ИначеЕсли (СтрокаДокумента.НаправлениеДвижения = Перечисления.НаправленияДвижения.ОплатаПоставщику) Тогда
			
			Если Ложь Тогда
				ЦФО = Отдел;
				
				// Партии товаров в рознице
				ПартииТоваров = Движения.ПартииТоваровНаСкладах;
				
				Движение = ПартииТоваров.Добавить();
				
				Движение.ВидДвижения 	= ВидДвиженияНакопления.Расход;
				Движение.Период 		= Дата;
				Движение.Подразделение 	= Подразделение;
				Движение.Склад 			= ЦФО.Склад;
				Движение.ЦФО 			= ЦФО;
				Движение.Стоимость 		= СтрокаДокумента.РасходСумма;
				Движение.ПродСтоимость 	= СтрокаДокумента.РасходСуммаРозн;
				
				ПартииТоваров.Записать();
				
				// Доходы
				Движение = Финрезультат.Добавить();
				
				Движение.Период 		= Дата;
				Движение.Подразделение	= Подразделение;
				Движение.Объект			= ЦФО;
				//Движение.СтатьяЗатрат	= ;
				Движение.СуммаРасходов	= СтрокаДокумента.РасходСуммаРозн - СтрокаДокумента.РасходСумма;
				
				// Поставщики
				ВзаиморасчетыСПоставщиками = Движения.ВзаиморасчетыСПоставщиками;
				Движение = ВзаиморасчетыСПоставщиками.Добавить();
				
				Движение.ВидДвижения 	= ВидДвиженияНакопления.Приход;
				Движение.Период 		= Дата;
				Движение.Подразделение 	= Подразделение;
				Движение.ЦФО 			= ЦФО;
				Движение.Контрагент 	= СтрокаДокумента.Объект;
				Движение.Сумма			= СтрокаДокумента.РасходСумма;
				
				
				ВзаиморасчетыСПоставщиками.Записать();
			КонецЕсли;
			
			ЭтоКорректировка = Истина;
			
		ИначеЕсли (СтрокаДокумента.НаправлениеДвижения = Перечисления.НаправленияДвижения.НаРасходы) Тогда
			
			НоваяПроводка = Проводки.Добавить();
			НоваяПроводка.Подразделение = Подразделение;
			НоваяПроводка.Период	= Дата;
			НоваяПроводка.СчетДт = ПланыСчетов.Внутренний.РасходыПрямые;
			НоваяПроводка.СубконтоДт.СтатьиРасходов = СтрокаДокумента.Объект;
			НоваяПроводка.СубконтоДт.Магазины = Магазин;
			НоваяПроводка.СубконтоДт.Отделы = Отдел;
			
			НоваяПроводка.СчетКт = ПланыСчетов.Внутренний.ТоварыВРознице;
			НоваяПроводка.СубконтоКт.Магазины = Магазин;
			НоваяПроводка.СубконтоКт.Отделы = Отдел;
			НоваяПроводка.Сумма	= СтрокаДокумента.РасходСуммаРозн;
			
			НоваяПроводка.Содержание	= "Расходы: "+ СокрЛП(СтрокаДокумента.Комментарий);

			
			// списать наценку
			БазаДляСписанияНаценки = БазаДляСписанияНаценки + СтрокаДокумента.РасходСуммаРозн;
			
			Если Ложь Тогда
				ЦФО = Отдел;
				
				// РЕГИСТРЫ
				Движение = Финрезультат.Добавить();
				Движение.Период 		= Дата;
				
				Движение.Подразделение	= Подразделение;
				Движение.СтатьяЗатрат	= СтрокаДокумента.Объект;
				Движение.Объект			= ЦФО;
				Движение.СуммаРасходов	= СтрокаДокумента.РасходСуммаРозн;
				
				//СтруктураПараметров = Новый Структура("Подразделение, ОтделМагазина, Дата, СуммаРеализации", Подразделение, ЦФО, Дата, СтрокаДокумента.РасходСуммаРозн);
				СтруктураПараметров = Новый Структура("Подразделение, ОтделМагазина, Дата, СуммаРеализации", Подразделение, ЦФО, МоментВремени(), СтрокаДокумента.РасходСуммаРозн);
				
				РеализованнаяНаценка = РозницаСервер.ПолучитьРеализованнуюНаценку(СтруктураПараметров);
				
				// Партии товаров в рознице
				ПартииТоваров = Движения.ПартииТоваровНаСкладах;
				
				Движение = ПартииТоваров.Добавить();
				
				Движение.ВидДвижения 	= ВидДвиженияНакопления.Расход;
				Движение.Период 		= Дата;
				Движение.Подразделение 	= Подразделение;
				Движение.Склад 			= ЦФО.Склад;
				Движение.ЦФО 			= ЦФО;
				Движение.Стоимость 		= СтрокаДокумента.РасходСуммаРозн - РеализованнаяНаценка;
				Движение.ПродСтоимость 	= СтрокаДокумента.РасходСуммаРозн;
				
				// Доходы
				Движение = Финрезультат.Добавить();
				
				Движение.Период 		= Дата;
				Движение.Подразделение	= Подразделение;
				Движение.Объект			= ЦФО;
				Движение.СтатьяДоходов	= Справочники.СтатьиДоходов.МаржинальныйДоход;
				Движение.СуммаДоходов	= РеализованнаяНаценка;
			КонецЕсли;
			
		ИначеЕсли (СтрокаДокумента.НаправлениеДвижения = Перечисления.НаправленияДвижения.ВозвратКредита) Тогда
			
			НоваяПроводка = Проводки.Добавить();
			НоваяПроводка.Подразделение = Подразделение;
			НоваяПроводка.Период	= Дата;
			НоваяПроводка.СчетДт = ПланыСчетов.Внутренний.КредитыПолученные;
			НоваяПроводка.СубконтоДт.Контрагенты = СтрокаДокумента.Объект;
			НоваяПроводка.СубконтоДт.Отделы = Отдел;
			
			НоваяПроводка.СчетКт = ПланыСчетов.Внутренний.ТоварыВРознице;
			НоваяПроводка.СубконтоКт.Магазины = Магазин;
			НоваяПроводка.СубконтоКт.Отделы = Отдел;
			НоваяПроводка.Сумма	= СтрокаДокумента.РасходСуммаРозн;
			
			НоваяПроводка.Содержание	= "Возврат кредита: "+ СокрЛП(СтрокаДокумента.Комментарий);
			
		// ДООЦЕНКА
		ИначеЕсли (СтрокаДокумента.НаправлениеДвижения = Перечисления.НаправленияДвижения.Дооценка) Тогда
			
			НоваяПроводка = Проводки.Добавить();
			НоваяПроводка.Подразделение = Подразделение;
			НоваяПроводка.Период	= Дата;
			НоваяПроводка.СчетКт = ПланыСчетов.Внутренний.Дооценка;
			
			
			НоваяПроводка.СчетДт = ПланыСчетов.Внутренний.ТоварыВРознице;
			НоваяПроводка.СубконтоДт.Магазины = Магазин;
			НоваяПроводка.СубконтоДт.Отделы = Отдел;
			НоваяПроводка.Сумма	= СтрокаДокумента.ПриходСуммаРозн;
			
			НоваяПроводка.Содержание	= "Дооценка: "+ СокрЛП(СтрокаДокумента.Комментарий);

			
			НоваяПроводка = Проводки.Добавить();
			НоваяПроводка.Подразделение = Подразделение;
			НоваяПроводка.Период	= Дата;
			НоваяПроводка.СчетДт = ПланыСчетов.Внутренний.Дооценка;
			
			
			НоваяПроводка.СчетКт = ПланыСчетов.Внутренний.РозничнаяНаценкаБаза;
			НоваяПроводка.СубконтоКт.Магазины = Магазин;
			НоваяПроводка.СубконтоКт.Отделы = Отдел;
			НоваяПроводка.Сумма	= СтрокаДокумента.ПриходСуммаРозн;
			
			НоваяПроводка.Содержание	= "Дооценка: "+ СокрЛП(СтрокаДокумента.Комментарий);
			
			Если Ложь Тогда
				ЦФО = Отдел;
				
				// РЕГИСТРЫ
				Движение = Финрезультат.Добавить();
				Движение.Период 		= Дата;
				
				Движение.Подразделение	= Подразделение;
				Движение.СтатьяДоходов	= Справочники.СтатьиДоходов.Переоценка;
				Движение.Объект			= ЦФО;
				Движение.СуммаДоходов	= СтрокаДокумента.ПриходСуммаРозн;
				
				// Партии товаров в рознице
				ПартииТоваров = Движения.ПартииТоваровНаСкладах;
				Движение = ПартииТоваров.Добавить();
				
				Движение.ВидДвижения 	= ВидДвиженияНакопления.Приход;
				Движение.Период 		= Дата;
				Движение.Подразделение 	= Подразделение;
				Движение.Склад 			= ЦФО.Склад;
				Движение.ЦФО 			= ЦФО;
				Движение.Стоимость 		= СтрокаДокумента.ПриходСуммаРозн;
				Движение.ПродСтоимость 	= СтрокаДокумента.ПриходСуммаРозн;
				
				ПартииТоваров.Записать();
			КонецЕсли;
			
		ИначеЕсли (СтрокаДокумента.НаправлениеДвижения = Перечисления.НаправленияДвижения.Уценка) Тогда
			
			НоваяПроводка = Проводки.Добавить();
			НоваяПроводка.Подразделение = Подразделение;
			НоваяПроводка.Период	= Дата;
			НоваяПроводка.СчетДт = ПланыСчетов.Внутренний.Уценка;
			//НоваяПроводка.СубконтоДт.СтатьиРасходов = СтрокаДокумента.Объект;
			//НоваяПроводка.СубконтоДт.Подразделения = Магазин;
			
			НоваяПроводка.СчетКт = ПланыСчетов.Внутренний.ТоварыВРознице;
			НоваяПроводка.СубконтоКт.Магазины = Магазин;
			НоваяПроводка.СубконтоКт.Отделы = Отдел;
			НоваяПроводка.Сумма	= СтрокаДокумента.РасходСуммаРозн;
			
			НоваяПроводка.Содержание	= "Уценка: "+ СокрЛП(СтрокаДокумента.Комментарий);

			
			НоваяПроводка = Проводки.Добавить();
			НоваяПроводка.Подразделение = Подразделение;
			НоваяПроводка.Период	= Дата;
			НоваяПроводка.СчетКт = ПланыСчетов.Внутренний.Уценка;
			//НоваяПроводка.СубконтоДт.СтатьиРасходов = СтрокаДокумента.Объект;
			//НоваяПроводка.СубконтоДт.Подразделения = Магазин;
			
			НоваяПроводка.СчетДт = ПланыСчетов.Внутренний.РозничнаяНаценкаБаза;
			НоваяПроводка.СубконтоДт.Магазины = Магазин;
			НоваяПроводка.СубконтоДт.Отделы = Отдел;
			НоваяПроводка.Сумма	= СтрокаДокумента.РасходСуммаРозн;
			
			НоваяПроводка.Содержание	= "Уценка: "+ СокрЛП(СтрокаДокумента.Комментарий);
			
			Если Ложь Тогда
				ЦФО = Отдел;
				
				// РЕГИСТРЫ
				Движение = Финрезультат.Добавить();
				Движение.Период 		= Дата;
				
				Движение.Подразделение	= Подразделение;
				Движение.СтатьяДоходов	= Справочники.СтатьиДоходов.Переоценка;
				Движение.Объект			= ЦФО;
				Движение.СуммаДоходов	= -1*СтрокаДокумента.РасходСуммаРозн;
				
				// Партии товаров в рознице
				ПартииТоваров = Движения.ПартииТоваровНаСкладах;
				Движение = ПартииТоваров.Добавить();
				
				Движение.ВидДвижения 	= ВидДвиженияНакопления.Приход;
				Движение.Период 		= Дата;
				Движение.Подразделение 	= Подразделение;
				Движение.Склад 			= ЦФО.Склад;
				Движение.ЦФО 			= ЦФО;
				Движение.Стоимость 		= -1*СтрокаДокумента.РасходСуммаРозн;
				Движение.ПродСтоимость 	= -1*СтрокаДокумента.РасходСуммаРозн;
				
				ПартииТоваров.Записать();
			КонецЕсли;
			
		ИначеЕсли (СтрокаДокумента.НаправлениеДвижения = Перечисления.НаправленияДвижения.Недостачи) Тогда
			
			НоваяПроводка = Проводки.Добавить();
			НоваяПроводка.Подразделение = Подразделение;
			НоваяПроводка.Период	= Дата;
			НоваяПроводка.СчетДт = ПланыСчетов.Внутренний.Недостачи;
			//НоваяПроводка.СубконтоДт.СтатьиРасходов = СтрокаДокумента.Объект;
			//НоваяПроводка.СубконтоДт.Подразделения = Магазин;
			
			НоваяПроводка.СчетКт = ПланыСчетов.Внутренний.ТоварыВРознице;
			НоваяПроводка.СубконтоКт.Магазины = Магазин;
			НоваяПроводка.СубконтоКт.Отделы = Отдел;
			НоваяПроводка.Сумма	= СтрокаДокумента.РасходСуммаРозн;
			
			// спишем недостачи на расходы
			НоваяПроводка = Проводки.Добавить();
			НоваяПроводка.Подразделение = Подразделение;
			НоваяПроводка.Период	= Дата;
			НоваяПроводка.СчетКт = ПланыСчетов.Внутренний.Недостачи;
			//НоваяПроводка.СубконтоДт.СтатьиРасходов = СтрокаДокумента.Объект;
			//НоваяПроводка.СубконтоДт.Подразделения = Магазин;
			
			НоваяПроводка.СчетДт = ПланыСчетов.Внутренний.РасходыПрямые;
			НоваяПроводка.СубконтоДт.Магазины = Магазин;
			НоваяПроводка.СубконтоДт.Отделы = Отдел;
			НоваяПроводка.СубконтоДт.СтатьиРасходов = Справочники.СтатьиЗатрат.СписаниеНедостачи;
			
			НоваяПроводка.Сумма	= СтрокаДокумента.РасходСуммаРозн;
			
			НоваяПроводка.Содержание	= "Недостачи: "+ СокрЛП(СтрокаДокумента.Комментарий);
			
			БазаДляСписанияНаценки = БазаДляСписанияНаценки + СтрокаДокумента.РасходСуммаРозн;
			
			Если Ложь Тогда
				ЦФО = Отдел;
				
				// РЕГИСТРЫ
				Движение = Финрезультат.Добавить();
				Движение.Период 		= Дата;
				
				Движение.Подразделение	= Подразделение;
				Движение.СтатьяЗатрат	= Справочники.СтатьиЗатрат.Списание;
				Движение.Объект			= ЦФО;
				Движение.СуммаРасходов	= СтрокаДокумента.РасходСуммаРозн;
				
				// Партии товаров в рознице
				ПартииТоваров = Движения.ПартииТоваровНаСкладах;
				Движение = ПартииТоваров.Добавить();
				
				Движение.ВидДвижения 	= ВидДвиженияНакопления.Расход;
				Движение.Период 		= Дата;
				Движение.Подразделение 	= Подразделение;
				Движение.Склад 			= ЦФО.Склад;
				Движение.ЦФО 			= ЦФО;
				Движение.Стоимость 		= СтрокаДокумента.РасходСуммаРозн;
				Движение.ПродСтоимость 	= СтрокаДокумента.РасходСуммаРозн;
				
				ПартииТоваров.Записать();
				
			КонецЕсли;
			

		ИначеЕсли (СтрокаДокумента.НаправлениеДвижения = Перечисления.НаправленияДвижения.Дегустация) Тогда
			//Если (СтрокаДокумента.Объект.База) Тогда
				СчетВзаиморасчетов = ПланыСчетов.Внутренний.ПоставщикиБаза;
				СчетВозвратов	= ПланыСчетов.Внутренний.ВозвратыБаза;
			//Иначе
			//	СчетВзаиморасчетов = ПланыСчетов.Внутренний.ПоставщикиПрочие;
			//	СчетВозвратов	= ПланыСчетов.Внутренний.ВозвратыПрочие;
			//КонецЕсли;
			
			
			НоваяПроводка = Проводки.Добавить();
			НоваяПроводка.Подразделение = Подразделение;
			НоваяПроводка.Период	= Дата;
			
			НоваяПроводка.СчетДт = СчетВозвратов;
			НоваяПроводка.СубконтоДт.Контрагенты = СтрокаДокумента.Объект;
			
			НоваяПроводка.СчетКт = ПланыСчетов.Внутренний.ТоварыВРознице;
			НоваяПроводка.СубконтоКт.Магазины = Магазин;
			НоваяПроводка.СубконтоКт.Отделы = Отдел;
			
			НоваяПроводка.Сумма	= СтрокаДокумента.РасходСуммаРозн;
			НоваяПроводка.Содержание	= "Дегустация: "+ СокрЛП(СтрокаДокумента.Комментарий)+ СокрЛП(СтрокаДокумента.Объект);

			
			НоваяПроводка = Проводки.Добавить();
			НоваяПроводка.Подразделение = Подразделение;
			НоваяПроводка.Период	= Дата;
			
			НоваяПроводка.СчетДт = СчетВзаиморасчетов;
			НоваяПроводка.СубконтоДт.Контрагенты = СтрокаДокумента.Объект;
			НоваяПроводка.СубконтоДт.ДокументПоставки = СтрокаДокумента.Комментарий;
			НоваяПроводка.СубконтоДт.Отделы = Отдел;
			



			НоваяПроводка.СчетКт = СчетВозвратов;
			НоваяПроводка.СубконтоКт.Контрагенты = СтрокаДокумента.Объект;
			
			НоваяПроводка.Сумма	= СтрокаДокумента.РасходСумма;

			
			// списание наценки
			НоваяПроводка = Проводки.Добавить();
			НоваяПроводка.Подразделение = Подразделение;
			НоваяПроводка.Период	= Дата;
			
			НоваяПроводка.СчетДт = ПланыСчетов.Внутренний.РозничнаяНаценкаПрочее;
			НоваяПроводка.СубконтоДт.Магазины = Магазин;
			НоваяПроводка.СубконтоДт.Отделы = Отдел;

			НоваяПроводка.СчетКт = СчетВозвратов;
			НоваяПроводка.СубконтоКт.Контрагенты = СтрокаДокумента.Объект;
			
			НоваяПроводка.Сумма	= (СтрокаДокумента.РасходСуммаРозн - СтрокаДокумента.РасходСумма);
			
		ИначеЕсли (СтрокаДокумента.НаправлениеДвижения = Перечисления.НаправленияДвижения.ВозвратПоставщику) Тогда
			
			//Если (СтрокаДокумента.Объект.База) Тогда
				СчетВзаиморасчетов = ПланыСчетов.Внутренний.ПоставщикиБаза;
				СчетВозвратов	= ПланыСчетов.Внутренний.ВозвратыБаза;
			//Иначе
			//	СчетВзаиморасчетов = ПланыСчетов.Внутренний.ПоставщикиПрочие;
			//	СчетВозвратов	= ПланыСчетов.Внутренний.ВозвратыПрочие;
			//КонецЕсли;
			
			
			НоваяПроводка = Проводки.Добавить();
			НоваяПроводка.Подразделение = Подразделение;
			НоваяПроводка.Период	= Дата;
			
			НоваяПроводка.СчетДт = СчетВозвратов;
			НоваяПроводка.СубконтоДт.Контрагенты = СтрокаДокумента.Объект;
			
			НоваяПроводка.СчетКт = ПланыСчетов.Внутренний.ТоварыВРознице;
			НоваяПроводка.СубконтоКт.Магазины = Магазин;
			НоваяПроводка.СубконтоКт.Отделы = Отдел;
			
			НоваяПроводка.Сумма	= СтрокаДокумента.РасходСуммаРозн;
			НоваяПроводка.Содержание	= "Возврат: "+ СокрЛП(СтрокаДокумента.Комментарий)+ СокрЛП(СтрокаДокумента.Объект);

			
			НоваяПроводка = Проводки.Добавить();
			НоваяПроводка.Подразделение = Подразделение;
			НоваяПроводка.Период	= Дата;
			
			НоваяПроводка.СчетДт = СчетВзаиморасчетов;
			НоваяПроводка.СубконтоДт.Контрагенты = СтрокаДокумента.Объект;
			НоваяПроводка.СубконтоДт.ДокументПоставки = СтрокаДокумента.Комментарий;
			НоваяПроводка.СубконтоДт.Отделы = Отдел;
			



			НоваяПроводка.СчетКт = СчетВозвратов;
			НоваяПроводка.СубконтоКт.Контрагенты = СтрокаДокумента.Объект;
			
			НоваяПроводка.Сумма	= СтрокаДокумента.РасходСумма;

			
			// списание наценки
			НоваяПроводка = Проводки.Добавить();
			НоваяПроводка.Подразделение = Подразделение;
			НоваяПроводка.Период	= Дата;
			
			НоваяПроводка.СчетДт = ПланыСчетов.Внутренний.РозничнаяНаценкаПрочее;
			НоваяПроводка.СубконтоДт.Магазины = Магазин;
			НоваяПроводка.СубконтоДт.Отделы = Отдел;

			НоваяПроводка.СчетКт = СчетВозвратов;
			НоваяПроводка.СубконтоКт.Контрагенты = СтрокаДокумента.Объект;
			
			НоваяПроводка.Сумма	= (СтрокаДокумента.РасходСуммаРозн - СтрокаДокумента.РасходСумма);
			
			// если это не АвтоЗаполнение ... проведем по регистрам
			
			
		КонецЕсли;
		
		
		
		
	КонецЦикла;
	
	// Спишем наценку.....
	
	ПриходВРозницу = СтрокиДокумента.Итог("ПриходСуммаРозн");
	
	Если (Результат.ТоварыВРознице + ПриходВРозницу) < СтрокиДокумента.Итог("РасходСуммаРозн") И НЕ ЭтоКорректировка Тогда
		
		сообщить("списываем из розницы больше, чем на остатке. документ не проведен !");
		Отказ = Истина;
		
	ИначеЕсли НЕ(БазаДляСписанияНаценки = 0) Тогда
		// спишем наценку....
		НоваяПроводка = Проводки.Добавить();
		НоваяПроводка.Подразделение = Подразделение;
		НоваяПроводка.Период	= Дата;
		
		НоваяПроводка.СчетДт = ПланыСчетов.Внутренний.РозничнаяНаценкаБаза;
		НоваяПроводка.СубконтоДт.Магазины = Магазин;
		НоваяПроводка.СубконтоДт.Отделы = Отдел;
		
		НоваяПроводка.СчетКт = ПланыСчетов.Внутренний.Доходы;
		НоваяПроводка.СубконтоКт.Магазины = Магазин;
		НоваяПроводка.СубконтоКт.Отделы = Отдел;
		
		КоэффСписания = (Результат.НаценкаВРознице + ПриходНаценки)  / (Результат.ТоварыВРознице + ПриходВРозницу);
		
		НоваяПроводка.Сумма	= (КоэффСписания) * БазаДляСписанияНаценки;
		
		//ПроцентНаценки = БазаДляСписанияНаценки / (БазаДляСписанияНаценки - НоваяПроводка.Сумма) * 100 - 100;
		ПроцентНаценки = 100 - ((БазаДляСписанияНаценки - НоваяПроводка.Сумма) / БазаДляСписанияНаценки) * 100 ;

		
		НоваяПроводка.Содержание	= "Списание наценки (" + Формат(ПроцентНаценки, "ЧДЦ=4")+ "%)";
		
	
	КонецЕсли;
	
	//ДенежныеСредства.Записать();
	//Финрезультат.Записать();
	
	Проводки.Записать();
	ДокументыПродажи.Записать();
	
КонецПроцедуры

Процедура ПередЗаписью(отказ, режимЗаписи, режимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли; 
	
	Если Подразделение.Пустая() Тогда
		
		ТекстСообщения = НСтр("ru = 'Запись невозможна без заполнения Подразделения.'");
		ПроверкаДанныхКлиентСервер.СообщитьОбОшибке(отказ, текстСообщения, ЭтотОбъект, "Подразделение");
		
	КонецЕсли;
	
	Если ПометкаУдаления = Ссылка.ПометкаУдаления Тогда
		
		Если РежимЗаписи <> РежимЗаписиДокумента.ОтменаПроведения Тогда
			
			Если Не Отказ Тогда
				
				ПриходСуммаРозн = ОбщегоНазначенияСервер.ПолучитьСуммуДокумента(ЭтотОбъект, "СтрокиДокумента",,"ПриходСуммаРозн");	
				РасходСуммаРозн = ОбщегоНазначенияСервер.ПолучитьСуммуДокумента(ЭтотОбъект, "СтрокиДокумента",,"РасходСуммаРозн");	
				
			КонецЕсли; 
			
		КонецЕсли;
		
	 КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(объектКопирования)
	
	ЗаполнениеОбъектовСервер.ЗаполнитьДанныеСкопированногоДокумента(ЭтотОбъект, ОбъектКопирования);
	
КонецПроцедуры

#КонецОбласти 