////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ

// Процедура - обработчик события "Перед записью"
//
// Параметры
//  Отказ     - <Булево>
//            - Признак отказа от записи набора регистра сведений. Если в теле
//              процедуры-обработчика установить данному параметру значение
//              Истина, запись выполнена не будет. Значение по умолчанию: Ложь
//
//  Замещение - <Булево>
//            - Режим записи набора. Истина - запись осуществляется с заменой
//              существующих в базе данных записей набора. Ложь - запись
//              осуществляется с "дописыванием" текущего набора записей.
//
Процедура ___ПередЗаписью(Отказ, Замещение)

	Описание        = "";

	Если Не ОбменДанными.Загрузка Тогда
		Врем   = "";
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|    ВЫБОР
		|        КОГДА РегТовары.Код = &Код ТОГДА
		|            ""Товары с таким значением кода для данного POS уже существуют:""
		|        ИНАЧЕ
		|            ""Товары с таким набором данных для данного POS уже существуют:""
		|    КОНЕЦ                                               КАК ТекстОшибки,
		|    ПРЕДСТАВЛЕНИЕ(&ПОС)	                             КАК ПОС,
		|    ПРЕДСТАВЛЕНИЕ(&ТипПО)	                             КАК ТипПО,
		|    ПРЕДСТАВЛЕНИЕ(РегТовары.Код)                        КАК Код,
		|    ПРЕДСТАВЛЕНИЕ(РегТовары.Номенклатура)               КАК Номенклатура,
		|    ПРЕДСТАВЛЕНИЕ(РегТовары.ХарактеристикаНоменклатуры) КАК ХарактеристикаНоменклатуры,
		|    ПРЕДСТАВЛЕНИЕ(РегТовары.СерияНоменклатуры)          КАК СерияНоменклатуры,
		|    ПРЕДСТАВЛЕНИЕ(РегТовары.ЕдиницаИзмерения)           КАК ЕдиницаИзмерения
		|ИЗ
		|    РегистрСведений.Р_ТоварыНаПОС КАК РегТовары
		|ГДЕ
		|    РегТовары.ПОС = &ПОС
		|    И РегТовары.ТипПО = &ТипПО
		|    И ((РегТовары.Код = &Код)
		|        ИЛИ
		|        (РегТовары.Номенклатура = &Номенклатура)
		|         И РегТовары.ХарактеристикаНоменклатуры = &ХарактеристикаНоменклатуры
		|         И РегТовары.СерияНоменклатуры = &СерияНоменклатуры
		|         И РегТовары.ЕдиницаИзмерения = &ЕдиницаИзмерения)");

		Для Каждого Врем Из ЭтотОбъект Цикл
			Если Врем.Номенклатура.Набор Тогда
				Описание    = Описание
				              + ?(ПустаяСтрока(Описание),
				                  " - ",
				                  "
				                  | - ")
				              + "Работа с наборами не поддерживается.";
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(Врем.ЕдиницаИзмерения) Тогда
				Описание    = Описание
				              + ?(ПустаяСтрока(Описание),
				                  " - ",
				                  "
				                  | - ")
				              + "Не задана единица измерения.";
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(Врем.ПОС) Тогда
				Описание    = Описание
				              + ?(ПустаяСтрока(Описание),
				                  " - ",
				                  "
				                  | - ")
				              + "Не задано значение POS.";
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(Врем.ТипПО) Тогда
				Описание    = Описание
				              + ?(ПустаяСтрока(Описание),
				                  " - ",
				                  "
				                  | - ")
				              + "Не задано значение Тип ПО.";
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(Врем.Код) Тогда
				Описание    = Описание
				              + ?(ПустаяСтрока(Описание),
				                  " - ",
				                  "
				                  | - ")
				              + "Не задан код.";
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(Врем.Номенклатура) Тогда
				Описание    = Описание
				              + ?(ПустаяСтрока(Описание),
				                  " - ",
				                  "
				                  | - ")
				              + "Не задана номенклатура.";
			КонецЕсли;
			Запрос.УстановитьПараметр("Код",                        Врем.Код);
			Запрос.УстановитьПараметр("ПОС",	                    Врем.ПОС);
			Запрос.УстановитьПараметр("ТипПО",	                    Врем.ТипПО);
			Запрос.УстановитьПараметр("Номенклатура",               Врем.Номенклатура);
			Запрос.УстановитьПараметр("ХарактеристикаНоменклатуры", Врем.ХарактеристикаНоменклатуры);
			Запрос.УстановитьПараметр("СерияНоменклатуры",          Врем.СерияНоменклатуры);
			Запрос.УстановитьПараметр("ЕдиницаИзмерения",           Врем.ЕдиницаИзмерения);
			Выборка = Запрос.Выполнить();
			Если Выборка.Пустой() Тогда
				Продолжить;
			КонецЕсли;
			Выборка = Выборка.Выбрать();
			Пока Выборка.Следующий() Цикл
				Ошибка   =                                Выборка.ТекстОшибки                        + Символы.ПС
				           + "   POS: """             	+ Выборка.ПОС	                     + """"  + Символы.ПС
				           + "   Тип ПО: """           	+ Выборка.ТипПО	                     + """"  + Символы.ПС
				           + "   Код: """               + Выборка.Код                        + """"  + Символы.ПС
				           + "   Номенклатура: """      + Выборка.Номенклатура               + """"  + Символы.ПС
				           + "   Характеристика: """    + Выборка.ХарактеристикаНоменклатуры + """"  + Символы.ПС
				           + "   Серия: """             + Выборка.СерияНоменклатуры          + """"  + Символы.ПС
				           + "   Единица измерения: """ + Выборка.ЕдиницаИзмерения           + """"  + Символы.ПС;
				Описание = Описание
				           + ?(ПустаяСтрока(Описание),
				               " - ",
				               "
				               | - ")
				           + Ошибка;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;

	Если Не ПустаяСтрока(Описание) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(Описание, Отказ);
	КонецЕсли;

КонецПроцедуры // ПередЗаписью()

Процедура ПриЗаписи(Отказ, Замещение)
	
	Если Не ОбменДанными.Загрузка Тогда
		Для Каждого Врем Из ЭтотОбъект Цикл
			Узел = Р_МодульРегистрацииИзмененийПОС.ПолучитьУзелОбменаПОПОС(Врем.ПОС, Врем.ТипПО);
			Если НЕ ЗначениеЗаполнено(Узел) Тогда
				Продолжить;
			КонецЕсли;
			ОтборНоменклатуры = Новый Структура("Владелец", Врем.Номенклатура);
			Штрихкоды = РегистрыСведений.ШтрихкодыНоменклатуры.Выбрать(ОтборНоменклатуры);
			Пока Штрихкоды.Следующий() Цикл
				Набор = РегистрыСведений.Штрихкоды.СоздатьНаборЗаписей();
				Набор.Отбор.Штрихкод.Установить(Штрихкоды.Штрихкод, Истина);
				Набор.Отбор.Владелец.Установить(Штрихкоды.Владелец, Истина);
				//Набор.Отбор.ТипШтрихкода.Установить(Штрихкоды.ТипШтрихкода, Истина);
				Набор.Отбор.ЕдиницаИзмерения.Установить(Штрихкоды.ЕдиницаИзмерения, Истина);
				//Набор.Отбор.ХарактеристикаНоменклатуры.Установить(Штрихкоды.ХарактеристикаНоменклатуры, Истина);
				ПланыОбмена.ЗарегистрироватьИзменения(Узел, Набор);
			КонецЦикла
		КонецЦикла
	КонецЕсли

КонецПроцедуры
