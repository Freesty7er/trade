
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПЕЧАТИ ФОРМЫ

Функция ПечатнаяФормаВедомостьПоРазвозуТовара(массивОбъектов, объектыПечати, имяМакета, коллекцияПечатныхФорм)
	
	табличныйДокумент = Новый ТабличныйДокумент;
	
	табличныйДокумент.ИмяПараметровПечати	 = "ПАРАМЕТРЫ_ПЕЧАТИ_ЗаданиеВодителю_ПечатьВедомостьПоРазвозуТовара";
	табличныйДокумент.КлючПараметровПечати	 = "ПараметрыПечати_ВедомостьПоРазвозуТовара";
	
	первыйДокумент = Истина;
	
	Для Каждого элементМассивОбъектов Из массивОбъектов Цикл
		
		Если Не первыйДокумент Тогда
			табличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		первыйДокумент = Ложь;
		
		номерСтрокиНачало = табличныйДокумент.ВысотаТаблицы + 1;
		
		Если имяМакета = "ВедомостьПоРазвозуТовара" Тогда
			
			запрос = Новый Запрос;
			
			#Область ТекстЗапроса
			
			запрос.Текст = 
			"ВЫБРАТЬ
			|	ЗаданиеВодителюТочкиМаршрута.ВремяПрибытияВТочку,
			|	ЗаданиеВодителюТочкиМаршрута.Контрагент,
			|	ЗаданиеВодителюТочкиМаршрута.ПозицияВМаршруте,
			|	ПОДСТРОКА(КпкЗаявкаЗапасы.Ссылка.Комментарий, 1, 80) КАК Комментарий,
			|	СУММА(КпкЗаявкаЗапасы.Количество * КпкЗаявкаЗапасы.Номенклатура.Вес) КАК ОбщийВес,
			|	КпкЗаявкаЗапасы.Ссылка.Менеджер
			|ПОМЕСТИТЬ вт_ТочкиМаршрута
			|ИЗ
			|	Документ.ЗаданиеВодителю.ТочкиМаршрута КАК ЗаданиеВодителюТочкиМаршрута
			|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КпкЗаявка.Запасы КАК КпкЗаявкаЗапасы
			|		ПО ЗаданиеВодителюТочкиМаршрута.Заявка = КпкЗаявкаЗапасы.Ссылка
			|ГДЕ
			|	ЗаданиеВодителюТочкиМаршрута.Ссылка = &Ссылка
			|
			|СГРУППИРОВАТЬ ПО
			|	ЗаданиеВодителюТочкиМаршрута.ВремяПрибытияВТочку,
			|	ЗаданиеВодителюТочкиМаршрута.Контрагент,
			|	ЗаданиеВодителюТочкиМаршрута.ПозицияВМаршруте,
			|	ПОДСТРОКА(КпкЗаявкаЗапасы.Ссылка.Комментарий, 1, 80),
			|	КпкЗаявкаЗапасы.Ссылка.Менеджер
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВложенныйЗапрос.Комментарий,
			|	ВложенныйЗапрос.Контрагент,
			|	ВложенныйЗапрос.Менеджер,
			|	ВложенныйЗапрос.ОбщийВес КАК ОбщийВес,
			|	МАКСИМУМ(вт_ТочкиМаршрута.ПозицияВМаршруте) КАК ПозицияВМаршруте,
			|	"""" КАК ВремяПрибытияВТочку,
			|	ИСТИНА КАК ЭтоВозврат
			|ИЗ
			|	(ВЫБРАТЬ
			|		ПОДСТРОКА(ВозвратОтПокупателяЗапасы.Ссылка.Комментарий, 1, 80) КАК Комментарий,
			|		ВозвратОтПокупателяЗапасы.Ссылка.Контрагент КАК Контрагент,
			|		ВозвратОтПокупателяЗапасы.Ссылка.Менеджер КАК Менеджер,
			|		СУММА(ВозвратОтПокупателяЗапасы.Номенклатура.Вес * ВозвратОтПокупателяЗапасы.Количество) КАК ОбщийВес
			|	ИЗ
			|		Документ.ВозвратОтПокупателя.Запасы КАК ВозвратОтПокупателяЗапасы
			|	ГДЕ
			|		ВозвратОтПокупателяЗапасы.Ссылка.ДатаСоздания МЕЖДУ НАЧАЛОПЕРИОДА(&ЗаданиеВодителюДата, ДЕНЬ) И КОНЕЦПЕРИОДА(&ЗаданиеВодителюДата, ДЕНЬ)
			|		И НЕ ВозвратОтПокупателяЗапасы.Ссылка.ПометкаУдаления
			|		И НЕ ВозвратОтПокупателяЗапасы.Ссылка.Проведен
			|	
			|	СГРУППИРОВАТЬ ПО
			|		ПОДСТРОКА(ВозвратОтПокупателяЗапасы.Ссылка.Комментарий, 1, 80),
			|		ВозвратОтПокупателяЗапасы.Ссылка.Контрагент,
			|		ВозвратОтПокупателяЗапасы.Ссылка.Менеджер) КАК ВложенныйЗапрос
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ вт_ТочкиМаршрута КАК вт_ТочкиМаршрута
			|		ПО ВложенныйЗапрос.Контрагент = вт_ТочкиМаршрута.Контрагент
			|
			|СГРУППИРОВАТЬ ПО
			|	ВложенныйЗапрос.Комментарий,
			|	ВложенныйЗапрос.Контрагент,
			|	ВложенныйЗапрос.Менеджер,
			|	ВложенныйЗапрос.ОбщийВес
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	вт_ТочкиМаршрута.Комментарий,
			|	вт_ТочкиМаршрута.Контрагент,
			|	вт_ТочкиМаршрута.Менеджер,
			|	вт_ТочкиМаршрута.ОбщийВес,
			|	вт_ТочкиМаршрута.ПозицияВМаршруте,
			|	вт_ТочкиМаршрута.ВремяПрибытияВТочку,
			|	ЛОЖЬ
			|ИЗ
			|	вт_ТочкиМаршрута КАК вт_ТочкиМаршрута
			|
			|УПОРЯДОЧИТЬ ПО
			|	ПозицияВМаршруте,
			|	ЭтоВозврат
			|ИТОГИ
			|	СУММА(ОбщийВес)
			|ПО
			|	ОБЩИЕ";
			
			#КонецОбласти
			
			запрос.УстановитьПараметр("Ссылка", элементМассивОбъектов);
			запрос.УстановитьПараметр("ЗаданиеВодителюДата", элементМассивОбъектов.Дата);
			
			результат = запрос.Выполнить();
			
			макет = УправлениеПечатью.ПолучитьМакет("Документ.ЗаданиеВодителю.ВедомостьПоРазвозуТовара");
			
			выборкаОбщийВес = результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			выборкаОбщийВес.Следующий();
			
			общийВес = выборкаОбщийВес.ОбщийВес;
			
			областьШапка = макет.ПолучитьОбласть("шапка");
			
			областьШапка.Параметры.Водитель			 = элементМассивОбъектов.Водитель;
			областьШапка.Параметры.МаршрутРазвоза	 = элементМассивОбъектов.МаршрутРазвоза;
			областьШапка.Параметры.Автомобиль		 = элементМассивОбъектов.Автомобиль;
			областьШапка.Параметры.ОбщийВес			 = общийВес;
			областьШапка.Параметры.Дата				 = Формат(КонецДня(элементМассивОбъектов.Дата) + 1, "ДЛФ=Д");
			
			табличныйДокумент.Вывести(областьШапка);
			
			номерСтроки = 0;
			выборкаСтроки = выборкаОбщийВес.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока выборкаСтроки.Следующий() Цикл
				
				областьСтрока = макет.ПолучитьОбласть("строка");
				
				областьСтрока.Параметры.Заполнить(выборкаСтроки);
				
				Если выборкаСтроки.ЭтоВозврат Тогда
					областьСтрока.Области.строка.Шрифт = Новый Шрифт("Arial", 10, Истина);
					областьСтрока.Параметры.ПозицияВМаршруте = "";
					//областьСтрока.Параметры.ВремяПрибытияВТочку = "";
				Иначе
					номерСтроки = номерСтроки + 1;
					областьСтрока.Параметры.ПозицияВМаршруте = номерСтроки;
				КонецЕсли;
				
				табличныйДокумент.Вывести(областьСтрока);
				
			КонецЦикла;
			
			областьПодвал = макет.ПолучитьОбласть("подвал");
			
			областьПодвал.Параметры.ОбщийВес = общийВес;
			
			табличныйДокумент.Вывести(областьПодвал);
			
			табличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
			
		КонецЕсли;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(табличныйДокумент, номерСтрокиНачало, объектыПечати, элементМассивОбъектов);
		
	КонецЦикла;
	
	табличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат табличныйДокумент;
	
КонецФункции

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(массивОбъектов, параметрыПечати, коллекцияПечатныхФорм, объектыПечати, параметрыВывода) Экспорт
	
	параметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(коллекцияПечатныхФорм, "ВедомостьПоРазвозуТовара") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(коллекцияПечатныхФорм, "ВедомостьПоРазвозуТовара", "Ведомость по развозу товара", ПечатнаяФормаВедомостьПоРазвозуТовара(массивОбъектов, объектыПечати, "ВедомостьПоРазвозуТовара", коллекцияПечатныхФорм));
	КонецЕсли;
	
КонецПроцедуры