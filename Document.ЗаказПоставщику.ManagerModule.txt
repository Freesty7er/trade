
#Область изменения_20190305_Карпачев_А_Ю

Процедура ВывестиШапкуЭлементаМассиваОбъектов(табличныйДокумент, номерСтрокиНачало, элементМассиваОбъектов)
	
	шрифтШапки = Новый Шрифт("Arial", 11, Истина, , , , );
	
	ячейкаЗаказПоставщику		 = табличныйДокумент.Область("R" + Строка(номерСтрокиНачало + 1) + "C1");
	ячейкаЗаказПоставщику.Текст	 = "Заказ поставщику " + элементМассиваОбъектов.Номер + " от " + Формат(элементМассиваОбъектов.Дата, "ДЛФ=Д") + "г.";
	ячейкаЗаказПоставщику.Шрифт	 = шрифтШапки;
	
	ячейкаПоставщик			 = табличныйДокумент.Область("R" + Строка(номерСтрокиНачало + 2) + "C1");
	ячейкаПоставщик.Текст	 = "Поставщик: " + элементМассиваОбъектов.Контрагент;
	ячейкаПоставщик.Шрифт	 = шрифтШапки;
	
	ячейкаПериодПланирования		 = табличныйДокумент.Область("R" + Строка(номерСтрокиНачало + 3) + "C1");
	ячейкаПериодПланирования.Текст	 = "Период планирования: " + Формат(элементМассиваОбъектов.ПериодПланированияДатаНачала, "ДЛФ=Д") + "-" +Формат(элементМассиваОбъектов.ПериодПланированияДатаОкончания, "ДЛФ=Д"); 
	ячейкаПериодПланирования.Шрифт	 = шрифтШапки;
	
	ячейкаПробел		 = табличныйДокумент.Область("R" + Строка(номерСтрокиНачало + 4) + "C1");
	ячейкаПробел.Текст	 = "";
	
КонецПроцедуры

Функция АнализПланирования(массивОбъектов, объектыПечати, имяМакета, коллекцияПечатныхФорм)
	
	табличныйДокумент = Новый ТабличныйДокумент;
	
	табличныйДокумент.КлючПараметровПечати = "ПараметрыПечати_ЗаказПоставщику";
	
	первыйДокумент = Истина;
	
	Для Каждого элементМассиваОбъектов Из массивОбъектов Цикл
		
		Если Не первыйДокумент Тогда
			табличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		первыйДокумент = Ложь;
		
		номерСтрокиНачало = табличныйДокумент.ВысотаТаблицы + 1;
		
		ВывестиШапкуЭлементаМассиваОбъектов(табличныйДокумент, номерСтрокиНачало, элементМассиваОбъектов);
		
		схемаКомпоновкиДанных = ПолучитьМакет("АнализПланирования");
		
		компоновщикНастроекКомпоновкиДанных = Новый КомпоновщикНастроекКомпоновкиДанных();
		
		компоновщикНастроекКомпоновкиДанных.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(схемаКомпоновкиДанных));
		
		компоновщикНастроекКомпоновкиДанных.ЗагрузитьНастройки(схемаКомпоновкиДанных.НастройкиПоУмолчанию);
		
		настройки = компоновщикНастроекКомпоновкиДанных.Настройки;
		
		настройки.ПараметрыДанных.УстановитьЗначениеПараметра("ЗаказПоставщикуСсылка", элементМассиваОбъектов);
		настройки.ПараметрыДанных.УстановитьЗначениеПараметра("Подразделение", элементМассиваОбъектов.Подразделение);
		настройки.ПараметрыДанных.УстановитьЗначениеПараметра("ПериодПланирования", Новый СтандартныйПериод(элементМассиваОбъектов.ПериодПланированияДатаНачала, КонецДня(элементМассиваОбъектов.ПериодПланированияДатаОкончания)));
		
		компоновщикМакетаКомпоновкиДанных = Новый КомпоновщикМакетаКомпоновкиДанных;
		
		макетКомпоновкиДанных = компоновщикМакетаКомпоновкиДанных.Выполнить(схемаКомпоновкиДанных, настройки);
		
		процессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
		
		процессорКомпоновкиДанных.Инициализировать(макетКомпоновкиДанных);
		
		процессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
		
		процессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент.УстановитьДокумент(табличныйДокумент);
		
		процессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент.Вывести(процессорКомпоновкиДанных);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(табличныйДокумент, номерСтрокиНачало, объектыПечати, элементМассиваОбъектов);
		
	КонецЦикла;
	
	табличныйДокумент.ФиксацияСверху = 0;
	табличныйДокумент.АвтоМасштаб	 = Истина;
	
	Возврат табличныйДокумент;
	
КонецФункции

#КонецОбласти

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов,
	ПараметрыПечати,
	КоллекцияПечатныхФорм,
	ОбъектыПечати,
	ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "БМК") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "БМК", "Заказ поставщику", ПечатнаяФорма(МассивОбъектов, ОбъектыПечати, "БМК"));
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "БМК_ОднаКолонка") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "БМК_ОднаКолонка", "Заказ поставщику", ПечатнаяФорма(МассивОбъектов, ОбъектыПечати, "БМК_ОднаКолонка"));
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "БМК_ОднаКолонка_СКодом") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "БМК_ОднаКолонка_СКодом", "Заказ поставщику", ПечатнаяФорма(МассивОбъектов, ОбъектыПечати, "БМК_ОднаКолонка_СКодом"));
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "БМК2017") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "БМК2017", "Заказ  поставщику", ПечатнаяФорма(МассивОбъектов, ОбъектыПечати, "БМК2017"));
		
		#Область изменения_20190305_Карпачев_А_Ю
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(коллекцияПечатныхФорм, "АнализПланирования") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(коллекцияПечатныхФорм, "АнализПланирования", "Анализ планирования", АнализПланирования(массивОбъектов, объектыПечати, "АнализПланирования", коллекцияПечатныхФорм));
		#КонецОбласти
	КонецЕсли;
	
	
КонецПроцедуры

Функция ПечатнаяФорма(МассивОбъектов, ОбъектыПечати, ИмяМакета)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПараметрыПечати_ЗаказПоставщику";
	
	ПервыйДокумент = Истина;
	
	Для Каждого ТекущийДокумент Из МассивОбъектов Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Если ИмяМакета = "БМК" Тогда
			
			запрос = Новый Запрос;
			
			#Область ТекстЗапроса
			
			запрос.Текст =
			"ВЫБРАТЬ
			|	ЗаказПоставщикуЗапасы.Номенклатура КАК Номенклатура,
			|	СУММА(ЗаказПоставщикуЗапасы.Количество) КАК Количество,
			|	ЗаказПоставщикуЗапасы.Номенклатура.ВидНоменклатуры КАК НоменклатураВидНоменклатуры
			|ИЗ
			|	Документ.ЗаказПоставщику.Запасы КАК ЗаказПоставщикуЗапасы
			|ГДЕ
			|	ЗаказПоставщикуЗапасы.Ссылка = &Ссылка
			|
			|СГРУППИРОВАТЬ ПО
			|	ЗаказПоставщикуЗапасы.Номенклатура.ВидНоменклатуры,
			|	ЗаказПоставщикуЗапасы.Номенклатура
			|
			|УПОРЯДОЧИТЬ ПО
			|	ЗаказПоставщикуЗапасы.Номенклатура.Наименование
			|ИТОГИ
			|	СУММА(Количество)
			|ПО
			|	НоменклатураВидНоменклатуры";
			
			#КонецОбласти 
			
			запрос.УстановитьПараметр("Ссылка", ТекущийДокумент);
			
			ТаблицаСостава = Новый ТаблицаЗначений;
			ТаблицаСостава.Колонки.Добавить("Раздел");
			ТаблицаСостава.Колонки.Добавить("Номенклатура1");
			ТаблицаСостава.Колонки.Добавить("Количество1");
			ТаблицаСостава.Колонки.Добавить("Номенклатура2");
			ТаблицаСостава.Колонки.Добавить("Количество2");
			
			ИтКоличество = 0;
			
			ВыборкаВидНоменклатуры = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "НоменклатураВидНоменклатуры");
			Пока ВыборкаВидНоменклатуры.Следующий() Цикл
				
				НомСтр = 0;
				
				Выборка = ВыборкаВидНоменклатуры.Выбрать();
				Пока Выборка.Следующий() Цикл
					
					НомСтр = НомСтр + 1;
					
					ИтКоличество = ИтКоличество + Выборка.Количество;
					
					Если НЕ(НомСтр/2 = Цел(НомСтр/2)) Тогда
						
						НоваяСтрока = ТаблицаСостава.Добавить();
						НоваяСтрока.Раздел = Выборка.НоменклатураВидНоменклатуры;
						НоваяСтрока.Номенклатура1 = Выборка.Номенклатура;
						НоваяСтрока.Количество1 = Выборка.Количество;
					Иначе
						НоваяСтрока.Номенклатура2 = Выборка.Номенклатура;
						НоваяСтрока.Количество2 = Выборка.Количество;
						
						
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЦикла;
			
			
			// Заполним набор данных....
			ВнешниеНаборыДанных = Новый Структура("Состав", ТаблицаСостава );
			
			СхемаКомпоновкиДанных = ПолучитьМакет("БМК");
			
			СхемаКомпоновкиДанных.Параметры[0].Значение = ТекущийДокумент.НомерЗаказа.Представление;
			СхемаКомпоновкиДанных.Параметры[1].Значение = ТекущийДокумент.Контрагент;
			СхемаКомпоновкиДанных.Параметры[2].Значение = НачалоДня(ТекущийДокумент.ДатаДоставки) - 24*60*60;
			СхемаКомпоновкиДанных.Параметры[3].Значение = ИтКоличество;
			
			
			Настройки = СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
			
			КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
			МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки);
			
			ПроцессорКомпоновкиДанных = Новый процессорКомпоновкиДанных;
			ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных);
			
			
			
			ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
			
			ПроцессорВывода.УстановитьДокумент(ТабличныйДокумент);
			процессорВывода.Вывести(ПроцессорКомпоновкиДанных);
			
			
			ТабличныйДокумент.ОтображатьСетку = Ложь;
			ТабличныйДокумент.ОтображатьЗаголовки = Ложь;
			
		ИначеЕсли Лев(ИмяМакета, 15) = "БМК_ОднаКолонка" Тогда
			
			запрос = Новый Запрос;
			
			#Область ТекстЗапроса
			
			запрос.Текст = 
			"ВЫБРАТЬ
			|	ЗаказПоставщикуЗапасы.Номенклатура КАК Номенклатура,
			|	СУММА(ЗаказПоставщикуЗапасы.Количество) КАК Количество,
			|	ЗаказПоставщикуЗапасы.Номенклатура.ВидНоменклатуры КАК НоменклатураВидНоменклатуры
			|ИЗ
			|	Документ.ЗаказПоставщику.Запасы КАК ЗаказПоставщикуЗапасы
			|ГДЕ
			|	ЗаказПоставщикуЗапасы.Ссылка = &Ссылка
			|
			|СГРУППИРОВАТЬ ПО
			|	ЗаказПоставщикуЗапасы.Номенклатура.ВидНоменклатуры,
			|	ЗаказПоставщикуЗапасы.Номенклатура
			|
			|УПОРЯДОЧИТЬ ПО
			|	ЗаказПоставщикуЗапасы.Номенклатура.Наименование
			|ИТОГИ
			|	СУММА(Количество)
			|ПО
			|	НоменклатураВидНоменклатуры";
			
			#КонецОбласти 
			
			запрос.УстановитьПараметр("Ссылка", ТекущийДокумент);
			
			ТаблицаСостава = Новый ТаблицаЗначений;
			ТаблицаСостава.Колонки.Добавить("Раздел");
			ТаблицаСостава.Колонки.Добавить("Номенклатура1");
			ТаблицаСостава.Колонки.Добавить("Ед1");
			ТаблицаСостава.Колонки.Добавить("Количество1");
			
			
			ИтКоличество = 0;
			
			ВыборкаВидНоменклатуры = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "НоменклатураВидНоменклатуры");
			Пока ВыборкаВидНоменклатуры.Следующий() Цикл
				
				НомСтр = 0;
				
				Выборка = ВыборкаВидНоменклатуры.Выбрать();
				Пока Выборка.Следующий() Цикл
					
					НомСтр = НомСтр + 1;
					
					ИтКоличество = ИтКоличество + Выборка.Количество;
					
					НоваяСтрока = ТаблицаСостава.Добавить();
					НоваяСтрока.Раздел = Выборка.НоменклатураВидНоменклатуры;
					НоваяСтрока.Номенклатура1 = Выборка.Номенклатура;
					НоваяСтрока.Ед1 = Выборка.Номенклатура.ЕдиницаИзмерения;
					НоваяСтрока.Количество1 = Выборка.Количество;
					
				КонецЦикла;
				
			КонецЦикла;
			
			
			// Заполним набор данных....
			ВнешниеНаборыДанных = Новый Структура("Состав", ТаблицаСостава );
			
			СхемаКомпоновкиДанных = ПолучитьМакет(ИмяМакета);
			
			СхемаКомпоновкиДанных.Параметры[0].Значение = ТекущийДокумент.НомерЗаказа.Представление;
			СхемаКомпоновкиДанных.Параметры[1].Значение = ТекущийДокумент.Контрагент;
			СхемаКомпоновкиДанных.Параметры[3].Значение = ИтКоличество;
			
			Если ИмяМакета = "БМК_ОднаКолонка" Тогда
				СхемаКомпоновкиДанных.Параметры[2].Значение = НачалоДня(ТекущийДокумент.ДатаДоставки); // - 24*60*60;
			Иначе
				СхемаКомпоновкиДанных.Параметры[2].Значение = НачалоДня(ТекущийДокумент.ДатаДоставки) - 24*60*60;
			КонецЕсли;
			
			
			Настройки = СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
			
			КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
			МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки);
			
			ПроцессорКомпоновкиДанных = Новый процессорКомпоновкиДанных;
			ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных);
			
			
			
			ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
			
			ПроцессорВывода.УстановитьДокумент(ТабличныйДокумент);
			процессорВывода.Вывести(ПроцессорКомпоновкиДанных);
			
			
			ТабличныйДокумент.ОтображатьСетку = Ложь;
			ТабличныйДокумент.ОтображатьЗаголовки = Ложь;
			ТабличныйДокумент.ПолеСлева = 0;
			ТабличныйДокумент.ПолеСправа = 0;
			ТабличныйДокумент.ПолеСверху = 0;
			ТабличныйДокумент.ПолеСнизу = 0;
			
		ИначеЕсли ИмяМакета = "БМК2017" Тогда
			
			запрос = Новый Запрос;
			
			#Область ТекстЗапроса
			
			запрос.Текст = 
			"ВЫБРАТЬ
			|	ЗаказПоставщикуЗапасы.Номенклатура КАК Номенклатура,
			|	СУММА(ЗаказПоставщикуЗапасы.Количество) КАК Количество,
			|	ЗаказПоставщикуЗапасы.Номенклатура.ВидНоменклатуры КАК НоменклатураВидНоменклатуры
			|ИЗ
			|	Документ.ЗаказПоставщику.Запасы КАК ЗаказПоставщикуЗапасы
			|ГДЕ
			|	ЗаказПоставщикуЗапасы.Ссылка = &Ссылка
			|
			|СГРУППИРОВАТЬ ПО
			|	ЗаказПоставщикуЗапасы.Номенклатура.ВидНоменклатуры,
			|	ЗаказПоставщикуЗапасы.Номенклатура
			|
			|УПОРЯДОЧИТЬ ПО
			|	ЗаказПоставщикуЗапасы.Номенклатура.Наименование
			|ИТОГИ
			|	СУММА(Количество)
			|ПО
			|	НоменклатураВидНоменклатуры";
			
			#КонецОбласти 
			
			запрос.УстановитьПараметр("Ссылка", ТекущийДокумент);
			
			ТаблицаСостава = Новый ТаблицаЗначений;
			ТаблицаСостава.Колонки.Добавить("Раздел");
			ТаблицаСостава.Колонки.Добавить("Номенклатура1");
			ТаблицаСостава.Колонки.Добавить("Ед1");
			ТаблицаСостава.Колонки.Добавить("Количество1");
			
			
			ИтКоличество = 0; 
			
			ВыборкаВидНоменклатуры = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "НоменклатураВидНоменклатуры");
			Пока ВыборкаВидНоменклатуры.Следующий() Цикл
				
				НомСтр = 0;
				
				Выборка = ВыборкаВидНоменклатуры.Выбрать();
				Пока Выборка.Следующий() Цикл
					
					НомСтр = НомСтр + 1;
					
					ИтКоличество = ИтКоличество + Выборка.Количество;
					
					
					НоваяСтрока = ТаблицаСостава.Добавить();
					НоваяСтрока.Раздел = Выборка.НоменклатураВидНоменклатуры;
					НоваяСтрока.Номенклатура1 = Выборка.Номенклатура;
					НоваяСтрока.Ед1 = Выборка.Номенклатура.ЕдиницаИзмерения;
					НоваяСтрока.Количество1 = Выборка.Количество;
					
				КонецЦикла;
				
			КонецЦикла;
			
			
			// Заполним набор данных....
			ВнешниеНаборыДанных = Новый Структура("Состав", ТаблицаСостава );
			
			СхемаКомпоновкиДанных = ПолучитьМакет(ИмяМакета);
			
			СхемаКомпоновкиДанных.Параметры[0].Значение = ТекущийДокумент.НомерЗаказа.Представление;
			СхемаКомпоновкиДанных.Параметры[1].Значение = ТекущийДокумент.Контрагент;
			СхемаКомпоновкиДанных.Параметры[2].Значение = НачалоДня(ТекущийДокумент.ДатаДоставки);
			СхемаКомпоновкиДанных.Параметры[3].Значение = ИтКоличество;
			СхемаКомпоновкиДанных.Параметры[4].Значение = ТекущийДокумент.Контрагент.ОКПО;
			СхемаКомпоновкиДанных.Параметры[5].Значение = ТекущийДокумент.НомерЗаказа.КодПачкиПоставщика;
			СхемаКомпоновкиДанных.Параметры[6].Значение = НачалоДня(ТекущийДокумент.Дата);
			
			
			Настройки = СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
			
			КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
			МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки);
			
			ПроцессорКомпоновкиДанных = Новый процессорКомпоновкиДанных;
			ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных);
			
			
			
			ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
			
			ПроцессорВывода.УстановитьДокумент(ТабличныйДокумент);
			процессорВывода.Вывести(ПроцессорКомпоновкиДанных);
			
			
			ТабличныйДокумент.ОтображатьСетку = Ложь;
			ТабличныйДокумент.ОтображатьЗаголовки = Ложь;
			ТабличныйДокумент.ПолеСлева = 0;
			ТабличныйДокумент.ПолеСправа = 0;
			ТабличныйДокумент.ПолеСверху = 0;
			ТабличныйДокумент.ПолеСнизу = 0;
			
		КонецЕсли;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ТекущийДокумент);
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;
	
КонецФункции // ПечатнаяФорма()


