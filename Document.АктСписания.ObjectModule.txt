
#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(данныеЗаполнения, стандартнаяОбработка)
	
	ТипЦен 			= Справочники.ТипыЦен.Закупка;
	СтатьяЗатрат 	= Справочники.СтатьиЗатрат.Списание;
	
КонецПроцедуры

Процедура ОбработкаПроведения(отказ, режимПроведения)
	
	// Инициализация дополнительных свойств для проведения документа.
	УправлениеПроведениемСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей.
	УправлениеПроведениемСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);

	
	запрос = Новый Запрос;
	запрос.МенеджерВременныхТаблиц = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	#Область ТекстЗапроса
	// 0 - ВременнаяТаблица
	// 1 - 
	// 2 - "ТоварыВРознице"
	запрос.Текст =
	"ВЫБРАТЬ
	|	АктСписанияЗапасы.Номенклатура,
	|	АктСписанияЗапасы.Количество,
	|	АктСписанияЗапасы.Номенклатура.Родитель.Склад КАК СтруктурнаяЕдиница,
	|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) * АктСписанияЗапасы.Количество КАК Стоимость,
	|	АктСписанияЗапасы.Ссылка.Подразделение,
	|	АктСписанияЗапасы.Ссылка.Дата КАК Период,
	|	АктСписанияЗапасы.Ссылка.ЦФО,
	|	ПараметрыУчетаПоПодразделениямСрезПоследних.ЭтоРозница,
	|	ЕСТЬNULL(Р_ТорговыеТочки.ТипЦеныПродажи, &ЦенаСклада) КАК ТипЦеныПродажи,
	|	АктСписанияЗапасы.Сумма
	|ПОМЕСТИТЬ ТаблицаДокумента
	|ИЗ
	|	Документ.АктСписания.Запасы КАК АктСписанияЗапасы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|				&ДатаСреза,
	|				Подразделение = &Подразделение
	|					И ТипЦен = &ЦенаСклада) КАК ЦеныНоменклатурыСрезПоследних
	|		ПО АктСписанияЗапасы.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыУчетаПоПодразделениям.СрезПоследних(&ДатаСреза, ) КАК ПараметрыУчетаПоПодразделениямСрезПоследних
	|		ПО АктСписанияЗапасы.Ссылка.Подразделение = ПараметрыУчетаПоПодразделениямСрезПоследних.СтруктурнаяЕдиница
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Р_ТорговыеТочки КАК Р_ТорговыеТочки
	|		ПО АктСписанияЗапасы.Ссылка.ЦФО.Магазин = Р_ТорговыеТочки.КонтрагентЧастноеЛицо
	|ГДЕ
	|	АктСписанияЗапасы.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АктСписанияЗапасы.НомерСтроки,
	|	АктСписанияЗапасы.Номенклатура,
	|	АктСписанияЗапасы.Количество,
	|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) * АктСписанияЗапасы.Количество КАК Стоимость,
	|	АктСписанияЗапасы.Номенклатура.Родитель.Склад КАК СтруктурнаяЕдиница,
	|	АктСписанияЗапасы.Сумма КАК ПродСтоимость
	|ИЗ
	|	Документ.АктСписания.Запасы КАК АктСписанияЗапасы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ДатаСреза, ) КАК ЦеныНоменклатурыСрезПоследних
	|		ПО АктСписанияЗапасы.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
	|			И (ЦеныНоменклатурыСрезПоследних.ТипЦен = &ЦенаСклада)
	|			И (ЦеныНоменклатурыСрезПоследних.Подразделение = &Подразделение)
	|ГДЕ
	|	АктСписанияЗапасы.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ТаблицаДокумента.Подразделение,
	|	ТаблицаДокумента.ЦФО КАК ОтделМагазина,
	|	ТаблицаДокумента.Номенклатура,
	|	ТаблицаДокумента.Количество,
	|	ТаблицаДокумента.Сумма КАК Сумма,
	|	ТаблицаДокумента.Сумма - ТаблицаДокумента.Стоимость КАК Наценка
	|ИЗ
	|	ТаблицаДокумента КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.ЭтоРозница = ИСТИНА";
	
	#КонецОбласти 
	
	запрос.УстановитьПараметр("Ссылка", Ссылка);
	запрос.УстановитьПараметр("Подразделение", Подразделение);
	запрос.УстановитьПараметр("ДатаСреза", Дата);
	запрос.УстановитьПараметр("МоментВремени", ДополнительныеСвойства.ДляПроведения.МоментВремени);
	
	стурктураПараметровПоПодразделению = Новый Структура("Подразделение, ДатаСреза", Подразделение, Дата);
	стурктураПараметровПоПодразделению = ЦенообразованиеСервер.ПолучитьПараметрыУчетаПоПодразделению(СтурктураПараметровПоПодразделению);
	
	запрос.УстановитьПараметр("ЦенаСклада", СтурктураПараметровПоПодразделению.ЦенаСклада);
	
	
	результатЗапроса = запрос.ВыполнитьПакет();
	
	#Область ПолучениеВременныхТаблиц
	запрос.Текст = "ВЫБРАТЬ * ИЗ ТаблицаДокумента";	
	#КонецОбласти 
	
	ИтСуммаСписания = 0;
	
	выборка = результатЗапроса[1].Выбрать();
	Пока выборка.Следующий() Цикл
		
		движение = Движения.ПартииТоваровНаСкладах.ДобавитьРасход();
		
		движение.Период 		= Дата;
		движение.Подразделение	= Подразделение;
		движение.ЦФО			= ЦФО;
		
		Если Не стурктураПараметровПоПодразделению.ЭтоРозница Тогда
			движение.Склад 			= выборка.СтруктурнаяЕдиница;
			движение.Номенклатура 	= выборка.Номенклатура;
		КонецЕсли;
		
		движение.Количество 	= выборка.Количество;
		движение.Стоимость 		= выборка.Стоимость;
		движение.СтоимостьВал	= выборка.Стоимость;
		движение.ПродСтоимость 	= выборка.ПродСтоимость;
		
		движение.Валюта			= Константы.ВалютаУчета.Получить();
		движение.СчетУчета		= выборка.Номенклатура.СчетУчета;
		движение.ВидХранения	= Перечисления.ВидыХраненияЗапасов.НаСкладе;
		движение.КорСчет		= ПланыСчетов.Внутренний.Затраты;
		
		ИтСуммаСписания = ИтСуммаСписания + Движение.Стоимость;
		
	КонецЦикла;
	
	движение = Движения.ФинансовыйРезультат.Добавить();
	
	движение.Период 		= Дата;
	движение.Подразделение	= Подразделение;
	
	Если ЗначениеЗаполнено(ОбъектЗатрат) Тогда
		движение.Объект		 	= ОбъектЗатрат;
	ИначеЕсли ЗначениеЗаполнено(ЦФО) Тогда
		движение.Объект		 	= ЦФО;
	КонецЕсли;
	
	движение.СтатьяЗатрат	= СтатьяЗатрат;
	движение.СуммаРасходов	= ИтСуммаСписания;

	Движения["ТоварыВРознице"].Загрузить(результатЗапроса[2].Выгрузить());
	
	ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц.Закрыть();

	
КонецПроцедуры

Процедура ПередЗаписью(отказ, режимЗаписи, режимПроведения)
	
	ПринадлежностьПоследовательностям.Запасы.Очистить();
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Подразделение.Пустая() Тогда
		
		ТекстСообщения = НСтр("ru = 'Запись невозможна без заполнения Подразделения.'");
		ПроверкаДанныхКлиентСервер.СообщитьОбОшибке(отказ, текстСообщения, ЭтотОбъект, "Подразделение");
		
	КонецЕсли;

	СуммаДокумента = ОбщегоНазначенияСервер.ПолучитьСуммуДокумента(ЭтотОбъект, "Запасы");
	
КонецПроцедуры

Процедура ПриКопировании(объектКопирования)
	
	ЗаполнениеОбъектовСервер.ЗаполнитьДанныеСкопированногоДокумента(ЭтотОбъект, объектКопирования);
	
КонецПроцедуры

#КонецОбласти 