&НаКлиенте
Перем мПредставлениеПустогоРасписания;


&НаКлиенте
Процедура НаименованиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Ответ = Вопрос("Внимание! При выборе шаблона поля ""Наименование"" и ""Текст команды"" будут изменены. Продолжить?", РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Нет);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	ФормаВыбора = ПолучитьФорму("Справочник.кпкШаблоныКоманд.ФормаВыбора", ,Элементы.Наименование);
	ФормаВыбора.Заголовок = "Выберите шаблон заполнения";
	
	ФормаВыбора.Открыть();
	
КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеНаименованиеОбработкаВыбора(СтруктураДанные)
	
	ВыбранноеЗначение = СтруктураДанные.ВыбранноеЗначение;
	СтруктураДанные.Вставить("Наименование", ВыбранноеЗначение.Наименование);
	СтруктураДанные.Вставить("ТекстКоманды", ВыбранноеЗначение.ТекстКоманды);
	
	Возврат СтруктураДанные;

КонецФункции

&НаКлиенте
Процедура НаименованиеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.кпкШаблоныКоманд") Тогда
		СтруктураДанные = Новый Структура();
		СтруктураДанные.Вставить("ВыбранноеЗначение", ВыбранноеЗначение);

		СтруктураДанные = ПолучитьДанныеНаименованиеОбработкаВыбора(СтруктураДанные);
		
		СтандартнаяОбработка = Ложь;
		
		Объект.Наименование = СтруктураДанные.Наименование;
		Объект.Параметр = СтруктураДанные.ТекстКоманды;		
		
	КонецЕсли;
	
КонецПроцедуры



&НаКлиенте
Процедура РедактированиеРасписанияРегламентногоЗадания()
	
	// если расписание не инициализировано в форме на сервере, то создаем новое
	Если РасписаниеРегламентногоЗадания = Неопределено Тогда
		
		РасписаниеРегламентногоЗадания = Новый РасписаниеРегламентногоЗадания;
		
	КонецЕсли;
	
	Диалог = Новый ДиалогРасписанияРегламентногоЗадания(РасписаниеРегламентногоЗадания);
	
	// открываем диалог для редактирования Расписания
	Если Диалог.ОткрытьМодально() Тогда
		
		РасписаниеРегламентногоЗадания = Диалог.Расписание;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПредставлениеРасписания()
	
	ПредставлениеРасписания = Строка(РасписаниеРегламентногоЗадания);
	
	Если ПредставлениеРасписания = мПредставлениеПустогоРасписания Тогда
		
		ПредставлениеРасписания = НСтр("ru = 'Расписание не задано'");
		
	КонецЕсли;
	
	Элементы.НастроитьРасписаниеРегламентногоЗадания.Заголовок = ПредставлениеРасписания;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьГиперСсылкиНастройкиРасписания()
	
	Элементы.НастроитьРасписаниеРегламентногоЗадания.Доступность = Объект.ИспользоватьРегламентноеЗадание;
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьРасписаниеРегламентногоЗадания(Команда)
	
	РедактированиеРасписанияРегламентногоЗадания();
	
	ОбновитьПредставлениеРасписания();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Справочники.кпкКоманды.ОбновитьДанныеРегламентногоЗадания(Отказ, РасписаниеРегламентногоЗадания, ТекущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЭтоНовый = (Объект.Ссылка.Пустая());
	
	Если ЭтоНовый Тогда
		
		РасписаниеРегламентногоЗадания = Справочники.кпкКоманды.РасписаниеРегламентногоЗаданияПоУмолчанию();
		
		Объект.ИспользоватьРегламентноеЗадание = Истина;
		
	Иначе
		
		// получаем расписание из самого регламентного задания
		// если РЗ не задано, то расписание = Неопределено и будет создано на клиенте в момент редактирования расписания
		РасписаниеРегламентногоЗадания = Справочники.кпкКоманды.ПолучитьРасписаниеВыполненияОбменаДанными(Объект.Ссылка);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	мПредставлениеПустогоРасписания = Строка(Новый РасписаниеРегламентногоЗадания);
	
	ОбновитьПредставлениеРасписания();
	
	УстановитьДоступностьГиперСсылкиНастройкиРасписания();

КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьРегламентныеЗаданияПриИзменении(Элемент)
	
	УстановитьДоступностьГиперСсылкиНастройкиРасписания();
	
КонецПроцедуры
