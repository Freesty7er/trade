//////Перем мСтарИД_ПОС Экспорт;
//////Перем мСтарТорговаяТочка Экспорт;
//////Перем мСтарАктивен Экспорт;
//////Перем мСтарПометкаУдаления Экспорт;
//////Перем мТекТипПО Экспорт;
//////Перем мСтарУстПО Экспорт;
//////Перем мСтарКассы Экспорт;

//////Процедура ПередЗаписью(Отказ)
//////	Если ОбменДанными.Загрузка Тогда
//////		Возврат;
//////	КонецЕсли;
//////	Если (НЕ ЗначениеЗаполнено(ИД_ПОС))
//////	 ИЛИ (НЕ ЗначениеЗаполнено(Наименование))
//////	 ИЛИ (НЕ ЗначениеЗаполнено(ТорговаяТочка)) Тогда
//////		Отказ = Истина;
//////		Сообщить("Заполните поля ""Идентификатор POS"", ""Наименование"", ""Торговая точка""", СтатусСообщения.Внимание);
//////		Возврат;
//////	КонецЕсли;
//////	ПроверкаУникальностиИДПОС(Отказ);
//////	ПроверкаСоставаПО(Отказ);
//////	ПроверкаСоставаКасс(Отказ);
//////	ПроверкаРасширенияКоманд(Отказ);
//////	Если НЕ Отказ Тогда
//////		ПроверкаИзмененияУстПО(Отказ);
//////		ПроверкаИзмененияКассы(Отказ);
//////		Если НЕ Отказ Тогда
//////			ПроверкаИзмененияИДиТоргТочки(Отказ);
//////			ПроверкаЗавершенияРаботыИДПОС(Отказ, Истина);
//////		КонецЕсли
//////	КонецЕсли
//////КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	Если НЕ Отказ Тогда
		Для Каждого СтрПО Из УстПО Цикл
			УзелОбмена = Р_ОбщегоНазначения_ПОС.СоздатьУзелОбменаПОПОС(Ссылка, СтрПО.ТипПО);
			Если НЕ ЗначениеЗаполнено(УзелОбмена) Тогда
				ОбщегоНазначения.СообщитьОбОшибке("Не удалось записать план обмена, связанный с этим POS и типом ПО """ + СтрПО.ТипПО + """", Отказ, , СтатусСообщения.Важное);
				Прервать;
			КонецЕсли
		КонецЦикла
	КонецЕсли
КонецПроцедуры

//////Процедура ПроверкаРасширенияКоманд(Отказ)
//////	СписокДублейКоманд = Новый СписокЗначений;
//////	Для каждого СтрКмд Из ОбработкиКоманд Цикл
//////		Если СтрКмд.КодКоманды = 0 Тогда
//////			ОбщегоНазначения.СообщитьОбОшибке("Расширения команд, строка № " + СтрКмд.НомерСтроки + ". Не заполнен код команды", Отказ);
//////		ИначеЕсли СтрКмд.НаименованиеОбработкиКоманды = "" Тогда
//////			ОбщегоНазначения.СообщитьОбОшибке("Расширения команд, строка № " + СтрКмд.НомерСтроки + ". Не заполнено наименование обработки команды", Отказ);
//////		ИначеЕсли Найти(СтрКмд.НаименованиеОбработкиКоманды, " ") > 0 Тогда
//////			ОбщегоНазначения.СообщитьОбОшибке("Расширения команд, строка № " + СтрКмд.НомерСтроки + ". Наименование обработки команды не должно содержать пробелы", Отказ);
//////		ИначеЕсли (Прав(СтрКмд.НаименованиеОбработкиКоманды, 4) = ".epf") И (Найти(СтрКмд.НаименованиеОбработкиКоманды, "\") > 0) Тогда
//////			ФайлОбработки = Новый Файл(СтрКмд.НаименованиеОбработкиКоманды);
//////			Если НЕ ФайлОбработки.Существует() Тогда
//////				ОбщегоНазначения.СообщитьОбОшибке("Расширения команд, строка № " + СтрКмд.НомерСтроки + ". Файл обработки не существует. Компьютер " + ИмяКомпьютера(), , , СтатусСообщения.Информация);
//////				ОбщегоНазначения.СообщитьОбОшибке("    Файл обработки должн быть доступенн во время выполнения серверу обмена при файловом варианте или серверу 1С при клиент-серверном", , , СтатусСообщения.БезСтатуса);
//////			КонецЕсли 
//////		ИначеЕсли Метаданные.Обработки.Найти(СтрКмд.НаименованиеОбработкиКоманды) = Неопределено Тогда
//////			ОбщегоНазначения.СообщитьОбОшибке("Расширения команд, строка № " + СтрКмд.НомерСтроки + ". Обработка """ + СтрКмд.НаименованиеОбработкиКоманды + """ отсутствует в конфигурации", Отказ);
//////		Иначе
//////			МассивКоманды = ОбработкиКоманд.НайтиСтроки(Новый Структура("КодКоманды", СтрКмд.КодКоманды));
//////			Если МассивКоманды.Количество() > 1 Тогда
//////				Если СписокДублейКоманд.НайтиПоЗначению(СтрКмд.КодКоманды) = Неопределено Тогда
//////					ОбщегоНазначения.СообщитьОбОшибке("Расширения команд. Обработчик кода команды " + СтрКмд.КодКоманды + " назначен больше одного раза", Отказ);
//////					СписокДублейКоманд.Добавить(СтрКмд.КодКоманды);
//////				КонецЕсли
//////			КонецЕсли
//////		КонецЕсли
//////	КонецЦикла
//////КонецПроцедуры

//////Процедура ПроверкаСоставаПО(Отказ)
//////	Если УстПО.Количество() = 0 Тогда
//////		ОбщегоНазначения.СообщитьОбОшибке("Не заполнена таблица ""Установленное ПО терминала""", Отказ);
//////		Возврат;
//////	КонецЕсли;
//////	Для Каждого СтрПО Из УстПО Цикл
//////		Если НЕ ЗначениеЗаполнено(СтрПО.ТипПО) ИЛИ НЕ ЗначениеЗаполнено(СтрПО.ЛогОбмена) Тогда
//////			ОбщегоНазначения.СообщитьОбОшибке("Поля ""Тип ПО"" и ""Детализация лога обмена"" обязательны для заполнения в таблице ""Установленное ПО терминала""", Отказ);
//////			Возврат;
//////		КонецЕсли;
//////	КонецЦикла;
//////	Для Каждого СтрПО Из УстПО Цикл
//////		Если УстПО.НайтиСтроки(Новый Структура("ТипПО", СтрПО.ТипПО)).Количество() > 1 Тогда
//////			ОбщегоНазначения.СообщитьОбОшибке("Каждый тип ПО на терминале должен быть установлен в 1 экземпляре", Отказ);
//////			Возврат;
//////		ИначеЕсли (УстПО.Количество() > 1) И ТипПОБлокТерминал(СтрПО) Тогда
//////			ОбщегоНазначения.СообщитьОбОшибке("На POS с типом ПО """ + СтрПО.ТипПО + """ НЕ может быть других типов ПО", Отказ);
//////		ИначеЕсли (ТорговаяТочка.Вид = Перечисления.Р_ВидыТорговыхТочек.АЗС)
//////				И Р_ОбщегоНазначения_ПОС.ТипПОДляАЗС(СтрПО.ТипПО) Тогда
//////			ПроверкаНаличияПОДляАЗСНаДругихПОС(Отказ);
//////			Если Отказ Тогда
//////				ОбщегоНазначения.СообщитьОбОшибке("На АЗС не может быть больше 1-го POS с типом ПО для АЗС", Отказ);
//////				Возврат;
//////			КонецЕсли
//////		КонецЕсли
//////	КонецЦикла;
//////	Для Каждого СтрПО Из УстПО Цикл
//////		Если Кассы.НайтиСтроки(Новый Структура("ТипПО", СтрПО.ТипПО)).Количество() = 0 Тогда
//////			ОбщегоНазначения.СообщитьОбОшибке("Не заполнена закладка ""Кассы, склады"" терминала для ПО типа """ + СтрПО.ТипПО + """", Отказ);
//////			Возврат;
//////		КонецЕсли;
//////	КонецЦикла;
//////КонецПроцедуры

//////Процедура ПроверкаНаличияПОДляАЗСНаДругихПОС(Отказ)
//////	Запрос = Новый Запрос;
//////	Запрос.Текст =
//////	"ВЫБРАТЬ
//////	|	Р_ПОСУстПО.Ссылка
//////	|ИЗ
//////	|	Справочник.Р_ПОС.УстПО КАК Р_ПОСУстПО
//////	|ГДЕ
//////	|	Р_ПОСУстПО.ТипПО В(&ТипыПОАЗС)
//////	|	И Р_ПОСУстПО.Ссылка <> &Ссылка
//////	|	И Р_ПОСУстПО.Ссылка.ТорговаяТочка = &ТорговаяТочка";
//////	ТипыПОАЗС = Новый СписокЗначений;
//////	ТипыПОАЗС.Добавить(Перечисления.Р_ТипыПОПОС.ResPOS_Petrol);
//////	ТипыПОАЗС.Добавить(Перечисления.Р_ТипыПОПОС.БлокАРМ2);
//////	ТипыПОАЗС.Добавить(Перечисления.Р_ТипыПОПОС.ТерминалАЗС_01М);
//////	Запрос.УстановитьПараметр("ТипыПОАЗС", ТипыПОАЗС);
//////	Запрос.УстановитьПараметр("ТорговаяТочка", ТорговаяТочка);
//////	Если ЭтоНовый() Тогда
//////		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И Р_ПОСУстПО.Ссылка <> &Ссылка", "");
//////	Иначе
//////		Запрос.УстановитьПараметр("Ссылка", Ссылка);
//////	КонецЕсли;
//////	Отказ = НЕ Запрос.Выполнить().Пустой();
//////КонецПроцедуры

//////Процедура ПроверкаСоставаКасс(Отказ)
//////	СоставТТ = Р_ОбщегоНазначения_ПОС.ПолучитьСкладыТорговойТочки(ТорговаяТочка);
//////	Для Каждого СтрКасса Из Кассы Цикл
//////		Если СтрКасса.ТипПО = Перечисления.Р_ТипыПОПОС.ResPOS_Petrol Тогда
//////			Если ЗначениеЗаполнено(СтрКасса.Склад) Тогда
//////				ОбщегоНазначения.СообщитьОбОшибке("Закладка ""Кассы, склады"" (стр. " + СтрКасса.НомерСтроки + "): для данного типа ПО поле ""Склад"" НЕ заполнять !", Отказ, , СтатусСообщения.Внимание);
//////				Возврат;
//////			КонецЕсли
//////		ИначеЕсли (НЕ ЗначениеЗаполнено(СтрКасса.Склад))
//////			  ИЛИ (НЕ ЗначениеЗаполнено(СоставТТ.Найти(СтрКасса.Склад, "Склад")))
//////			  ИЛИ (СтрКасса.Склад.ВидСклада <> ТорговаяТочка.ВидСкладовПродажи)
//////			  ИЛИ ((СтрКасса.Склад.ТипЦенРозничнойТорговли <> ТорговаяТочка.ТипЦеныПродажи) И (ТорговаяТочка.ВидСкладовПродажи = Перечисления.ВидыСкладов.Розничный)) Тогда
//////				ОбщегоНазначения.СообщитьОбОшибке("Закладка ""Кассы, склады"" (стр. " + СтрКасса.НомерСтроки + "): поле ""Склад"" заполнено неверно:", Отказ, , СтатусСообщения.Внимание);
//////				#Если Клиент Тогда
//////				Сообщить("    Склад (продажи) должен быть заполнен,", СтатусСообщения.Информация);
//////				Сообщить("     вид склада должен совпадать с видом склада продажи торговой точки,", СтатусСообщения.Информация);
//////				Сообщить("     для розн. склада тип цен розн. продажи должен совпадать с типом цен продажи торговой точки", СтатусСообщения.Информация);
//////				#КонецЕсли
//////				Возврат;
//////		КонецЕсли;
//////		Если (СтрКасса.ТипПО = Перечисления.Р_ТипыПОПОС.ResPOS_Restaurant)
//////		   И (НЕ ЗначениеЗаполнено(СтрКасса.ККР))
//////		   И (НЕ ЗначениеЗаполнено(СтрКасса.Организация))
//////		   И (НЕ ЗначениеЗаполнено(СтрКасса.КассаККМ)) Тогда
//////			Запрос = Новый Запрос;
//////			Запрос.Текст =
//////			"ВЫБРАТЬ РАЗЛИЧНЫЕ
//////			|	Р_ПОСКассы.Ссылка КАК ПОС,
//////			|	Р_ПОСКассы.ККР КАК ККР,
//////			|	Р_ПОСКассы.Организация КАК Оргвнизация
//////			|ИЗ
//////			|	Справочник.Р_ПОС.Кассы КАК Р_ПОСКассы
//////			|ГДЕ
//////			|	(Р_ПОСКассы.Ссылка.ТорговаяТочка = &ТоргТочка)
//////			|	И (Р_ПОСКассы.ТипПО = &ТипПО)
//////			|	И (Р_ПОСКассы.ККР <> ЗНАЧЕНИЕ(Справочник.Р_ККР.Пустаяссылка))
//////			|	//УсловиеПОС";
//////			Запрос.УстановитьПараметр("ТоргТочка", ТорговаяТочка);
//////			Запрос.УстановитьПараметр("ТипПО", Перечисления.Р_ТипыПОПОС.ResPOS_Restaurant);
//////			Если НЕ ЭтоНовый() Тогда
//////				Запрос.Текст = СтрЗаменить(Запрос.Текст, "//УсловиеПОС", "И (Р_ПОСКассы.Ссылка <> &ПОС)");
//////				Запрос.УстановитьПараметр("ПОС", Ссылка);
//////			КонецЕсли;
//////			Если Запрос.Выполнить().Пустой() Тогда
//////				ОбщегоНазначения.СообщитьОбОшибке("Закладка ""Кассы, склады"" (стр. " + СтрКасса.НомерСтроки + "): поля ""ККР"", ""Организация"", ""Касса"" могут быть пустыми (тип ПО ресторан), только если есть другой POS торговой точки с назначенными ""ККР, Кассой, Организацией""", Отказ, , СтатусСообщения.Внимание);
//////				Возврат;
//////			КонецЕсли
//////		ИначеЕсли (НЕ ЗначениеЗаполнено(СтрКасса.ККР))
//////		 ИЛИ (НЕ ЗначениеЗаполнено(СтрКасса.Организация))
//////		 ИЛИ (НЕ ЗначениеЗаполнено(СтрКасса.КассаККМ))
//////		 ИЛИ ((НЕ ЗначениеЗаполнено(СтрКасса.Склад)) И (СтрКасса.ТипПО <> Перечисления.Р_ТипыПОПОС.ResPOS_Petrol))
//////		 ИЛИ (НЕ ЗначениеЗаполнено(СтрКасса.Проект))
//////		 ИЛИ (КассаККМДолжнаБытьФискализирована(СтрКасса.ТипПО) И (НЕ СтрКасса.Фискализирован)) Тогда
//////		 	Если СтрКасса.ТипПО = Перечисления.Р_ТипыПОПОС.ResPOS_Petrol Тогда
//////				ОбщегоНазначения.СообщитьОбОшибке("Закладка ""Кассы, склады"" (стр. " + СтрКасса.НомерСтроки + "): поля ""ККР"", ""Организация"", ""Касса"", ""Проект"" должны быть заполнены или не уст. признак ""Фиск.""!", Отказ, , СтатусСообщения.Внимание);
//////			Иначе
//////				ОбщегоНазначения.СообщитьОбОшибке("Закладка ""Кассы, склады"" (стр. " + СтрКасса.НомерСтроки + "): поля ""ККР"", ""Организация"", ""Касса"", ""Склад"", ""Проект"" должны быть заполнены или не уст. признак ""Фиск.""!", Отказ, , СтатусСообщения.Внимание);
//////			КонецЕсли;
//////			Возврат;
//////		КонецЕсли;
//////	КонецЦикла;
//////КонецПроцедуры

//////Процедура ПроверкаУникальностиИДПОС(Отказ) Экспорт
//////	Если НЕ Активен Тогда
//////		Возврат;
//////	КонецЕсли;
//////	Запрос = Новый Запрос;
//////	Запрос.Текст =
//////	"ВЫБРАТЬ
//////	|	Р_ПОС.Ссылка
//////	|ИЗ
//////	|	Справочник.Р_ПОС КАК Р_ПОС
//////	|ГДЕ
//////	|	Р_ПОС.Активен
//////	|	И Р_ПОС.ИД_ПОС = &ИД_ПОС";
//////	Запрос.УстановитьПараметр("ИД_ПОС", ИД_ПОС);
//////	Выборка = Запрос.Выполнить().Выбрать();
//////	Пока Выборка.Следующий() Цикл
//////		Если ЭтоНовый() ИЛИ (Ссылка <> Выборка.Ссылка) Тогда
//////			ОбщегоНазначения.СообщитьОбОшибке("Идентификатор POS уже используется другим активным POS: """ + Выборка.Ссылка + """", Отказ, , СтатусСообщения.Внимание);
//////			Прервать;
//////		КонецЕсли
//////	КонецЦикла
//////КонецПроцедуры

//////Процедура ПроверкаИзмененияИДиТоргТочки(Отказ)
//////	Если ЭтоНовый()
//////	 ИЛИ ((ИД_ПОС = мСтарИД_ПОС) И (мСтарТорговаяТочка = ТорговаяТочка)) Тогда
//////		Возврат;
//////	КонецЕсли;
//////	Для Каждого СтрПО Из УстПО Цикл
//////		ДатаПоследнегоОбмена = Р_ОбщегоНазначения_ПОС.ДатаВремяПоследнегоОбменаПОПОСи1С(Ссылка, СтрПО.ТипПО);
//////		Если ЗначениеЗаполнено(ДатаПоследнегоОбмена) Тогда
//////			ОбщегоНазначения.СообщитьОбОшибке("ПО на POS уже выполняло обмен с 1С, последний обмен " + Формат(ДатаПоследнегоОбмена, "ДФ=""дд.ММ.гг ЧЧ:мм:сс""") + ".  ЗАПРЕЩЕНО изменять поля ""Идентификатор POS"" и ""Торговая точка""", Отказ, , СтатусСообщения.Внимание);
//////		КонецЕсли
//////	КонецЦикла
//////КонецПроцедуры

//////Процедура ПроверкаИзмененияУстПО(Отказ)
//////	Если ЭтоНовый() ИЛИ (мСтарУстПО = Неопределено) Тогда
//////		Возврат;
//////	КонецЕсли;
//////	Для Каждого СтрПО Из мСтарУстПО Цикл
//////		Если УстПО.Найти(СтрПО.ТипПО, "ТипПО") = Неопределено Тогда
//////			ДатаПоследнегоОбмена = Р_ОбщегоНазначения_ПОС.ДатаВремяПоследнегоОбменаПОПОСи1С(Ссылка, СтрПО.ТипПО);
//////			Если ЗначениеЗаполнено(ДатаПоследнегоОбмена) Тогда
//////				ОбщегоНазначения.СообщитьОбОшибке("ПО типа """ + СтрПО.ТипПО + """ на POS уже выполняло обмен с 1С, последний обмен " + Формат(ДатаПоследнегоОбмена, "ДФ=""дд.ММ.гг ЧЧ:мм:сс""") + ".  ЗАПРЕЩЕНО удалять данный тип ПО в таблице ""Установленное ПО""", Отказ, , СтатусСообщения.Внимание);
//////			Иначе
//////				УдУзел = Р_ОбщегоНазначения_ПОС.НайтиУзелОбменаПОС(Ссылка, СтрПО.ТипПО);
//////				Если ЗначениеЗаполнено(УдУзел) Тогда
//////					ОбУдУзел = УдУзел.ПолучитьОбъект();
//////					ОбУдУзел.ПометкаУдаления = Истина;
//////					Попытка
//////						ОбУдУзел.Записать();
//////					Исключение
//////						ОбщегоНазначения.СообщитьОбОшибке("ПО типа """ + СтрПО.ТипПО + """ на POS был удален. Ошибка уст. пометки удаления для узла """ + УдУзел + """. " + ОписаниеОшибки(), Отказ, , СтатусСообщения.Внимание);
//////					КонецПопытки
//////				КонецЕсли
//////			КонецЕсли
//////		КонецЕсли
//////	КонецЦикла
//////КонецПроцедуры

//////Процедура ПроверкаИзмененияКассы(Отказ)
//////	Если ЭтоНовый() ИЛИ (мСтарКассы = Неопределено) Тогда
//////		Возврат;
//////	КонецЕсли;
//////	Для Каждого СтрКасса Из мСтарКассы Цикл
//////		Если Кассы.НайтиСтроки(Новый Структура("ККР, КассаККМ, ТипПО", СтрКасса.ККР, СтрКасса.КассаККМ, СтрКасса.ТипПО)).Количество() = 0 Тогда
//////			Если Р_ОбщегоНазначения_ПОС.ЕстьНезакрытыеСменыПОПОС(Ссылка, СтрКасса.ККР, СтрКасса.ТипПО) Тогда
//////				ОбщегоНазначения.СообщитьОбОшибке("Для ПО типа """ + СтрКасса.ТипПО + """ на POS есть незакрытые смены.  ЗАПРЕЩЕНО удалять на закладке ""Кассы, склады"" Касса ККМ, для которых не закрыты смены", Отказ, , СтатусСообщения.Внимание);
//////			КонецЕсли
//////		КонецЕсли
//////	КонецЦикла
//////КонецПроцедуры

//////Процедура ПроверкаЗавершенияРаботыИДПОС(Отказ, ПриЗаписи=Ложь) Экспорт
//////	Если ЭтоНовый() Тогда
//////		Возврат;
//////	КонецЕсли;
//////	Если ПриЗаписи Тогда
//////		Если (Активен ИЛИ НЕ мСтарАктивен ИЛИ мСтарПометкаУдаления)
//////		   И (НЕ ПометкаУдаления ИЛИ мСтарПометкаУдаления ИЛИ НЕ мСтарАктивен) Тогда
//////		 	Возврат;
//////		КонецЕсли
//////	ИначеЕсли (Активен ИЛИ НЕ мСтарАктивен) ИЛИ ПометкаУдаления Тогда
//////		Возврат;
//////	КонецЕсли;
//////	Если Р_ОбщегоНазначения_ПОС.ЕстьНезакрытыеСменыПОС(Ссылка) Тогда
//////		Если НЕ Активен Тогда
//////			Активен = Истина;
//////		КонецЕсли;
//////		ОбщегоНазначения.СообщитьОбОшибке("Для ПО на POS есть незакрытые смены.  ЗАПРЕЩЕНО отменять активность POS или помечать на удаление", Отказ, , СтатусСообщения.Внимание);
//////	ИначеЕсли ПриЗаписи Тогда
//////		#Если Клиент Тогда
//////		Запрос = Новый Запрос;
//////		Запрос.Текст =
//////		"ВЫБРАТЬ
//////		|	Р_POS.Ссылка
//////		|ИЗ
//////		|	ПланОбмена.Р_POS КАК Р_POS
//////		|ГДЕ
//////		|	Р_POS.ПОС = &ПОС";
//////		Запрос.УстановитьПараметр("ПОС", Ссылка);
//////		Узлы = Запрос.Выполнить().Выгрузить();
//////		Если Узлы.Количество() > 0 Тогда
//////			ЕстьИзм = Ложь;
//////			Для Каждого Узел Из Узлы Цикл
//////				Выборка = ПланыОбмена.ВыбратьИзменения(Узел.Ссылка, Узел.Ссылка.НомерОтправленного, Неопределено);
//////				Если Выборка.Следующий() Тогда
//////					ЕстьИзм = Истина;
//////					Прервать;
//////				КонецЕсли
//////			КонецЦикла;
//////			Если ЕстьИзм Тогда
//////				Ответ = Вопрос("За ПО POS """ + Ссылка + """
//////							   |в 1C числятся изменения данных,
//////							   |не отправленные на POS торговой точки.
//////							   |Отмена активности или пометка удаления POS в 1C
//////							   |прекращает регистрацию изменений 1С для ПО и
//////							   |требует очисить список изменений.
//////							   |- - - - - - - - - - - - - - - - - -
//////							   |           ОЧИСИТЬ ?", РежимДиалогаВопрос.ДаНет);
//////				Если Ответ <> КодВозвратаДиалога.Да Тогда
//////					Отказ = Истина;
//////					Возврат;
//////				КонецЕсли;
//////				Для Каждого Узел Из Узлы Цикл
//////					Выборка = ПланыОбмена.ВыбратьИзменения(Узел.Ссылка, Узел.Ссылка.НомерОтправленного, Неопределено);
//////					Если Выборка.Следующий() Тогда
//////						ПланыОбмена.УдалитьРегистрациюИзменений(Узел.Ссылка);
//////					КонецЕсли
//////				КонецЦикла;
//////			Иначе
//////				Сообщить("Отмена активности и установка пометки удаления прекращает регистрацию изменений данных 1С для отправки на POS торговой точки", СтатусСообщения.Информация);
//////			КонецЕсли
//////		КонецЕсли;
//////		#КонецЕсли
//////	КонецЕсли
//////КонецПроцедуры

//////Функция КассаККМДолжнаБытьФискализирована(СтрТипПО) Экспорт
//////	
//////	Возврат Р_ОбщегоНазначения_ПОС.ТипПОДляАЗС(СтрТипПО);
//////	
//////КонецФункции

//////Функция ТипПОБлокТерминал(СтрПО) Экспорт
//////	Если (СтрПО.ТипПО = Перечисления.Р_ТипыПОПОС.ТерминалАЗС_01М)
//////	 ИЛИ (СтрПО.ТипПО = Перечисления.Р_ТипыПОПОС.БлокАРМ2) Тогда
//////		Возврат Истина;
//////	Иначе
//////		Возврат Ложь;
//////	КонецЕсли
//////КонецФункции

//////Если ЗначениеЗаполнено(ЭтотОбъект.Ссылка) Тогда
//////	мСтарИД_ПОС			= Ссылка.ИД_ПОС;
//////	мСтарТорговаяТочка	= Ссылка.ТорговаяТочка;
//////	мСтарАктивен		= Ссылка.Активен;
//////	мСтарПометкаУдаления= Ссылка.ПометкаУдаления;
//////Иначе
//////	мСтарИД_ПОС			= ИД_ПОС;
//////	мСтарТорговаяТочка	= ТорговаяТочка;
//////	мСтарАктивен		= Активен;
//////	мСтарПометкаУдаления= ПометкаУдаления;
//////КонецЕсли;
//////мСтарУстПО = Неопределено;
//////мСтарКассы = Неопределено;

