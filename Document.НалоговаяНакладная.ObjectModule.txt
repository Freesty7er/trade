Перем мВалютаРегламентированногоУчета Экспорт;

//	----------------------------------------------------------------------------
//	ОкруглитьСУчетомПогрешности()
//
Функция ОкруглитьСУчетомПогрешности(_Число, Точность, Погрешность = 0, 
	               СоответствиеПогрешностей = "", Ключ = "") 

	Если НЕ (СоответствиеПогрешностей = "")  И НЕ(Ключ="") Тогда
	
		// считываем погрешность округления, накопленную ранее при расчетах
		Погрешность = СоответствиеПогрешностей.Получить(Ключ);
		// погрешности округления еще нет -- первая сумма
		//Если ПустоеЗначение(Погрешность) = 1 Тогда
		Если (Погрешность = Неопределено) Тогда
			Погрешность = 0;
		КонецЕсли;
		// округлим с учетом погрешности
		Округленное = ОкруглитьСУчетомПогрешности(_Число, Точность, Погрешность);
		// сохраним погрешность округления
		СоответствиеПогрешностей.Вставить(Ключ, Погрешность);
	
	Иначе
		
		Если _Число = 0 Тогда
			Возврат 0;
		КонецЕсли; 
	
		// выравнивание разрядности
		_Число = Окр(_Число, 27, ?(_Число<0, 0, 1));
		
		// сумма с учетом погрешности предыдущих вычислений
		Округляемое = _Число + Погрешность;

		// для отрицательного числа меняем направление округления, чтобы избежать ошибки Окр(-0.5) = -1
		Округленное	= Окр(Округляемое, Точность, ?(Округляемое<0,0, 1));
		
		// рассчитаем новую погрешность округления
		Погрешность	= Округляемое - Округленное;
		
	КонецЕсли;
	
	Возврат Округленное;

КонецФункции // ОкруглитьСУчетомПогрешности()


//	----------------------------------------------------------------------------
//	РассчитатьСуммуНДСсУчетомПогрешности()
//
Функция РассчитатьСуммуНДСсУчетомПогрешности(Сумма, УчитыватьНДС, СуммаВключаетНДС, ПеречислениеСтавкаНДС,
	               СоответствиеПогрешностей = "")

	СтавкаНДС = 20;
				   
	Если УчитыватьНДС=1 Тогда 
		Если СуммаВключаетНДС=1 Тогда
			СуммаНДС = ОкруглитьСУчетомПогрешности(Сумма * СтавкаНДС / (100 + СтавкаНДС), 2, , СоответствиеПогрешностей, ПеречислениеСтавкаНДС);
		Иначе
			СуммаНДС = ОкруглитьСУчетомПогрешности(Сумма * СтавкаНДС / 100              , 2, , СоответствиеПогрешностей, ПеречислениеСтавкаНДС);
		КонецЕсли;
	Иначе
		СуммаНДС = 0;
	КонецЕсли;

	Возврат СуммаНДС;

КонецФункции // РассчитатьСуммуНДССУчетомПогрешности()

#Область ОбработчикиСобытий

Процедура ПередЗаписью(отказ, режимЗаписи, режимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	СуммаСкидки =    Запасы.Итог("Скидка");

	СуммаДокумента = Запасы.Итог("Сумма");
	
	ПогрешностиОкругления = Новый Соответствие();
	
	___ТребуетВключенияВЕдиныйРеестрНалоговыхНакладных = Ложь;
	
	Для Каждого СтрокаЗапасы Из Запасы Цикл
		
		СтрокаЗапасы.Сумма = Окр(СтрокаЗапасы.Сумма, 2, РежимОкругления.Окр15как20);
		
		СтрокаЗапасы.СуммаНДС = РассчитатьСуммуНДСсУчетомПогрешности(СтрокаЗапасы.Сумма,
		1,
		1,
		"НДС20",
		ПогрешностиОкругления);
		
		Если ЗначениеЗаполнено(СтрокаЗапасы.Номенклатура.КВЕД) Тогда
			___ТребуетВключенияВЕдиныйРеестрНалоговыхНакладных = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	ТребуетВключенияВЕдиныйРеестрНалоговыхНакладных = ___ТребуетВключенияВЕдиныйРеестрНалоговыхНакладных;
	
КонецПроцедуры

Процедура ПриКопировании(объектКопирования)
	
	ЗаполнениеОбъектовСервер.ЗаполнитьДанныеСкопированногоДокумента(ЭтотОбъект, ОбъектКопирования);
	
КонецПроцедуры

#КонецОбласти 

мВалютаРегламентированногоУчета   = Справочники.Валюты.НациональнаяВалюта;
