////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПЕЧАТИ ФОРМЫ

Процедура ПечатьВозврата(ТабличныйДокумент, Шапка, ВыборкаСтрокЗапасы)
	
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ВозвратОтПокупателя_Накладная";
	
	ЭтоФинДокумент = Шапка.Организация.ФинУчет;
	
	//Если ЭтоФинДокумент Тогда
	//	Макет = УправлениеПечатью.ПолучитьМакет("Документ.ВозвратОтПокупателя.НакладнаяФин");
	//Иначе
		Макет = УправлениеПечатью.ПолучитьМакет("Документ.ВозвратОтПокупателя.Накладная");
	//КонецЕсли;
	
	НомерДокумента = Шапка.Номер;
	
	КодЯзыкаПечать = Локализация.ПолучитьЯзыкФормированияПечатныхФорм();	
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	
	// вынести получить данные организации и т.п.
	//Если ЭтоФинДокумент Тогда
	//	ОбластьМакета.Параметры.ТекстЗаголовка = НСтр("ru='Расходная накладная № ';uk='Видаткова накладна № '", КодЯзыкаПечать)
	//			+ НомерДокумента
	//			+ НСтр("ru=' от ';uk=' від '", КодЯзыкаПечать)
	//			+ Формат(Шапка.ДатаДокумента, "Л="+КодЯзыкаПечать+"; ДФ='dd MMMM yyyy'");
	//	
	//	ОбластьМакета.Параметры.ЮрАдрес = Шапка.Организация.ЮрАдрес;
	//	ОбластьМакета.Параметры.ФирмаПолнНаименование = Шапка.Организация.ПолнНаименование;
	//	ОбластьМакета.Параметры.КлиентПолнНаим = Шапка.Контрагент.ПолнНаим;
	//	ОбластьМакета.Параметры.КлиентАдресДоставки = Шапка.Контрагент.АдресДоставки;
	//Иначе
		ОбластьМакета.Параметры.НомерДокумента = НомерДокумента;
		ОбластьМакета.Параметры.ДатаДок = Формат(Шапка.ДатаДокумента, "ДФ='dd MMMM yyyy'");
		ОбластьМакета.Параметры.ФирмаПолнНаименование = Шапка.Организация.Наименование;
		
		//ОбластьМакета.Параметры.КлиентПолнНаим = Шапка.Контрагент.Наименование;
		ОбластьМакета.Параметры.КлиентПолнНаим = Шапка.Контрагент.ПолнНаим;
		
		ОбластьМакета.Параметры.Комментарий = Шапка.Комментарий;
		ОбластьМакета.Параметры.Склад = Шапка.Склад;
		ОбластьМакета.Параметры.КодТипаЦен = Прав(Шапка.ТипЦен, 1);

		
	//КонецЕсли;
	

	
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	ЕстьСкидки = шапка.СуммаСкидки <> 0;
	
	Если ЕстьСкидки Тогда
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицыСоСкидкой");
		ТабличныйДокумент.Вывести(ОбластьМакета);			
		ОбластьМакета = Макет.ПолучитьОбласть("СтрокаТаблицыСоСкидкой");		
	Иначе
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ТабличныйДокумент.Вывести(ОбластьМакета);			
		ОбластьМакета = Макет.ПолучитьОбласть("СтрокаТаблицы");		
	КонецЕсли;
	
	ИтКоличество	= 0;
	ИтСуммаБезНДС	= 0;
	ИтСуммаНДС		= 0;
	ИтВсего			= 0;
	ИтСуммаБезСкидки = 0;
	ИтСуммаСкидки = 0;
	ОбщийВес		= 0;
	
	Пока ВыборкаСтрокЗапасы.Следующий() Цикл
		
		ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокЗапасы);
		ОбластьМакета.Параметры.ТоварКод = Прав(ВыборкаСтрокЗапасы.ТоварКод, 5);
		ОбластьМакета.Параметры.ТоварНаим	= СокрЛП(ВыборкаСтрокЗапасы.ТоварНаим) + " ("+СокрЛП(ВыборкаСтрокЗапасы.Производитель)+")";
		
		Если ЕстьСкидки Тогда
			//Если ВыборкаСтрокЗапасы.ПроцентСкидкиНаценки = 100 Тогда
			//	Скидка = ВыборкаСтрокЗапасы.Цена * ВыборкаСтрокЗапасы.Количество;
			//	ОбластьМакета.Параметры.Скидка         = Скидка;
			//	ОбластьМакета.Параметры.СуммаБезСкидки = Скидка;
			//ИначеЕсли ВыборкаСтрокЗапасы.ПроцентСкидкиНаценки = 0 Тогда
			//	ОбластьМакета.Параметры.Скидка         = 0;
			//	ОбластьМакета.Параметры.СуммаБезСкидки = ВыборкаСтрокЗапасы.Сумма;
			//Иначе
			//	Скидка = ВыборкаСтрокЗапасы.Сумма * ВыборкаСтрокЗапасы.ПроцентСкидкиНаценки / (100 - ВыборкаСтрокЗапасы.ПроцентСкидкиНаценки);
			//	ОбластьМакета.Параметры.Скидка         = Скидка;
			//	ОбластьМакета.Параметры.СуммаБезСкидки = ВыборкаСтрокЗапасы.Сумма + Скидка;
			//КонецЕсли;
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ИтКоличество	= ИтКоличество + ВыборкаСтрокЗапасы.Количество;
		ИтСуммаБезНДС	= ИтСуммаБезНДС + ВыборкаСтрокЗапасы.СуммаБезНДС;
		ИтСуммаНДС		= ИтСуммаНДС + ВыборкаСтрокЗапасы.СуммаНДС;
		ИтВсего			= ИтВсего + ВыборкаСтрокЗапасы.Сумма;
		ИтСуммаБезСкидки			= ИтСуммаБезСкидки + ВыборкаСтрокЗапасы.СуммаБезСкидки;
		ОбщийВес		= ОбщийВес + ВыборкаСтрокЗапасы.Количество * ВыборкаСтрокЗапасы.НоменклатураВес;
		ИтСуммаСкидки = ИтСуммаСкидки + ВыборкаСтрокЗапасы.Скидка;

		
	КонецЦикла;
	
	Если ЕстьСкидки Тогда
		ОбластьМакета = Макет.ПолучитьОбласть("ПодвалТаблицыСоСкидкой");
		
    Иначе
		ОбластьМакета = Макет.ПолучитьОбласть("ПодвалТаблицы");
	КонецЕсли;
	
	//Если ЭтоФинДокумент Тогда
	//	ОбластьМакета.Параметры.ИтСуммаБезНДС 	= ИтСуммаБезНДС;
	//	ОбластьМакета.Параметры.ИтСуммаНДС 		= ИтСуммаНДС;
	//	ОбластьМакета.Параметры.ИтВсего 		= ИтВсего;
	//	
	//	ТабличныйДокумент.Вывести(ОбластьМакета);
	//
	//	ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
	//	
	//	ОбластьМакета.Параметры.ИтВсегоПрописью		= ОбщегоНазначенияСервер.СформироватьСуммуПрописью(ИтВсего);
	//	ОбластьМакета.Параметры.ИтСуммаНДСПрописью  = ОбщегоНазначенияСервер.СформироватьСуммуПрописью(ИтСуммаНДС);
	//	
	//	ТабличныйДокумент.Вывести(ОбластьМакета);
	//	
	//Иначе
		ОбластьМакета.Параметры.ИтСуммаБезСкидки 		= ИтСуммаБезСкидки;
		ОбластьМакета.Параметры.ИтКоличество	= ИтКоличество;
		
		Если ЕстьСкидки Тогда
        	ОбластьМакета.Параметры.ИтСуммаСкидки		= ИтСуммаСкидки;
        	ОбластьМакета.Параметры.ИтСуммаВсего		= ИтСуммаБезСкидки - ИтСуммаСкидки;
		КонецЕсли;
		
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		
        ОбластьМакета.Параметры.ОбщийВес		= ОбщийВес;
		
		//ОбластьМакета.Параметры.Наборщик
		//ОбластьМакета.Параметры.Кладовщик
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
	//КонецЕсли;
	

КонецПроцедуры

Процедура ПечатьНалоговойНакладной(ТабличныйДокумент, Шапка, ВыборкаСтрокЗапасы)
	
	Если НЕ Шапка.Организация.ФинУчет Тогда
		Возврат;
	КонецЕсли;
	
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РасходнаяНакладная_Налоговая";
	

	Макет = УправлениеПечатью.ПолучитьМакет("Документ.РасходнаяНакладная.НалоговаяНакладная_2011_2");
	
	НомерНалоговой = Прав("       "+СокрЛП(Число(Прав(Шапка.Номер, 5))), 7);
	
	КодЯзыкаПечать = Локализация.ПолучитьЯзыкФормированияПечатныхФорм();	
	//Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	
	ОбластьМакета = Макет.ПолучитьОбласть("Оригинал");
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	
	_ДатаОтгрузки = Формат(Шапка.ДатаОтгрузки, "ДФ=ddMMyyyy");
	Для Инд = 1 По 8 Цикл
		ОбластьМакета.Параметры["_ДатаОтгрузки"+Инд]    = Сред(_ДатаОтгрузки, Инд, 1);
	КонецЦикла;
	
	НомерНалоговой = Прав("       "+СокрЛП(Число(Прав(Шапка.Номер, 5))), 7);
	Для Инд = 1 По 7 Цикл
		ОбластьМакета.Параметры["НомерНалоговой"+Инд]    = Сред(НомерНалоговой, Инд, 1);
	КонецЦикла;
	
	
	// вынести получить данные организации и т.п.
	
	
	
	//ОбластьМакета.Параметры.ТекстЗаголовка = НСтр("ru='Расходная накладная № ';uk='Видаткова накладна № '", КодЯзыкаПечать)
	//			+ НомерДокумента
	//			+ НСтр("ru=' от ';uk=' від '", КодЯзыкаПечать)
	//			+ Формат(Шапка.ДатаДокумента, "Л="+КодЯзыкаПечать+"; ДФ='dd MMMM yyyy'");
		
	ОбластьМакета.Параметры.ФирмаПолнНаименование 	= СокрЛП(Шапка.Организация.ПолнНаименование);
	ОбластьМакета.Параметры.КлиентПолнНаим 			= СокрЛП(Шапка.Контрагент.ПолнНаим);
	ОбластьМакета.Параметры.ЮрАдрес 				= СокрЛП(Шапка.Организация.ЮрАдрес);
	ОбластьМакета.Параметры.КлиентЮрАдрес 			= СокрЛП(Шапка.Контрагент.ЮрАдрес);
	
	ФирмаНалогНомер = Прав("            " + СокрЛП(Шапка.Организация.ИНН), 12);
	ФирмаНомСвид	= Прав("          " + СокрЛП(Шапка.Организация.СвидетельствоСерияНомер), 10);
	ФирмаТелефоны	= СокрЛП(СтрЗаменить(Шапка.Организация.Телефоны,"-",""));
	
	Для Инд = 1 По 12 Цикл
		ОбластьМакета.Параметры["ФирмаНалогНомер_"+Инд]    = Сред(ФирмаНалогНомер, Инд, 1);
	КонецЦикла;
	
	Для Инд = 1 По 10 Цикл
		ОбластьМакета.Параметры["ФирмаНомСвид_"+Инд]    = Сред(ФирмаНомСвид, Инд, 1);
	КонецЦикла;
	
	Для Инд = 1 По 10 Цикл
		ОбластьМакета.Параметры["ФирмаТелефоны_"+Инд]    = Сред(ФирмаТелефоны, Инд, 1);
	КонецЦикла;
	
	КонтрагентНалогНомер	= Прав("            " + СокрЛП(Шапка.Контрагент.НомерПлательщикаНДС), 12);
	КонтрагентНомСвид		= Прав("          " + СокрЛП(Шапка.Контрагент.НомерСвидетельства), 10);
	КлиентТелефоны			= СокрЛП(СтрЗаменить(Шапка.Контрагент.Телефоны,"-",""));
	
	Для Инд = 1 По 12 Цикл
		ОбластьМакета.Параметры["КонтрагентНалогНомер_"+Инд]    = Сред(КонтрагентНалогНомер, Инд, 1);
	КонецЦикла;
	
	Для Инд = 1 По 10 Цикл
		ОбластьМакета.Параметры["КонтрагентНомСвид_"+Инд]    = Сред(КонтрагентНомСвид, Инд, 1);
	КонецЦикла;
	
	Для Инд = 1 По 10 Цикл
		ОбластьМакета.Параметры["КлиентТелефоны_"+Инд]    = Сред(КлиентТелефоны, Инд, 1);
	КонецЦикла;
	
	ОбластьМакета.Параметры.УсловиеПродажи1 = СокрЛП(Шапка.Контрагент.ВидДоговора);
	
	УсловиеПродажи2 = Формат(Шапка.Контрагент.ДатаДоговора, "ДФ=ddMMyyyy");
	Для Инд = 1 По 8 Цикл
		ОбластьМакета.Параметры["УсловиеПродажи2_"+Инд]    = Сред(УсловиеПродажи2, Инд, 1);
	КонецЦикла;
	
	ОбластьМакета.Параметры.НомДог_1	= СокрЛП(Шапка.Контрагент.НомерДоговора);
    ОбластьМакета.Параметры.ФормаРасчетов = "оплата з поточного рахунку";


	
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	
	ИтСуммаБезНДС	= 0;
	ИтСуммаНДС		= 0;
	ИтСумма			= 0;
	
	
	ОбластьМакета = Макет.ПолучитьОбласть("РазделI1");
	
	ВыборкаСтрокЗапасы.Сбросить();
	Пока ВыборкаСтрокЗапасы.Следующий() Цикл
		
		ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокЗапасы);
		
		ОбластьМакета.Параметры.ДатаОтгр = Шапка.ДатаОтгрузки;
		ОбластьМакета.Параметры.КВЕД = ВыборкаСтрокЗапасы.Номенклатура.КВЕД;
		
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		
		ИтСуммаБезНДС	= ИтСуммаБезНДС + ВыборкаСтрокЗапасы.СуммаБезНДС;
		ИтСуммаНДС		= ИтСуммаНДС + ВыборкаСтрокЗапасы.СуммаНДС;
		ИтСумма			= ИтСумма + ВыборкаСтрокЗапасы.Сумма;
		
	КонецЦикла;
	
	ОбластьМакета = Макет.ПолучитьОбласть("РазделIВсего");
	
	ОбластьМакета.Параметры.ИтСуммаБезНДС = ИтСуммаБезНДС;
	
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("ВозврТара");
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("НДС");
	
	ОбластьМакета.Параметры.ОбщНДС = ИтСуммаНДС;
	ОбластьМакета.Параметры.ВсегоНДС = ИтСуммаНДС;
	
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("ОбщаяСумма");
	
	ОбластьМакета.Параметры.ОбщСуммаСНДС = ИтСумма;
	ОбластьМакета.Параметры.ОбщСуммаСНДС = ИтСумма;
	
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	
	ОбластьМакета.Параметры.Ответственный = Шапка.Организация.ГлБухгалтер;
	
	ТабличныйДокумент.Вывести(ОбластьМакета);

КонецПроцедуры

Функция ПечатнаяФорма(МассивОбъектов, ОбъектыПечати, ИмяМакета, КоллекцияПечатныхФорм)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПараметрыПечати_ВозвратОтПокупателя";
	
	ПервыйДокумент = Истина;
	
	Для Каждого ТекущийДокумент Из МассивОбъектов Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Если ИмяМакета = "Накладная" Тогда
			
			запрос = Новый Запрос();
			
			#Область ТекстЗапроса
			
			запрос.Текст = 
			"ВЫБРАТЬ
			|	ВозвратОтПокупателя.Ссылка,
			|	ВозвратОтПокупателя.Подразделение,
			|	ВозвратОтПокупателя.Дата КАК ДатаДокумента,
			|	ВозвратОтПокупателя.Номер,
			|	ВозвратОтПокупателя.Организация,
			|	ВозвратОтПокупателя.Контрагент,
			|	ВозвратОтПокупателя.ТипЦен,
			|	ВозвратОтПокупателя.Комментарий,
			|	ВозвратОтПокупателя.СтруктурнаяЕдиница КАК Склад,
			|	ВозвратОтПокупателя.СуммаСкидки,
			|	ЕСТЬNULL(УсловияОбслуживанияПокупателейСрезПоследних.РекомендованныйТипЦен, ЗНАЧЕНИЕ(Справочник.ТипыЦен.ПустаяСсылка)) КАК ТипЦенРекомендованный
			|ПОМЕСТИТЬ ВТ_ДанныеДокумента
			|ИЗ
			|	Документ.ВозвратОтПокупателя КАК ВозвратОтПокупателя
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УсловияОбслуживанияПокупателей.СрезПоследних(НАЧАЛОПЕРИОДА(&Период, ДЕНЬ), ) КАК УсловияОбслуживанияПокупателейСрезПоследних
			|		ПО ВозвратОтПокупателя.Контрагент = УсловияОбслуживанияПокупателейСрезПоследних.Контрагент
			|ГДЕ
			|	ВозвратОтПокупателя.Ссылка = &ТекущийДокумент
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_ДанныеДокумента.ДатаДокумента,
			|	ВТ_ДанныеДокумента.Номер,
			|	ВТ_ДанныеДокумента.Организация,
			|	ВТ_ДанныеДокумента.Контрагент,
			|	ВТ_ДанныеДокумента.ТипЦен,
			|	ВТ_ДанныеДокумента.Комментарий,
			|	ВТ_ДанныеДокумента.Склад,
			|	ВТ_ДанныеДокумента.СуммаСкидки,
			|	ВТ_ДанныеДокумента.ТипЦенРекомендованный
			|ИЗ
			|	ВТ_ДанныеДокумента КАК ВТ_ДанныеДокумента
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_ДанныеДокумента.Ссылка,
			|	ВозвратОтПокупателяЗапасы.НомерСтроки КАК НомерСтроки,
			|	ВозвратОтПокупателяЗапасы.Номенклатура,
			|	ВозвратОтПокупателяЗапасы.ЕдиницаИзмерения КАК ЕдСокрНаим,
			|	ВозвратОтПокупателяЗапасы.Количество,
			|	ВЫБОР
			|		КОГДА ВТ_ДанныеДокумента.ТипЦенРекомендованный = ЗНАЧЕНИЕ(Справочник.ТипыЦен.ПустаяСсылка)
			|			ТОГДА ВозвратОтПокупателяЗапасы.Цена
			|		ИНАЧЕ ЕСТЬNULL(РекомендованныеЦены.Цена, 0)
			|	КОНЕЦ КАК Цена,
			|	ВозвратОтПокупателяЗапасы.Сумма КАК Сумма,
			|	ВозвратОтПокупателяЗапасы.СтавкаНДС,
			|	ВозвратОтПокупателяЗапасы.СуммаНДС,
			|	ВозвратОтПокупателяЗапасы.Всего,
			|	ВозвратОтПокупателяЗапасы.ПроцентСкидки,
			|	ВозвратОтПокупателяЗапасы.Скидка,
			|	ВЫБОР
			|		КОГДА ВТ_ДанныеДокумента.ТипЦенРекомендованный = ЗНАЧЕНИЕ(Справочник.ТипыЦен.ПустаяСсылка)
			|			ТОГДА ВозвратОтПокупателяЗапасы.СуммаБезСкидки
			|		ИНАЧЕ ВЫРАЗИТЬ(ЕСТЬNULL(РекомендованныеЦены.Цена, 0) * ВозвратОтПокупателяЗапасы.Количество КАК ЧИСЛО(10, 2))
			|	КОНЕЦ КАК СуммаБезСкидки,
			|	ВозвратОтПокупателяЗапасы.СтруктурнаяЕдиница,
			|	ВозвратОтПокупателяЗапасы.Номенклатура.ПолнНаим КАК ТоварПолнНаим,
			|	ВозвратОтПокупателяЗапасы.Номенклатура.Наименование КАК ТоварНаим,
			|	ВозвратОтПокупателяЗапасы.Номенклатура.Код КАК ТоварКод,
			|	ВозвратОтПокупателяЗапасы.Цена / 1.2 КАК ЦенаБезНДС,
			|	ВозвратОтПокупателяЗапасы.Сумма / 1.2 КАК СуммаБезНДС,
			|	ВозвратОтПокупателяЗапасы.Номенклатура.Вес,
			|	ВозвратОтПокупателяЗапасы.Номенклатура.Родитель.Наименование КАК Производитель
			|ИЗ
			|	ВТ_ДанныеДокумента КАК ВТ_ДанныеДокумента
			|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратОтПокупателя.Запасы КАК ВозвратОтПокупателяЗапасы
			|		ПО ВТ_ДанныеДокумента.Ссылка = ВозвратОтПокупателяЗапасы.Ссылка
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(НАЧАЛОПЕРИОДА(&Период, ДЕНЬ), ) КАК РекомендованныеЦены
			|		ПО ВТ_ДанныеДокумента.Подразделение = РекомендованныеЦены.Подразделение
			|			И ВТ_ДанныеДокумента.ТипЦенРекомендованный = РекомендованныеЦены.ТипЦен
			|			И (ВозвратОтПокупателяЗапасы.Номенклатура = РекомендованныеЦены.Номенклатура)
			|
			|УПОРЯДОЧИТЬ ПО
			|	НомерСтроки";
			
			#КонецОбласти
			
			запрос.УстановитьПараметр("Период", текущийДокумент.Дата);
			запрос.УстановитьПараметр("ТекущийДокумент", текущийДокумент);
			
			результатЗапроса = запрос.ВыполнитьПакет();
			
			шапка = результатЗапроса[1].Выгрузить()[0];
			
			номерДокумента = шапка.Номер;
			
			выборкаСтрокЗапасы = результатЗапроса[2].Выбрать();
			
			ПечатьВозврата(табличныйДокумент, шапка, выборкаСтрокЗапасы);
			
			табличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;

			
			
		ИначеЕсли ИмяМакета = "ТОРГ12" ИЛИ ИмяМакета = "ТОРГ12СУслугами" Тогда
			
			
		КонецЕсли;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ТекущийДокумент);
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;
	
КонецФункции // ПечатнаяФорма()

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов,
				 ПараметрыПечати,
				 КоллекцияПечатныхФорм,
				 ОбъектыПечати,
				 ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Накладная") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Накладная", "Возврат от покупателя", ПечатнаяФорма(МассивОбъектов, ОбъектыПечати, "Накладная", КоллекцияПечатныхФорм));
	КонецЕсли;
	
	
КонецПроцедуры


