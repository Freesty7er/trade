
#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ОбработкаВыбора(выбранноеЗначение, источникВыбора)
	
	типВыбранногоЗначения = ТипЗнч(выбранноеЗначение);
	
	Если типВыбранногоЗначения = Тип("Структура") Тогда
		
		обработкаВыбораДолгов = Неопределено;
		Если выбранноеЗначение.Свойство("ОбработкаВыбораДолгов", обработкаВыбораДолгов) И обработкаВыбораДолгов Тогда
			
			Элементы.Покупатель.ТекущиеДанные.Менеджер 			= выбранноеЗначение.Менеджер;
			Элементы.Покупатель.ТекущиеДанные.КредитныйДокумент = выбранноеЗначение.КредДокумент;
			Элементы.Покупатель.ТекущиеДанные.Сальдо 			= выбранноеЗначение.Долг;
			Элементы.Покупатель.ТекущиеДанные.Сумма 			= выбранноеЗначение.Долг;
			
		КонецЕсли;
		
	КонецЕсли;
	
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ВзаиморасчетыКредитныйДокументНачалоВыбора(элемент, данныеВыбора, стандартнаяОбработка)
	
	стандартнаяОбработка = Ложь;
	
	структураПараметров = Новый Структура("Подразделение, ОкончаниеПериода, Контрагент", Объект.Подразделение, ?(Объект.Проведен, Объект.Дата, КонецДня(Объект.Дата)), Элементы.Покупатель.ТекущиеДанные.Контрагент);
	
	ОткрытьФорму("ОбщаяФорма.ФормаПодбораДолгов", СтруктураПараметров, ЭтаФорма,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УправлениеНебольшойФирмойСервер.ЗаполнитьШапкуДокумента(
		Объект,
		,
		Параметры.ЗначениеКопирования,
		Параметры.Основание,
		СостояниеДокумента,
		КартинкаСостоянияДокумента,
		РазрешеноПроведение,
		Параметры.ЗначенияЗаполнения
	);
	
КонецПроцедуры


&НаСервере
Функция ЗаполнитьОстаткиПоПокупателюСервер()
	
	запрос = Новый Запрос;
	
	#Область ТекстЗапроса
	
	запрос.Текст = 
	"ВЫБРАТЬ
	|	ВзаиморасчетыСПокупателямиОстатки.Контрагент,
	|	ВзаиморасчетыСПокупателямиОстатки.Менеджер,
	|	ВзаиморасчетыСПокупателямиОстатки.КредитныйДокумент,
	|	СУММА(ВзаиморасчетыСПокупателямиОстатки.СуммаОстаток) КАК Сальдо,
	|	СУММА(ВзаиморасчетыСПокупателямиОстатки.СуммаОстаток) КАК Сумма
	|ИЗ
	|	РегистрНакопления.ВзаиморасчетыСПокупателями.Остатки(
	|			&КонецПериода,
	|			Подразделение = &Подразделение
	|				И ВЫБОР
	|					КОГДА &ЕстьОтборКонтрагент
	|						ТОГДА Контрагент = &ОтборКонтрагент
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ
	|				И ВЫБОР
	|					КОГДА &ЕстьОтборМенеджер
	|						ТОГДА Менеджер = &ОтборМенеджер
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ) КАК ВзаиморасчетыСПокупателямиОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ВзаиморасчетыСПокупателямиОстатки.КредитныйДокумент,
	|	ВзаиморасчетыСПокупателямиОстатки.Контрагент,
	|	ВзаиморасчетыСПокупателямиОстатки.Менеджер
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВзаиморасчетыСПокупателямиОстатки.Менеджер.Наименование,
	|	ВзаиморасчетыСПокупателямиОстатки.Контрагент.Наименование,
	|	ВзаиморасчетыСПокупателямиОстатки.КредитныйДокумент.Дата";
	
	#КонецОбласти
	
	запрос.УстановитьПараметр("КонецПериода", Новый Граница(Объект.Дата, ВидГраницы.Включая));
	запрос.УстановитьПараметр("Подразделение", Объект.Подразделение);
	запрос.УстановитьПараметр("ОтборКонтрагент", ОтборКонтрагент);
	запрос.УстановитьПараметр("ОтборМенеджер", ОтборМенеджер);
	запрос.УстановитьПараметр("ЕстьОтборКонтрагент", ЕстьОтборКонтрагент);
	запрос.УстановитьПараметр("ЕстьОтборМенеджер", ЕстьОтборМенеджер);
	
	результатЗапроса = запрос.Выполнить();
	
	Если результатЗапроса.Пустой() Тогда
		Возврат (Ложь);
	КонецЕсли;
	
	выборка = результатЗапроса.Выбрать();
	Пока выборка.Следующий() Цикл
		
		новаяСтрока = Объект.Покупатель.Добавить();
		ЗаполнитьЗначенияСвойств(новаяСтрока, Выборка);
		
	КонецЦикла;
	
	Возврат (Истина);
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьОстаткиПоПокупателю(команда)
	
	Если Объект.Проведен Тогда
		Предупреждение("Необходимо отменить проведение документа!");
		Возврат;
	КонецЕсли;
	
	параметрыОтбора = ПолучитьФорму("Документ.Зачет.Форма.ОтборПоКонтрагентуМенеджеру").ОткрытьМодально();
	
	Если параметрыОтбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОтборКонтрагент = параметрыОтбора.Контрагент;
	ОтборМенеджер = параметрыОтбора.Менеджер;
	ЕстьОтборКонтрагент = параметрыОтбора.ЕстьОтборКонтрагент;
	ЕстьОтборМенеджер = параметрыОтбора.ЕстьОтборМенеджер;
	
	Если Не ЗаполнитьОстаткиПоПокупателюСервер() Тогда
		Предупреждение("Отсутствуют данные для заполнения");
	КонецЕсли;
	
КонецПроцедуры

