
#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(отказ, режимПроведения)
	
	// Инициализация дополнительных свойств для проведения документа.
	ОбщегоНазначенияСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей.
	ОбщегоНазначенияСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Инициализация данных документа.
	//Документы.РасходДенег.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	
	// Отражение в разделах учета
	//ОбщегоНазначенияСервер.ОтразитьДвиженияПоРегистрамНакопления(ДополнительныеСвойства, Движения, отказ);
		

	
	// Денежные средства
	движение = Движения.ДенежныеСредства.ДобавитьРасход();
	
	движение.Период 		= Дата;
	движение.Подразделение	= Подразделение;
	движение.ДенежныйСчет	= ДенежныйСчет;
	движение.Сумма 			= СуммаДокумента * Курс/Кратность;
	движение.СуммаВал		= СуммаДокумента;
	движение.Валюта			= ВалютаДокумента;
	движение.СчетУчета		= ДенежныйСчет.СчетУчета;
	движение.КорСчет		= ОперацияДокумента.КорСчет;
	
	Если ОперацияДокумента = Справочники.ОперацииДокументов.РасходДенегОплата Тогда
		
		движение = Движения.ВзаиморасчетыСПоставщиками.Добавить();
		
		движение.Период 			= Дата;
		движение.ВидДвижения 		= ВидДвиженияНакопления.Приход;
		движение.Подразделение		= Подразделение;
		движение.Контрагент			= Контрагент;
		движение.ЦФО				= ЦФО;
		движение.СчетУчета			= ПланыСчетов.Внутренний.ВзаиморасчетыСПоставщикамиЗаТовар;
		движение.КорСчет			= ДенежныйСчет.СчетУчета;
		
		Если (Контрагент.ТипВеденияВзаиморасчетов = Перечисления.ТипыВеденияВзаиморасчетов.ПоСчетам) ИЛИ
				(Контрагент.ТипВеденияВзаиморасчетов = Перечисления.ТипыВеденияВзаиморасчетов.ПоЗаказамПоставщику) Тогда
				
			движение.КредитныйДокумент	= КредитныйДокумент;
				
		КонецЕсли;
		
		движение.Сумма 				= СуммаДокумента * Курс/Кратность;
		движение.СуммаВал			= СуммаДокумента;
		движение.Валюта				= ВалютаДокумента;
		
	ИначеЕсли ОперацияДокумента = Справочники.ОперацииДокументов.РасходДенегВозвратПокупателю Тогда
		
		движение = Движения.ВзаиморасчетыСПокупателями.Добавить();
		
		движение.Период 		= Дата;
		движение.ВидДвижения 	= ВидДвиженияНакопления.Приход;
		движение.Подразделение	= Подразделение;
		движение.Контрагент		= Контрагент;
		движение.Менеджер		= Справочники.Менеджеры.БезМенеджера;
		
		движение.Сумма 			= СуммаДокумента * Курс/Кратность;
		движение.СуммаВал		= СуммаДокумента;
		движение.Валюта			= ВалютаДокумента;
		
		движение.СчетУчета		= ПланыСчетов.Внутренний.ВзаиморасчетыСПокупателямиЗаТовар;
		движение.КорСчет		= ДенежныйСчет.СчетУчета;
		
	ИначеЕсли ОперацияДокумента = Справочники.ОперацииДокументов.РасходДенегЗатраты Тогда
		
		движение = Движения.ФинансовыйРезультат.Добавить();
		
		движение.Период 		= Дата;
		движение.Подразделение	= Подразделение;
		движение.СтатьяЗатрат	= СтатьяЗатрат;
		
		Если ЗначениеЗаполнено(ОбъектЗатрат) Тогда
			движение.Объект			= ОбъектЗатрат;
		Иначе
			движение.Объект			= Справочники.ОтделыВМагазинах.ПустаяСсылка();
		КонецЕсли;
		
		движение.СуммаРасходов	= СуммаДокумента * Курс/Кратность;
		
		//движение.СчетУчета		= ОперацияДокумента.КорСчет;
		движение.КорСчет		= ДенежныйСчет.СчетУчета;
		
	ИначеЕсли ОперацияДокумента = Справочники.ОперацииДокументов.РасходДенегЗатратыСписком Тогда
		
		Для Каждого СтрокаЗатрат Из ЗатратыСписком Цикл
			
			движение = Движения.ФинансовыйРезультат.Добавить();
			движение.Период 		= ЭтотОбъект.Дата;
			
			движение.Подразделение	= ЭтотОбъект.Подразделение;
			движение.СтатьяЗатрат	= СтрокаЗатрат.СтатьяЗатрат;
			
			Если ЗначениеЗаполнено(СтрокаЗатрат.ОбъектЗатрат) Тогда
				движение.Объект			= СтрокаЗатрат.ОбъектЗатрат;
			Иначе
				движение.Объект			= Справочники.ОтделыВМагазинах.ПустаяСсылка();
			КонецЕсли;
			
			движение.СуммаРасходов	= СтрокаЗатрат.Сумма * Курс/Кратность;
			
			//движение.СчетУчета = ОперацияДокумента.КорСчет;
			движение.КорСчет		= ДенежныйСчет.СчетУчета;
			
		КонецЦикла;
		
	ИначеЕсли ОперацияДокумента = Справочники.ОперацииДокументов.РасходДенегВедомость Тогда
		
		Для Каждого СтрокаСостава Из Ведомость.Состав Цикл
			
			движение = Движения.ВзаиморасчетыССотрудниками.Добавить();
			
			движение.Период 		= ЭтотОбъект.Дата;
			движение.ВидДвижения 	= ВидДвиженияНакопления.Приход;
			движение.Сотрудник		= СтрокаСостава.Сотрудник;
			движение.Сумма 			= СтрокаСостава.Сумма * Курс/Кратность;
			движение.Подразделение	= ЭтотОбъект.Подразделение;
			
			движение.СчетУчета		= ПланыСчетов.Внутренний.Зарплата;
			движение.КорСчет		= ДенежныйСчет.СчетУчета;
			
			движение = Движения.РасчетыПоОплатеТруда.Добавить();
			
			движение.Период 			= Дата;
			движение.ВидРасчета 		= Справочники.ВидыРасчетов.ВыплатаЗарплаты;
			движение.ПериодРегистрации 	= Ведомость.ПериодРегистрации;
			движение.Подразделение 		= ЭтотОбъект.Подразделение;
			движение.Сотрудник 			= СтрокаСостава.Сотрудник;
			движение.Результат 			= СтрокаСостава.Сумма * Курс/Кратность;
			
		КонецЦикла;
		
	ИначеЕсли ОперацияДокумента = Справочники.ОперацииДокументов.РасходДенегЗарплата Тогда
		
		движение = Движения.ВзаиморасчетыССотрудниками.Добавить();
		движение.Период 		= ЭтотОбъект.Дата;
		движение.ВидДвижения 	= ВидДвиженияНакопления.Приход;
		движение.Сотрудник		= ЭтотОбъект.Сотрудник;
		движение.Сумма 			= ЭтотОбъект.СуммаДокумента * Курс/Кратность;
		движение.Подразделение	= ЭтотОбъект.Подразделение;
		
		движение.СчетУчета		= ПланыСчетов.Внутренний.Зарплата;
		движение.КорСчет		= ДенежныйСчет.СчетУчета;
		
		движение = Движения.РасчетыПоОплатеТруда.Добавить();
		
		движение.Период 			= Дата;
		движение.ВидРасчета 		= Справочники.ВидыРасчетов.Аванс;
		движение.ПериодРегистрации 	= НачалоМесяца(ЭтотОбъект.Дата);
		движение.Подразделение 		= ЭтотОбъект.Подразделение;
		движение.Сотрудник 			= ЭтотОбъект.Сотрудник;
		движение.Результат 			= ЭтотОбъект.СуммаДокумента * Курс/Кратность;
		
	ИначеЕсли ОперацияДокумента = Справочники.ОперацииДокументов.ВыдачаКредитаСотруднику Тогда
		
		движение = Движения.ВзаиморасчетыПоВыданнымКредитам.Добавить();
		движение.Период 		= ЭтотОбъект.Дата;
		движение.ВидДвижения 	= ВидДвиженияНакопления.Приход;
		движение.Подразделение	= ЭтотОбъект.Подразделение;
		движение.Сотрудник		= ЭтотОбъект.Сотрудник;
		
		движение.Сумма 			= СуммаДокумента * Курс/Кратность;
		движение.СуммаВал		= СуммаДокумента;
		движение.Валюта			= ВалютаДокумента;
		
		движение.СчетУчета		= ПланыСчетов.Внутренний.КредитыИЗаймы;
		движение.КорСчет		= ДенежныйСчет.СчетУчета;
		
	ИначеЕсли ОперацияДокумента = Справочники.ОперацииДокументов.РасходДенегПодотчет Тогда
		
		движение = Движения.ВзаиморасчетыССотрудниками.Добавить();
		движение.Период 		= ЭтотОбъект.Дата;
		движение.ВидДвижения 	= ВидДвиженияНакопления.Приход;
		движение.Сотрудник		= ЭтотОбъект.Сотрудник;
		движение.Сумма 			= ЭтотОбъект.СуммаДокумента * Курс/Кратность;
		движение.Подразделение	= ЭтотОбъект.Подразделение;
		
		движение.СчетУчета		= ПланыСчетов.Внутренний.Подотчет;
		движение.КорСчет		= ДенежныйСчет.СчетУчета;
		
	//ИначеЕсли ОперацияДокумента = Справочники.ОперацииДокументов.РасходДенегВозвратПокупателю Тогда
	//	
	//	Взаиморасчеты = ЭтотОбъект.Движения.ВзаиморасчетыСПокупателями;
	//	
	//	Движение = Взаиморасчеты.Добавить();
	//	Движение.Период 		= ЭтотОбъект.Дата;
	//	Движение.ВидДвижения 	= ВидДвиженияНакопления.Расход;
	//	Движение.Контрагент		= ЭтотОбъект.Контрагент;
	//	Движение.Подразделение	= Подразделение;
	//	Движение.Менеджер		= Справочники.Менеджеры.БезМенеджера;
	//	
	//	Движение.Сумма 			= -1*ЭтотОбъект.СуммаДокумента * Курс/Кратность;
	//	Движение.СуммаВал		= -1*ЭтотОбъект.СуммаДокумента;
	//	//Движение.СчетУчета		= ПланыСчетов.Внутренний.ВзаиморасчетыСПокупателямиЗаТовар;
	//	Движение.Валюта			= ВалютаДокумента;
	//	
	//	Взаиморасчеты.Записать();

	ИначеЕсли ОперацияДокумента = Справочники.ОперацииДокументов.ВыдачаКредита Тогда
		
		движение = Движения.ВзаиморасчетыСПокупателями.Добавить();
		движение.Период 		= ЭтотОбъект.Дата;
		движение.ВидДвижения 	= ВидДвиженияНакопления.Приход;
		движение.Подразделение	= Подразделение;
		движение.Контрагент		= ЭтотОбъект.Контрагент;
		движение.Менеджер		= Справочники.Менеджеры.БезМенеджера;
		
		движение.Сумма 			= СуммаДокумента * Курс/Кратность;
		движение.СуммаВал		= СуммаДокумента;
		движение.Валюта			= ВалютаДокумента;
		
		движение.СчетУчета		= ПланыСчетов.Внутренний.ВзаиморасчетыСПокупателямиПоКредитам;
		движение.КорСчет		= ДенежныйСчет.СчетУчета;
		
	ИначеЕсли ОперацияДокумента = Справочники.ОперацииДокументов.ВозвратКредитаРасход Тогда
		
		движение = Движения.ВзаиморасчетыСПоставщиками.Добавить();
		
		движение.Период 		= Дата;
		движение.ВидДвижения 	= ВидДвиженияНакопления.Приход;
		движение.Подразделение	= Подразделение;
		
		движение.Контрагент		= Контрагент;
		движение.ЦФО			= ЦФО;
		
		движение.Сумма 			= СуммаДокумента * Курс/Кратность;
		движение.СуммаВал		= СуммаДокумента;
		движение.Валюта			= ВалютаДокумента;
		
		движение.СчетУчета		= ПланыСчетов.Внутренний.ВзаиморасчетыСПоставщикамиПоКредитам;
		движение.КорСчет		= ДенежныйСчет.СчетУчета;
		
	ИначеЕсли ОперацияДокумента = Справочники.ОперацииДокументов.РасходДенегПриобретение Тогда
		
		Для Каждого строкаСостава Из ДенежныеДокументы Цикл
			
			движение = Движения.ДенежныеДокументыНаХранении.Добавить();
			
			движение.ВидДвижения 	= ВидДвиженияНакопления.Приход;
			движение.Период 		= Дата;
			движение.Подразделение	= Подразделение;
			движение.Номенклатура	= строкаСостава.Номенклатура;
			движение.Количество		= строкаСостава.Количество;
			движение.Сумма			= строкаСостава.Сумма;
			
			УстановкаЦен = Движения.ЦеныНоменклатуры.Добавить();
			
			УстановкаЦен.Период	= Дата;
			УстановкаЦен.Подразделение	= Подразделение;
			УстановкаЦен.Номенклатура	= строкаСостава.Номенклатура;
			УстановкаЦен.ТипЦен			= Справочники.ТипыЦен.Закупка;
			
			Если НЕ СтрокаСостава.Количество = 0 Тогда
				УстановкаЦен.Цена			= строкаСостава.Сумма / строкаСостава.Количество;
			КонецЕсли;
			
			УстановкаЦен.ЕдиницаИзмерения 	= строкаСостава.Номенклатура.ЕдиницаИзмерения;
			УстановкаЦен.ВалютаЦены			= ВалютаДокумента;
			УстановкаЦен.Автор				= Автор;
			
			движение = Движения.ПартииТоваровНаСкладах.ДобавитьПриход();
			
			движение.Период 		= Дата;
			движение.Подразделение	= Подразделение;
			движение.Склад			= строкаСостава.Номенклатура.Родитель.Склад;
			движение.Номенклатура	= строкаСостава.Номенклатура;
			движение.СчетУчета		= строкаСостава.Номенклатура.СчетУчета;
			движение.Валюта			= ВалютаДокумента;
			движение.Количество		= строкаСостава.Количество;
			движение.Стоимость		= строкаСостава.Сумма * Курс/Кратность;
			движение.СтоимостьВал	= строкаСостава.Сумма;
			движение.ВидХранения	= Перечисления.ВидыХраненияЗапасов.НаСкладе;
			движение.КорСчет		= ДенежныйСчет.СчетУчета;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(данныеЗаполнения, стандартнаяОбработка)
	
	СчетПолучателя = Справочники.РасчетныеСчета.ПустаяСсылка();
	
КонецПроцедуры

Процедура ПередЗаписью(отказ, режимЗаписи, режимПроведения)
	
	ПринадлежностьПоследовательностям.Запасы.Очистить();
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	Если ОперацияДокумента = Справочники.ОперацииДокументов.РасходДенегЗатратыСписком Тогда
		СуммаДокумента = ЗатратыСписком.Итог("Сумма");
	КонецЕсли;
	
	Если ОперацияДокумента = Справочники.ОперацииДокументов.РасходДенегПриобретение Тогда
		СуммаДокумента = ДенежныеДокументы.Итог("Сумма");
	КонецЕсли;
	
	// Проверка заполнения валюты 
	Если НЕ ЗначениеЗаполнено(ВалютаДокумента) Тогда
		ВалютаДокумента = Константы.ВалютаУчета.Получить();
		Курс = 1;
		Кратность = 1;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(объектКопирования)
	
	ЗаполнениеОбъектовСервер.ЗаполнитьДанныеСкопированногоДокумента(ЭтотОбъект, объектКопирования);
	
КонецПроцедуры

#КонецОбласти 