
#Область Обработчикисобытий

Процедура ОбработкаЗаполнения(данныеЗаполнения, стандартнаяОбработка)
	
	заполненНаОснованииДокумента = Ложь;
	
	ЗаполнениеОбъектовСервер.ЗаполнитьДанныеНовогоДокумента(ЭтотОбъект, данныеЗаполнения);
	
	// Заполнение по умолчанию.
	Если Подразделение.Пустая() Тогда
		Подразделение = ПользователиСервер.ПолучитьЗначениеНастройки("ОсновноеПодразделение");
	КонецЕсли;

	// Ввод на основании.
	типДанныхЗаполнения = ТипЗнч(данныеЗаполнения);
	
	Если типДанныхЗаполнения = Тип("Структура") Тогда
		
		ЗаполнитьДокументПоОтбору(данныеЗаполнения);
		
	ИначеЕсли типДанныхЗаполнения = Тип("ДокументСсылка.СтратегияПродвижения") Тогда
		
		ЗаполнитьДокументНаОснованииСтратегияПродвижения(данныеЗаполнения);
		заполненНаОснованииДокумента = Истина;
		
	ИначеЕсли типДанныхЗаполнения = Тип("ДокументСсылка.СтратегияЦенообразования") Тогда
		
		ЗаполнитьДокументНаОснованииСтратегияЦенообразования(данныеЗаполнения);
		заполненНаОснованииДокумента = Истина;

	КонецЕсли;
	
	
	свойствоСозданАвтоматически = Неопределено;
	Если ДополнительныеСвойства.Свойство("СозданАвтоматически", свойствоСозданАвтоматически) И свойствоСозданАвтоматически Тогда
		СозданАвтоматически = Истина;
		Комментарий = данныеЗаполнения.Комментарий;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если (ТипыЦен.Количество() = 0) Тогда
		
		текстСообщения = НСтр("ru = 'Не указаны типы цен'");
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = текстСообщения;
		Сообщение.Поле = "ТипыЦен";
		Сообщение.УстановитьДанные();
		Сообщение.Сообщить();
		
		Отказ = Истина;
		
	КонецЕсли;
	
	Движения.ЦеныНоменклатуры.Записывать = Истина;
	
	Цены = ЭтотОбъект.Движения.ЦеныНоменклатуры;
	
	Для Каждого СтрокаДокумента Из ЭтотОбъект.СтрокиДокумента Цикл
		
		Для Индекс = 0 По 30 Цикл
			
			ТипЦеныНаименование = "Цена" + ?(Индекс=0,"",СокрЛП(Индекс));
			
			ТекЦена = СтрокаДокумента[ТипЦеныНаименование];
			
			Если Индекс = 0 Тогда
				ТекТипЦен = Справочники.ТипыЦен.Закупка;
			Иначе
				ТекТипЦен = Справочники.ТипыЦен.НайтиПоНаименованию(СтрЗаменить(ТипЦеныНаименование,"Цена", "Категория "));
			КонецЕсли;
			
			
			Если ТипыЦен.Найти(ТекТипЦен, "ТипЦен") = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			Если НЕ (ТекЦена = 0) Или ЗаписыватьНулевыеЦены Тогда
				
				Движение = Цены.Добавить();
				
				Движение.Период = ЭтотОбъект.Дата;
				Движение.Номенклатура = СтрокаДокумента.Номенклатура;
				
				Если Индекс = 0 Тогда
					Движение.ТипЦен = Справочники.ТипыЦен.Закупка;
				Иначе
					Движение.ТипЦен = Справочники.ТипыЦен.НайтиПоНаименованию(СтрЗаменить(ТипЦеныНаименование,"Цена", "Категория "));
				КонецЕсли;
				
				Движение.Цена 			= ТекЦена;
				Движение.Подразделение 	= Подразделение;
				Движение.ВалютаЦены		= Константы.ВалютаУчета.Получить();
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	#Область ПоследовательностьЗапасы
	
	Если Не отказ Тогда
		
		запрос = Новый Запрос;
		
		#Область ТекстЗапроса
		
		запрос.Текст =
		"ВЫБРАТЬ
		|	СоставДокумента.Ссылка.Подразделение,
		|	СоставДокумента.Номенклатура.Родитель.Склад КАК МестоХранения,
		|	СоставДокумента.Номенклатура.Родитель.СчетУчета КАК СчетУчета
		|ИЗ
		|	Документ.УстановкаЦенНоменклатуры.СтрокиДокумента КАК СоставДокумента
		|ГДЕ
		|	СоставДокумента.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	СоставДокумента.Номенклатура.Родитель.СчетУчета,
		|	СоставДокумента.Ссылка.Подразделение,
		|	СоставДокумента.Номенклатура.Родитель.Склад";
			
		#КонецОбласти 
		
		запрос.УстановитьПараметр("Ссылка", Ссылка);
		
		результатЗапроса = запрос.Выполнить();
		
		ПринадлежностьПоследовательностям.Запасы.Загрузить(результатЗапроса.Выгрузить());
		
		отбор = Новый Структура ("Подразделение, МестоХранения, СчетУчета");
		
		выборка = результатЗапроса.Выбрать();
		Пока выборка.Следующий() Цикл
			
			ЗаполнитьЗначенияСвойств(отбор, выборка);
			
			Последовательности.Запасы.УстановитьГраницу(МоментВремени(), отбор);
			
		КонецЦикла;
		
	КонецЕсли;
	
	#КонецОбласти 
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ПроверяемыеРеквизиты.Добавить("Подразделение");
	
	ОбработкаТабличныхЧастейСервер.ПроверитьДублиСтрокТабличнойЧасти(Отказ, ЭтотОбъект, "СтрокиДокумента", Новый Структура("Номенклатура", "Номенклатура"));
	
КонецПроцедуры

Процедура ПередЗаписью(отказ, режимЗаписи, режимПроведения)
	
	ПринадлежностьПоследовательностям.Запасы.Очистить();
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	параметрыПодразделения = РегистрыСведений.ПараметрыУчетаПоПодразделениям
			.ПолучитьПоследнее(ТекущаяДатаСеанса(), Новый Структура("СтруктурнаяЕдиница", Подразделение));

	// для розницы цены устанавливаются на утро, а для филиалов на конец дня
	Если параметрыПодразделения.ЭтоРозница Тогда
		Дата = НачалоДня(Дата);
	Иначе
		Дата = КонецДня(Дата);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(объектКопирования)
	
	ЗаполнениеОбъектовСервер.ЗаполнитьДанныеСкопированногоДокумента(ЭтотОбъект, объектКопирования);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ЗаполнениеПоОснованию

Процедура ЗаполнитьДокументПоОтбору(Знач данныеЗаполнения)
		
КонецПроцедуры	

Процедура ЗаполнитьДокументНаОснованииСтратегияПродвижения(Знач данныеЗаполнения)
	
	УстановитьПривилегированныйРежим(Истина);
	
	// Заполнение реквизитов документа.
	ЗаполнениеОбъектовСервер.ЗаполнитьРеквизитыДокументаПриВводеНаОсновании(ЭтотОбъект, данныеЗаполнения);
	
	
	запрос = Новый Запрос;
	
	#Область ТекстЗапроса
	
	запрос.Текст =
	"ВЫБРАТЬ
	|	СтратегияПродвиженияАссортимент.Номенклатура,
	|	ВалютаУчета.Значение КАК Валюта,
	|	ЦеныНоменклатурыСрезПоследних.Цена,
	|	ИСТИНА КАК ИндивидуальнаяСтратегияЦенообразования
	|ИЗ
	|	Документ.СтратегияПродвижения.Ассортимент КАК СтратегияПродвиженияАссортимент
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(НАЧАЛОПЕРИОДА(&Период, ДЕНЬ), ) КАК ЦеныНоменклатурыСрезПоследних
	|		ПО СтратегияПродвиженияАссортимент.Ссылка.Подразделение = ЦеныНоменклатурыСрезПоследних.Подразделение
	|			И СтратегияПродвиженияАссортимент.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
	|			И (ЗНАЧЕНИЕ(Справочник.ТипыЦен.Закупка) = ЦеныНоменклатурыСрезПоследних.ТипЦен),
	|	Константа.ВалютаУчета КАК ВалютаУчета
	|ГДЕ
	|	СтратегияПродвиженияАссортимент.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТипыЦен.Ссылка КАК ТипЦен,
	|	ВЫБОР
	|		КОГДА ТипыЦен.Наименование = ""Закупка""
	|				ИЛИ ТипыЦен.Наименование = ""Категория 1""
	|				ИЛИ ТипыЦен.Наименование = ""Категория 10""
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Выбрана
	|ИЗ
	|	Справочник.ТипыЦен КАК ТипыЦен";
	
	#КонецОбласти
	
	запрос.УстановитьПараметр("МоментВремени", МоментВремени());
	запрос.УстановитьПараметр("Период", Дата);
	запрос.УстановитьПараметр("ДокументОснование", данныеЗаполнения);
	//запрос.УстановитьПараметр("ВидДокумента", Перечисления.СД_ВидыСвязанныхДокументов.СтратегияПродвижения);
	
	результатЗапроса = запрос.ВыполнитьПакет();
	
	СтрокиДокумента.Загрузить(результатЗапроса[0].Выгрузить());
	
	//выборкаТипыЦен = результатЗапроса[1].выбрать();
	//Пока выборкаТипыЦен.Следующий() Цикл
	//	
	//	новаяСтрока = ВыбранныеЦены.Добавить();
	//	
	//	ЗаполнитьЗначенияСвойств(новаяСтрока, выборкаТипыЦен);		
	//	
	//КонецЦикла;
	
КонецПроцедуры	// ЗаполнитьДокументНаОснованииСтратегияПродвижения()

Процедура ЗаполнитьДокументНаОснованииСтратегияЦенообразования(Знач данныеЗаполнения)
	
	// Заполнение реквизитов документа.
	ЗаполнениеОбъектовСервер.ЗаполнитьРеквизитыДокументаПриВводеНаОсновании(ЭтотОбъект, данныеЗаполнения, "");
		
КонецПроцедуры

#КонецОбласти

#КонецОбласти


