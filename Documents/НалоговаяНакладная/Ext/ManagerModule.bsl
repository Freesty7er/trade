////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПЕЧАТИ ФОРМЫ

Процедура ПечатьСчетаНаОплату(ТабличныйДокумент, Шапка, ВыборкаСтрокЗапасы)
	
	КОНТРАГЕНТ_АШАН_КОД = "F00021386";
	
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_НалоговаяНакладная_Счет";
	
	ЭтоФинДокумент = Шапка.Организация.ФинУчет;
	
	Макет = УправлениеПечатью.ПолучитьМакет("Документ.НалоговаяНакладная.СчетНаОплату");
	
	НомерДокумента = Шапка.Номер;
	
	КодЯзыкаПечать = Локализация.ПолучитьЯзыкФормированияПечатныхФорм();	
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	
	// вынести получить данные организации и т.п.
	Если ЭтоФинДокумент Тогда
		ОбластьМакета.Параметры.ТекстЗаголовка = НСтр("ru='Рахунок на оплату № ';uk='Рахунок на оплату № '", КодЯзыкаПечать)
		+ НомерДокумента
		+ НСтр("ru=' от ';uk=' від '", КодЯзыкаПечать)
		+ Формат(Шапка.ДатаДокумента, "Л="+КодЯзыкаПечать+"; ДФ='dd MMMM yyyy'");
		
		ОбластьМакета.Параметры.РасчетныйСчетСтр		= Шапка.РасчетныйСчетСтр;		
		ОбластьМакета.Параметры.ЮрАдрес 				= Шапка.Организация.ЮрАдрес;
		ОбластьМакета.Параметры.ФирмаПолнНаименование 	= Шапка.Организация.ПолнНаименование;
		ОбластьМакета.Параметры.КлиентПолнНаим 			= Шапка.Контрагент.ПолнНаим;
		ОбластьМакета.Параметры.ОрганизацияИНН 			= Шапка.ОрганизацияИНН;
		ОбластьМакета.Параметры.ОрганизацияОКПО 		= Шапка.ОрганизацияОКПО;
		
	Иначе
		ОбластьМакета.Параметры.НомерДокумента = НомерДокумента;
		ОбластьМакета.Параметры.ДатаДок = Формат(Шапка.ДатаДокумента, "ДФ='dd MMMM yyyy'");
		ОбластьМакета.Параметры.ФирмаПолнНаименование = Шапка.Организация.Наименование;
		ОбластьМакета.Параметры.КлиентПолнНаим = Шапка.Контрагент.Наименование;
		
		
	КонецЕсли;
	
	
	
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	ЕстьСкидки = Шапка.Запасы.Выгрузить().Итог("Скидка") <> 0;
	ЕстьСкидки = Ложь;
	
	Если ЕстьСкидки Тогда
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицыСоСкидкой");
		ТабличныйДокумент.Вывести(ОбластьМакета);			
		ОбластьМакета = Макет.ПолучитьОбласть("СтрокаТаблицыСоСкидкой");		
	Иначе
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ТабличныйДокумент.Вывести(ОбластьМакета);			
		ОбластьМакета = Макет.ПолучитьОбласть("СтрокаТаблицы");		
	КонецЕсли;
	
	ИтКоличество	= 0;
	ИтСуммаБезНДС	= 0;
	ИтСуммаНДС		= 0;
	ИтВсего			= 0;
	ИтСуммаБезСкидки = 0;
	ИтСуммаСкидки = 0;
	ОбщийВес		= 0;
	
	ВыборкаСтрокЗапасы.Сбросить();
	
	Пока ВыборкаСтрокЗапасы.Следующий() Цикл
		
		ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокЗапасы);
		ОбластьМакета.Параметры.ТоварКод = Прав(ВыборкаСтрокЗапасы.ТоварКод, 5);
		
		Если шапка.Контрагент.Код = КОНТРАГЕНТ_АШАН_КОД Тогда
			областьМакета.Параметры.ТоварКод = СокрЛП(выборкаСтрокЗапасы.Номенклатура.Артикул);
		КонецЕсли;
		
		Если ЕстьСкидки Тогда
			//Если ВыборкаСтрокЗапасы.ПроцентСкидкиНаценки = 100 Тогда
			//	Скидка = ВыборкаСтрокЗапасы.Цена * ВыборкаСтрокЗапасы.Количество;
			//	ОбластьМакета.Параметры.Скидка         = Скидка;
			//	ОбластьМакета.Параметры.СуммаБезСкидки = Скидка;
			//ИначеЕсли ВыборкаСтрокЗапасы.ПроцентСкидкиНаценки = 0 Тогда
			//	ОбластьМакета.Параметры.Скидка         = 0;
			//	ОбластьМакета.Параметры.СуммаБезСкидки = ВыборкаСтрокЗапасы.Сумма;
			//Иначе
			//	Скидка = ВыборкаСтрокЗапасы.Сумма * ВыборкаСтрокЗапасы.ПроцентСкидкиНаценки / (100 - ВыборкаСтрокЗапасы.ПроцентСкидкиНаценки);
			//	ОбластьМакета.Параметры.Скидка         = Скидка;
			//	ОбластьМакета.Параметры.СуммаБезСкидки = ВыборкаСтрокЗапасы.Сумма + Скидка;
			//КонецЕсли;
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ИтКоличество	= ИтКоличество + ВыборкаСтрокЗапасы.Количество;
		ИтСуммаБезНДС	= ИтСуммаБезНДС + ВыборкаСтрокЗапасы.СуммаБезНДС;
		ИтСуммаНДС		= ИтСуммаНДС + ВыборкаСтрокЗапасы.СуммаНДС;
		ИтВсего			= ИтВсего + ВыборкаСтрокЗапасы.Сумма;
		ИтСуммаБезСкидки			= ИтСуммаБезСкидки + ВыборкаСтрокЗапасы.СуммаБезСкидки;
		ОбщийВес		= ОбщийВес + ВыборкаСтрокЗапасы.Количество * ВыборкаСтрокЗапасы.НоменклатураВес;
		ИтСуммаСкидки = ИтСуммаСкидки + ВыборкаСтрокЗапасы.Скидка;
		
		
	КонецЦикла;
	
	Если ЕстьСкидки Тогда
		ОбластьМакета = Макет.ПолучитьОбласть("ПодвалТаблицыСоСкидкой");
		
	Иначе
		ОбластьМакета = Макет.ПолучитьОбласть("ПодвалТаблицы");
	КонецЕсли;
	
	Если ЭтоФинДокумент Тогда
		ОбластьМакета.Параметры.ИтСуммаБезНДС 	= ИтСуммаБезНДС;
		ОбластьМакета.Параметры.ИтСуммаНДС 		= ИтСуммаНДС;
		ОбластьМакета.Параметры.ИтВсего 		= ИтВсего;
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		
		ОбластьМакета.Параметры.ИтВсегоПрописью		= ОбщегоНазначенияСервер.СформироватьСуммуПрописью(ИтВсего);
		ОбластьМакета.Параметры.ИтСуммаНДСПрописью  = ОбщегоНазначенияСервер.СформироватьСуммуПрописью(ИтСуммаНДС);
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
	Иначе
		ОбластьМакета.Параметры.ИтСуммаБезСкидки 		= ИтСуммаБезСкидки;
		ОбластьМакета.Параметры.ИтКоличество	= ИтКоличество;
		
		Если ЕстьСкидки Тогда
			ОбластьМакета.Параметры.ИтСуммаСкидки		= ИтСуммаСкидки;
			ОбластьМакета.Параметры.ИтСуммаВсего		= ИтСуммаБезСкидки - ИтСуммаСкидки;
		КонецЕсли;
		
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		
		ОбластьМакета.Параметры.ОбщийВес		= ОбщийВес;
		
		//ОбластьМакета.Параметры.Наборщик
		//ОбластьМакета.Параметры.Кладовщик
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
	КонецЕсли;
	
	
КонецПроцедуры

Процедура ПечатьРасходнойНакладной(ТабличныйДокумент, Шапка, ВыборкаСтрокЗапасы)
	
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РасходнаяНакладная_Накладная";
	
	ЭтоФинДокумент = Шапка.Организация.ФинУчет;
	
	Если ЭтоФинДокумент Тогда
		Макет = УправлениеПечатью.ПолучитьМакет("Документ.РасходнаяНакладная.НакладнаяФин");
	Иначе
		Макет = УправлениеПечатью.ПолучитьМакет("Документ.РасходнаяНакладная.Накладная");
	КонецЕсли;
	
	НомерДокумента = Шапка.Номер;
	
	КодЯзыкаПечать = Локализация.ПолучитьЯзыкФормированияПечатныхФорм();	
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	
	// вынести получить данные организации и т.п.
	Если ЭтоФинДокумент Тогда
		ОбластьМакета.Параметры.ТекстЗаголовка = НСтр("ru='Расходная накладная № ';uk='Видаткова накладна № '", КодЯзыкаПечать)
		+ НомерДокумента
		+ НСтр("ru=' от ';uk=' від '", КодЯзыкаПечать)
		+ Формат(Шапка.ДатаДокумента, "Л="+КодЯзыкаПечать+"; ДФ='dd MMMM yyyy'");
		
		ОбластьМакета.Параметры.ЮрАдрес = Шапка.Организация.ЮрАдрес;
		ОбластьМакета.Параметры.ФирмаПолнНаименование = Шапка.Организация.ПолнНаименование;
		ОбластьМакета.Параметры.КлиентПолнНаим = Шапка.Контрагент.ПолнНаим;
		ОбластьМакета.Параметры.КлиентАдресДоставки = Шапка.Контрагент.АдресДоставки;
	Иначе
		ОбластьМакета.Параметры.НомерДокумента = НомерДокумента;
		ОбластьМакета.Параметры.ДатаДок = Формат(Шапка.ДатаДокумента, "ДФ='dd MMMM yyyy'");
		ОбластьМакета.Параметры.ФирмаПолнНаименование = Шапка.Организация.ПолнНаименование;
		ОбластьМакета.Параметры.НомерСклада = "Склад № " + Прав(Шапка.Подразделение.Код, 2);
		ОбластьМакета.Параметры.КлиентПолнНаим = ?(СокрЛП(Шапка.Контрагент.ПолнНаим) = "", Шапка.Контрагент.Наименование, Шапка.Контрагент.ПолнНаим);
		
		
	КонецЕсли;
	
	
	
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	ЕстьСкидки = Шапка.Запасы.Выгрузить().Итог("Скидка") <> 0;
	
	Если ЕстьСкидки Тогда
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицыСоСкидкой");
		ТабличныйДокумент.Вывести(ОбластьМакета);			
		ОбластьМакета = Макет.ПолучитьОбласть("СтрокаТаблицыСоСкидкой");		
	Иначе
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ТабличныйДокумент.Вывести(ОбластьМакета);			
		ОбластьМакета = Макет.ПолучитьОбласть("СтрокаТаблицы");		
	КонецЕсли;
	
	ИтКоличество	= 0;
	ИтСуммаБезНДС	= 0;
	ИтСуммаНДС		= 0;
	ИтВсего			= 0;
	ИтСуммаБезСкидки = 0;
	ИтСуммаСкидки = 0;
	ОбщийВес		= 0;
	НомСтр = 0;
	
	Пока ВыборкаСтрокЗапасы.Следующий() Цикл
		
		НомСтр = НомСтр + 1;
		
		ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокЗапасы);
		ОбластьМакета.Параметры.ТоварКод = Прав(ВыборкаСтрокЗапасы.ТоварКод, 5);
		ОбластьМакета.Параметры.НомСтр = НомСтр;
		
		Если ЕстьСкидки Тогда
			//Если ВыборкаСтрокЗапасы.ПроцентСкидкиНаценки = 100 Тогда
			//	Скидка = ВыборкаСтрокЗапасы.Цена * ВыборкаСтрокЗапасы.Количество;
			//	ОбластьМакета.Параметры.Скидка         = Скидка;
			//	ОбластьМакета.Параметры.СуммаБезСкидки = Скидка;
			//ИначеЕсли ВыборкаСтрокЗапасы.ПроцентСкидкиНаценки = 0 Тогда
			//	ОбластьМакета.Параметры.Скидка         = 0;
			//	ОбластьМакета.Параметры.СуммаБезСкидки = ВыборкаСтрокЗапасы.Сумма;
			//Иначе
			//	Скидка = ВыборкаСтрокЗапасы.Сумма * ВыборкаСтрокЗапасы.ПроцентСкидкиНаценки / (100 - ВыборкаСтрокЗапасы.ПроцентСкидкиНаценки);
			//	ОбластьМакета.Параметры.Скидка         = Скидка;
			//	ОбластьМакета.Параметры.СуммаБезСкидки = ВыборкаСтрокЗапасы.Сумма + Скидка;
			//КонецЕсли;
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ИтКоличество	= ИтКоличество + ВыборкаСтрокЗапасы.Количество;
		ИтСуммаБезНДС	= ИтСуммаБезНДС + ВыборкаСтрокЗапасы.СуммаБезНДС;
		ИтСуммаНДС		= ИтСуммаНДС + ВыборкаСтрокЗапасы.СуммаНДС;
		ИтВсего			= ИтВсего + ВыборкаСтрокЗапасы.Сумма;
		ИтСуммаБезСкидки			= ИтСуммаБезСкидки + ВыборкаСтрокЗапасы.СуммаБезСкидки;
		ОбщийВес		= ОбщийВес + ВыборкаСтрокЗапасы.Количество * ВыборкаСтрокЗапасы.НоменклатураВес;
		ИтСуммаСкидки = ИтСуммаСкидки + ВыборкаСтрокЗапасы.Скидка;
		
		
	КонецЦикла;
	
	Если ЕстьСкидки Тогда
		ОбластьМакета = Макет.ПолучитьОбласть("ПодвалТаблицыСоСкидкой");
		
	Иначе
		ОбластьМакета = Макет.ПолучитьОбласть("ПодвалТаблицы");
	КонецЕсли;
	
	Если ЭтоФинДокумент Тогда
		ОбластьМакета.Параметры.ИтСуммаБезНДС 	= ИтСуммаБезНДС;
		ОбластьМакета.Параметры.ИтСуммаНДС 		= ИтСуммаНДС;
		ОбластьМакета.Параметры.ИтВсего 		= ИтВсего;
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		
		ОбластьМакета.Параметры.ИтВсегоПрописью		= ОбщегоНазначенияСервер.СформироватьСуммуПрописью(ИтВсего);
		ОбластьМакета.Параметры.ИтСуммаНДСПрописью  = ОбщегоНазначенияСервер.СформироватьСуммуПрописью(ИтСуммаНДС);
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
	Иначе
		ОбластьМакета.Параметры.ИтСуммаБезСкидки 		= ИтСуммаБезСкидки;
		ОбластьМакета.Параметры.ИтКоличество	= ИтКоличество;
		
		Если ЕстьСкидки Тогда
			ОбластьМакета.Параметры.ИтСуммаСкидки		= ИтСуммаСкидки;
			ОбластьМакета.Параметры.ИтСуммаВсего		= ИтСуммаБезСкидки - ИтСуммаСкидки;
		КонецЕсли;
		
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		
		ОбластьМакета.Параметры.ОбщийВес		= ОбщийВес;
		
		ОбластьМакета.Параметры.Наборщик		= Шапка.Наборщик;
		ОбластьМакета.Параметры.Кладовщик       = Шапка.Кладовщик;
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
	КонецЕсли;
	
	
КонецПроцедуры

Процедура ПечатьНалоговойНакладной(ТабличныйДокумент, Шапка, ВыборкаСтрокЗапасы)
	
	Если НЕ Шапка.Организация.ФинУчет Тогда
		Возврат;
	КонецЕсли;
	
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_НалоговаяНакладная_Налоговая";
	
	Если Шапка.ДатаДокумента <= Дата("20140228") Тогда
		Макет = УправлениеПечатью.ПолучитьМакет("Документ.НалоговаяНакладная.НалоговаяНакладная_2011_2");
	ИначеЕсли Шапка.ДатаДокумента <= Дата("20141130") Тогда
		Макет = УправлениеПечатью.ПолучитьМакет("Документ.НалоговаяНакладная.НалоговаяНакладная_2014_1");
	Иначе
		Макет = УправлениеПечатью.ПолучитьМакет("Документ.НалоговаяНакладная.НалоговаяНакладная_2014_2");		
	КонецЕсли;
	
	НомерНалоговой = Прав("       "+СокрЛП(Число(Прав(Шапка.Номер, 5))), 7);
	
	КодЯзыкаПечать = Локализация.ПолучитьЯзыкФормированияПечатныхФорм();	
	//Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	
	ОбластьМакета = Макет.ПолучитьОбласть("Оригинал");
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	
	_ДатаОтгрузки = Формат(Шапка.ДатаДокумента, "ДФ=ddMMyyyy");
	Для Инд = 1 По 8 Цикл
		ОбластьМакета.Параметры["_ДатаОтгрузки"+Инд]    = Сред(_ДатаОтгрузки, Инд, 1);
	КонецЦикла;
	
	НомерНалоговой = Прав("       "+СокрЛП(Число(Прав(Шапка.Номер, 5))), 7);
	Для Инд = 1 По 7 Цикл
		ОбластьМакета.Параметры["НомерНалоговой"+Инд]    = Сред(НомерНалоговой, Инд, 1);
	КонецЦикла;
	
	
	// вынести получить данные организации и т.п.
	
	
	
	//ОбластьМакета.Параметры.ТекстЗаголовка = НСтр("ru='Расходная накладная № ';uk='Видаткова накладна № '", КодЯзыкаПечать)
	//			+ НомерДокумента
	//			+ НСтр("ru=' от ';uk=' від '", КодЯзыкаПечать)
	//			+ Формат(Шапка.ДатаДокумента, "Л="+КодЯзыкаПечать+"; ДФ='dd MMMM yyyy'");
	
	ОбластьМакета.Параметры.ФирмаПолнНаименование 	= СокрЛП(Шапка.Организация.ПолнНаименование);
	ОбластьМакета.Параметры.КлиентПолнНаим 			= СокрЛП(Шапка.Контрагент.ПолнНаим);
	ОбластьМакета.Параметры.ЮрАдрес 				= СокрЛП(Шапка.Организация.ЮрАдрес);
	ОбластьМакета.Параметры.КлиентЮрАдрес 			= СокрЛП(Шапка.Контрагент.ЮрАдрес);
	
	ФирмаНалогНомер = Прав("            " + СокрЛП(Шапка.Организация.ИНН), 12);
	ФирмаНомСвид	= Прав("          " + СокрЛП(Шапка.Организация.СвидетельствоСерияНомер), 10);
	ФирмаТелефоны	= СокрЛП(СтрЗаменить(Шапка.Организация.Телефоны,"-",""));
	
	Для Инд = 1 По 12 Цикл
		ОбластьМакета.Параметры["ФирмаНалогНомер_"+Инд]    = Сред(ФирмаНалогНомер, Инд, 1);
	КонецЦикла;
	
	Если Шапка.ДатаДокумента <= Дата("20140228") Тогда
		Для Инд = 1 По 10 Цикл
			ОбластьМакета.Параметры["ФирмаНомСвид_"+Инд]    = Сред(ФирмаНомСвид, Инд, 1);
		КонецЦикла;
	КонецЕсли;
	
	Для Инд = 1 По 10 Цикл
		ОбластьМакета.Параметры["ФирмаТелефоны_"+Инд]    = Сред(ФирмаТелефоны, Инд, 1);
	КонецЦикла;
	
	КонтрагентНалогНомер	= Прав("            " + СокрЛП(Шапка.Контрагент.НомерПлательщикаНДС), 12);
	КонтрагентНомСвид		= Прав("          " + СокрЛП(Шапка.Контрагент.НомерСвидетельства), 10);
	КлиентТелефоны			= СокрЛП(СтрЗаменить(Шапка.Контрагент.Телефоны,"-",""));
	
	Для Инд = 1 По 12 Цикл
		ОбластьМакета.Параметры["КонтрагентНалогНомер_"+Инд]    = Сред(КонтрагентНалогНомер, Инд, 1);
	КонецЦикла;
	
	Если Шапка.ДатаДокумента <= Дата("20140228") Тогда
		Для Инд = 1 По 10 Цикл
			ОбластьМакета.Параметры["КонтрагентНомСвид_"+Инд]    = Сред(КонтрагентНомСвид, Инд, 1);
		КонецЦикла;
	КонецЕсли;
	
	Для Инд = 1 По 10 Цикл
		ОбластьМакета.Параметры["КлиентТелефоны_"+Инд]    = Сред(КлиентТелефоны, Инд, 1);
	КонецЦикла;
	
	ОбластьМакета.Параметры.УсловиеПродажи1 = СокрЛП(Шапка.Контрагент.ВидДоговора);
	
	УсловиеПродажи2 = Формат(Шапка.Контрагент.ДатаДоговора, "ДФ=ddMMyyyy");
	Для Инд = 1 По 8 Цикл
		ОбластьМакета.Параметры["УсловиеПродажи2_"+Инд]    = Сред(УсловиеПродажи2, Инд, 1);
	КонецЦикла;
	
	ОбластьМакета.Параметры.НомДог_1	= СокрЛП(Шапка.Контрагент.НомерДоговора);
	ОбластьМакета.Параметры.ФормаРасчетов = "оплата з поточного рахунку";
	
	
	
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	
	ИтСуммаБезНДС	= 0;
	ИтСуммаНДС		= 0;
	ИтСумма			= 0;
	
	
	ОбластьМакета = Макет.ПолучитьОбласть("РазделI1");
	
	ВыборкаСтрокЗапасы.Сбросить();
	Пока ВыборкаСтрокЗапасы.Следующий() Цикл
		
		ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокЗапасы);
		
		ОбластьМакета.Параметры.ДатаОтгр = Шапка.ДатаДокумента;
		ОбластьМакета.Параметры.КВЕД = ВыборкаСтрокЗапасы.Номенклатура.КВЕД;
		
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		
		ИтСуммаБезНДС	= ИтСуммаБезНДС + ВыборкаСтрокЗапасы.СуммаБезНДС;
		ИтСуммаНДС		= ИтСуммаНДС + ВыборкаСтрокЗапасы.СуммаНДС;
		ИтСумма			= ИтСумма + ВыборкаСтрокЗапасы.Сумма;
		
	КонецЦикла;
	
	ОбластьМакета = Макет.ПолучитьОбласть("РазделIВсего");
	
	ОбластьМакета.Параметры.ИтСуммаБезНДС = ИтСуммаБезНДС;
	
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("ВозврТара");
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("НДС");
	
	ОбластьМакета.Параметры.ОбщНДС = ИтСуммаНДС;
	ОбластьМакета.Параметры.ВсегоНДС = ИтСуммаНДС;
	
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("ОбщаяСумма");
	
	ОбластьМакета.Параметры.ОбщСуммаСНДС = ИтСумма;
	ОбластьМакета.Параметры.ОбщСуммаСНДС = ИтСумма;
	
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	
	ОбластьМакета.Параметры.Ответственный = Шапка.Организация.ГлБухгалтер;
	
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
КонецПроцедуры

Функция ПечатнаяФорма(МассивОбъектов, ОбъектыПечати, ИмяМакета, КоллекцияПечатныхФорм)
	
	УстановитьПривилегированныйРежим(Истина);
	
	табличныйДокумент = Новый ТабличныйДокумент;
	табличныйДокумент.КлючПараметровПечати = "ПараметрыПечати_НалоговаяНакладная";
	
	табличныйДокументСчетНаОплату = Новый ТабличныйДокумент;
	
	первыйДокумент = Истина;
	первыйДокументСчетНаОплату = Истина;
	
	Для Каждого ТекущийДокумент Из МассивОбъектов Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		
		запрос = Новый Запрос();
		
		#Область ТкстЗапроса
		
		запрос.Текст = 
		"ВЫБРАТЬ
		|	НалоговаяНакладная.Дата КАК ДатаДокумента,
		|	НалоговаяНакладная.Номер,
		|	НалоговаяНакладная.Организация,
		|	НалоговаяНакладная.Подразделение,
		|	НалоговаяНакладная.Контрагент,
		|	НалоговаяНакладная.Запасы.(
		|		Ссылка,
		|		НомерСтроки КАК НомерСтроки,
		|		Номенклатура,
		|		ЕдиницаИзмерения КАК ЕдСокрНаим,
		|		Количество,
		|		Цена,
		|		Сумма,
		|		СтавкаНДС,
		|		СуммаНДС,
		|		Всего,
		|		КоличествоЗаказано,
		|		ПроцентСкидки,
		|		Скидка,
		|		СуммаБезСкидки,
		|		СтруктурнаяЕдиница,
		|		Номенклатура.ПолнНаим КАК ТоварПолнНаим,
		|		Номенклатура.Наименование КАК ТоварНаим,
		|		Номенклатура.Код КАК ТоварКод,
		|		ВЫБОР
		|			КОГДА НалоговаяНакладная.Запасы.Количество = 0
		|				ТОГДА 0
		|			ИНАЧЕ (НалоговаяНакладная.Запасы.Сумма - НалоговаяНакладная.Запасы.СуммаНДС) / НалоговаяНакладная.Запасы.Количество
		|		КОНЕЦ КАК ЦенаБезНДС,
		|		НалоговаяНакладная.Запасы.Сумма - НалоговаяНакладная.Запасы.СуммаНДС КАК СуммаБезНДС,
		|		Номенклатура.Вес
		|	),
		|	ВЫБОР
		|		КОГДА ОсновныеЗначенияПодчинённыхДанных.ОсновноеЗначение ЕСТЬ NULL 
		|			ТОГДА ПараметрыУчетаПоПодразделениям.ОсновнойБанковскийСчет.НаименованиеПолное
		|		ИНАЧЕ ОсновныеЗначенияПодчинённыхДанных.ОсновноеЗначение.НаименованиеПолное
		|	КОНЕЦ КАК РасчетныйСчетСтр,
		|	НалоговаяНакладная.Организация.ОКПО,
		|	НалоговаяНакладная.Организация.ИНН
		|ИЗ
		|	Документ.НалоговаяНакладная КАК НалоговаяНакладная
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыУчетаПоПодразделениям.СрезПоследних(&ДатаСреза, ) КАК ПараметрыУчетаПоПодразделениям
		|		ПО НалоговаяНакладная.Подразделение = ПараметрыУчетаПоПодразделениям.СтруктурнаяЕдиница
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОсновныеЗначенияПодчинённыхДанных КАК ОсновныеЗначенияПодчинённыхДанных
		|		ПО НалоговаяНакладная.Организация = ОсновныеЗначенияПодчинённыхДанных.Объект
		|			И НалоговаяНакладная.Подразделение = ОсновныеЗначенияПодчинённыхДанных.Подразделение
		|			И (ОсновныеЗначенияПодчинённыхДанных.Вид = ЗНАЧЕНИЕ(Перечисление.ВидыОсновныхЗначенийПодчинённыхДанных.БанковскийСчётОрганизации))
		|ГДЕ
		|	НалоговаяНакладная.Ссылка = &ТекущийДокумент";
		
		#КонецОбласти
		
		запрос.УстановитьПараметр("ТекущийДокумент", текущийДокумент);
		запрос.УстановитьПараметр("ДатаСреза", текущийДокумент.Дата);
		
		шапка = запрос.Выполнить().Выбрать();
		шапка.Следующий();
		
		номерДокумента = шапка.Номер;
		
		выборкаСтрокЗапасы = шапка.Запасы.Выбрать();
		
		Если имяМакета = "Накладная" Тогда
			
			ПечатьРасходнойНакладной(ТабличныйДокумент, Шапка, ВыборкаСтрокЗапасы);
			
		ИначеЕсли имяМакета = "Налоговая" Тогда
			
			ПечатьНалоговойНакладной(табличныйДокумент, шапка, выборкаСтрокЗапасы);
			
			// Счет на оплату
			Если Не первыйДокументСчетНаОплату Тогда
				табличныйДокументСчетНаОплату.ВывестиГоризонтальныйРазделительСтраниц();
			Иначе
				новыйЭлементКоллекции = коллекцияПечатныхФорм.Добавить();
				
				новыйЭлементКоллекции.ИмяМакета = "СчетНаОплату";
				новыйЭлементКоллекции.ИмяВРЕГ = "СЧЕТНАОПЛАТУ";
				новыйЭлементКоллекции.СинонимМакета = "Счет на оплату";
				новыйЭлементКоллекции.Экземпляров = 1;
				
			КонецЕсли;
			
			первыйДокументСчетНаОплату = Ложь;
			
			ПечатьСчетаНаОплату(табличныйДокументСчетНаОплату, шапка, выборкаСтрокЗапасы);
			
		КонецЕсли;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ТекущийДокумент);
		
	КонецЦикла;
	
	// установим параметры печати
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы=ОриентацияСтраницы.Ландшафт;
	
	табличныйДокументСчетНаОплату.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	табличныйДокументСчетНаОплату.АвтоМасштаб = Истина;
	
	УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(коллекцияПечатныхФорм, "СчетНаОплату", "Счет на оплату", табличныйДокументСчетНаОплату);
	
	Возврат ТабличныйДокумент;
	
КонецФункции // ПечатнаяФорма()


// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов,
	ПараметрыПечати,
	КоллекцияПечатныхФорм,
	ОбъектыПечати,
	ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Налоговая") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Налоговая", "Налоговая накладная", ПечатнаяФорма(МассивОбъектов, ОбъектыПечати, "Налоговая", КоллекцияПечатныхФорм));
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Накладная") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Накладная", "Расходная накладная", ПечатнаяФорма(МассивОбъектов, ОбъектыПечати, "Накладная", КоллекцияПечатныхФорм));
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТТН") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ТТН", "Товарно-транспортная накладная", Обработки.ПечатьТТН.Создать().ПечатнаяФорма(МассивОбъектов, ОбъектыПечати, ПараметрыПечати));
	КонецЕсли;
	
КонецПроцедуры