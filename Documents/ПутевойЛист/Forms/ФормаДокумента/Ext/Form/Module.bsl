
#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(отказ)
	Элементы.Пробег.ТолькоПросмотр = Не (Объект.ПоказанияСпидометра = 0);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

&НаКлиенте
Процедура МаршрутПриИзменении(элемент)
	
	Если ЗначениеЗаполнено(Объект.Автомобиль) И ЗначениеЗаполнено(объект.Маршрут) Тогда
		УстановитьСтимостьПоездки();
	КонецЕсли;
	
	РасчетСтоимостиПоездки();
	
КонецПроцедуры

&НаКлиенте
Процедура АвтомобильПриИзменении(элемент)
	
	Если ЗначениеЗаполнено(Объект.Автомобиль) И ЗначениеЗаполнено(объект.Маршрут) Тогда
		УстановитьСтимостьПоездки();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Автомобиль) Тогда
		РасчетПробега();
	КонецЕсли;

	
	РасчетСтоимостиПоездки();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказанияСпидометраПриИзменении(элемент)
	
	Если ЗначениеЗаполнено(Объект.Автомобиль) И Не Объект.ПоказанияСпидометра = 0 Тогда
		РасчетПробега();
	КонецЕсли;
	
	РасчетСтоимостиПоездки();
	
	РасчетСреднегоРасходаТоплива();
	
	Элементы.Пробег.ТолькоПросмотр = Не (Объект.ПоказанияСпидометра = 0);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗарплатаВодителяПриИзменении(элемент)
	
	РасчетСтоимостиПоездки();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(элемент)
	
	Если ЗначениеЗаполнено(Объект.Автомобиль) И ЗначениеЗаполнено(объект.Маршрут) Тогда
		УстановитьСтимостьПоездки();
	КонецЕсли;
	
	РасчетСтоимостиПоездки();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаправкаСтоимостьПриИзменении(элемент)
	РасчетСтоимостиПоездки();
КонецПроцедуры

&НаКлиенте
Процедура РасходыНаРемонтПриИзменении(элемент)
	РасчетСтоимостиПоездки();
КонецПроцедуры

&НаКлиенте
Процедура РасходыНаЗапчастиПриИзменении(элемент)
	РасчетСтоимостиПоездки();
КонецПроцедуры

&НаКлиенте
Процедура РасходыПоПоездкеПриИзменении(элемент)
	РасчетСтоимостиПоездки();
КонецПроцедуры

&НаКлиенте
Процедура ЗаправкаЛитрыПриИзменении(элемент)
	
	РасчетСреднегоРасходаТоплива();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаправочнаяВедомостьСтоимостьПриИзменении(элемент)
	РасчетСтоимостиПоездки();
КонецПроцедуры

&НаКлиенте
Процедура СписокЗатратСуммаПриИзменении(элемент)
	РасчетСтоимостиПоездки();
КонецПроцедуры

&НаКлиенте
Процедура СписокЗатратПриИзменении(элемент)
	РасчетСтоимостиПоездки();
КонецПроцедуры

&НаКлиенте
Процедура ЗаправочнаяВедомостьПриИзменении(элемент)
		
	РасчетСтоимостиПоездки();
	
	РасчетСреднегоРасходаТоплива();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗарплатаВидРасчетаПриИзменении(элемент)
	ОбработатьДанныеСтрокиПриИзмененииЗарплаты(Элементы.Зарплата.ТекущиеДанные);	
КонецПроцедуры

&НаКлиенте
Процедура ЗарплатаПоказатель1ПриИзменении(элемент)
	ОбработатьДанныеСтрокиПриИзмененииЗарплаты(Элементы.Зарплата.ТекущиеДанные);	
КонецПроцедуры

#КонецОбласти

#Область ОбработкаДанныхСтрок

&НаКлиентеНаСервереБезКонтекста
Процедура РассчитатьДанныеСтрокиЗарплаты(данныеСтроки)

	данныеСтроки.Результат = 0;
	
	Если данныеСтроки.ВидРасчета = ПредопределенноеЗначение("Справочник.ВидыРасчетов.ДоплатаЗаТорговыеТочки") Тогда
		данныеСтроки.Результат = данныеСтроки.Показатель1 * 10;
	ИначеЕсли данныеСтроки.ВидРасчета = ПредопределенноеЗначение("Справочник.ВидыРасчетов.ДоплатаЗаТорговыеТочкиЭкспедиция") Тогда
		данныеСтроки.Результат = данныеСтроки.Показатель1 * 12;
	КонецЕсли;

КонецПроцедуры // РассчитатьДанныеСтрокиЗарплаты()

&НаКлиенте
Процедура ОбработатьДанныеСтрокиПриИзмененииЗарплаты(данныеСтрок)
	
	мДанныеСтрок = ОбщегоНазначенияКлиентСервер.ПреобразоватьЗначениеВМассив(данныеСтрок);
	
	Для каждого данныеСтроки Из мДанныеСтрок Цикл
		РассчитатьДанныеСтрокиЗарплаты(данныеСтроки);
	КонецЦикла;
	
	РасчетСтоимостиПоездки();
	
КонецПроцедуры // ОбработатьДанныеСтрокиПриИзмененииЗарплаты()

#КонецОбласти

#Область ДополнительныеПроцедурыИФункции

&НаСервере
Процедура УстановитьСтимостьПоездки()
	
	Объект.ТарифМаршрута 	= 0;
	Объект.ЗарплатаВодителя = 0;
	
	запрос = Новый Запрос;
	
	#Область ТекстЗапроса

	запрос.Текст = 
	"ВЫБРАТЬ
	|	ЦеныНаПеревозкиСрезПоследних.СпособРасчета,
	|	ЦеныНаПеревозкиСрезПоследних.Стоимость,
	|	ЦеныНаПеревозкиСрезПоследних.ЗарплатаВодителя
	|ИЗ
	|	РегистрСведений.ЦеныНаПеревозки.СрезПоследних(
	|			&ДатаСреза,
	|			Маршрут = &Маршрут
	|				И ТипТС = &ТипТС) КАК ЦеныНаПеревозкиСрезПоследних";
	
	#КонецОбласти
		
	запрос.УстановитьПараметр("ДатаСреза", Объект.Дата);
	запрос.УстановитьПараметр("Маршрут", Объект.Маршрут);
	запрос.УстановитьПараметр("ТипТС", Объект.Автомобиль.ТипТС);
	
	результатЗапроса = Запрос.Выполнить();
	Если Не результатЗапроса.Пустой() Тогда
		
		результат = результатЗапроса.Выгрузить()[0];
		
		Объект.ТарифМаршрута 	= результат.Стоимость;
		Объект.ЗарплатаВодителя = результат.ЗарплатаВодителя;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура РасчетПробега()
	
	запрос = Новый Запрос;
	
	#Область ТекстЗапроса
	
	запрос.Текст =
	"ВЫБРАТЬ
	|	ПоказанияСпидометраСрезПоследних.Спидометр
	|ИЗ
	|	РегистрСведений.ПоказанияСпидометра.СрезПоследних(&ДатаСреза, Машина = &Автомобиль) КАК ПоказанияСпидометраСрезПоследних";
	
	#КонецОбласти					  
	
	запрос.УстановитьПараметр("ДатаСреза", НачалоДня(Объект.Дата));
	запрос.УстановитьПараметр("Автомобиль", Объект.Автомобиль);
	
	результатЗапроса = запрос.Выполнить();
	
	последнееПоказание = 0;
	
	Если Не результатЗапроса.Пустой() Тогда
		
		последнееПоказание = результатЗапроса.Выгрузить()[0].Спидометр;
		
	КонецЕсли;
		
	Объект.Пробег = Объект.ПоказанияСпидометра - последнееПоказание;
	
КонецПроцедуры

&НаКлиенте
Процедура РасчетСтоимостиПоездки()
	
	// если способ расчета = 1 ... тариф/км
	Объект.СтоимостьПоездки = Объект.ЗарплатаВодителя + Объект.ЗарплатаЭкспедитора+ Объект.ЗаправочнаяВедомость.Итог("Стоимость") + Объект.СписокЗатрат.Итог("Сумма") + Объект.Зарплата.Итог("Результат");
	
	Объект.СуммаДокумента = Объект.Пробег * Объект.ТарифМаршрута;
	
КонецПроцедуры

&НаКлиенте
Процедура РасчетСреднегоРасходаТоплива()

	Если НЕ(Объект.Пробег) = 0 Тогда
		Объект.СреднийРасход = (Объект.ЗаправкаЛитры1 + Объект.ЗаправкаЛитры2) / Объект.Пробег * 100;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти














