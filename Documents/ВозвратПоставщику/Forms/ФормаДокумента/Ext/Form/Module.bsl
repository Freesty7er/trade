
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПередЗаписьюНаСервере(отказ, текущийОбъект, параметрыЗаписи)
	
	текущийОбъект.ДополнительныеСвойства.Вставить("ИнтерактивнаяЗаписьДокумента", Истина);
	
	Если Объект.Имущество.Количество() > 0 Тогда
		
		запрос = Новый Запрос;
		
		#область ТекстЗапроса
		
		запрос.Текст = 
		"ВЫБРАТЬ
		|	Имущество.Номенклатура,
		|	Имущество.Количество,
		|	Имущество.Цена,
		|	Имущество.Сумма,
		|	Имущество.ЦФО
		|ПОМЕСТИТЬ вт_Имущество
		|ИЗ
		|	&тч_Имущество КАК Имущество
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Имущество.Номенклатура,
		|	Имущество.Количество,
		|	Имущество.Цена,
		|	Имущество.Сумма,
		|	Имущество.ЦФО,
		|	ИмуществоОстатки.МОЛ
		|ИЗ
		|	вт_Имущество КАК Имущество
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ИмуществоОстатки.Номенклатура КАК Номенклатура,
		|			ИмуществоОстатки.МОЛ КАК МОЛ,
		|			ИмуществоОстатки.ЦФО КАК ЦФО
		|		ИЗ
		|			РегистрНакопления.Имущество.Остатки(&ДатаСреза, Подразделение = &Подразделение) КАК ИмуществоОстатки
		|		ГДЕ
		|			ИмуществоОстатки.КоличествоОстаток > 0
		|			И (ИмуществоОстатки.Номенклатура, ИмуществоОстатки.ЦФО) В
		|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|						вт_Имущество.Номенклатура,
		|						вт_Имущество.ЦФО
		|					ИЗ
		|						вт_Имущество)) КАК ИмуществоОстатки
		|		ПО Имущество.Номенклатура = ИмуществоОстатки.Номенклатура
		|			И Имущество.ЦФО = ИмуществоОстатки.ЦФО";
		
		#КонецОбласти
		
		запрос.УстановитьПараметр("тч_Имущество", Объект.Имущество.Выгрузить());
		запрос.УстановитьПараметр("ДатаСреза", Объект.Дата);
		запрос.УстановитьПараметр("Подразделение", Объект.Подразделение);
		
		Объект.Имущество.Загрузить(запрос.Выполнить().Выгрузить());
		
	КонецЕсли;
	
	Если текущийОбъект <> Неопределено Тогда
		текущийОбъект.ХранилищеНастроекКомпоновкиДанных = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(ЭтаФорма.АдресНастроекСКД));
	КонецЕсли;
	
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(отказ, стандартнаяОбработка)
	
	// при создании нового документа не задействована процедура "ПриЧтенииНаСервере(ТекущийОбъект)"
	Если АдресНастроекСКД = "" Тогда
		АдресНастроекСКД = ПоместитьВоВременноеХранилище(Неопределено,ЭтаФорма.УникальныйИдентификатор);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(отказ)
	
	СтандартныйЗаголовок = ЭтаФорма.Заголовок;
	
	Если Не Объект.ОтметкаБухгалтераОПроверке Тогда
		
		ЭтаФорма.Заголовок = "(Не подписан)" + СтандартныйЗаголовок;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Перем Команда;
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
		
		ВыбранноеЗначение.Свойство("Команда", Команда);
		
		Если Команда = "ПодборВТабличнуюЧастьЗапасы" Тогда
			ОбработкаПодбора("Запасы", ВыбранноеЗначение);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИмуществоЗаполнитьПоОстаткам" Тогда
		
		АдресНастроекСКД = ПоместитьВоВременноеХранилище(ПолучитьИзВременногоХранилища(Параметр.АдресНастроекСКД),ЭтаФорма.УникальныйИдентификатор);
		
		ИмуществоЗаполнитьПоОстаткам();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	ЭтаФорма.АдресНастроекСКД = ПоместитьВоВременноеХранилище(ТекущийОбъект.ХранилищеНастроекКомпоновкиДанных.Получить(),ЭтаФорма.УникальныйИдентификатор);
КонецПроцедуры

#КонецОбласти

&НаСервереБезКонтекста
Функция ПолучитьДанныеНоменклатураПриИзменении(СтруктураДанные)
	
	СтруктураДанные.Вставить("Цена", ЦенообразованиеСервер.ВернутьЦенуНоменклатуры(СтруктураДанные));
	СтруктураДанные.Вставить("ЕдиницаИзмерения", СтруктураДанные.Номенклатура.ЕдиницаИзмерения);
	Возврат СтруктураДанные;
	
КонецФункции // ПолучитьДанныеНоменклатураПриИзменении()

&НаКлиенте
Процедура ЗапасыНоменклатураПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.Запасы.ТекущиеДанные;
	
	СтруктураДанные = Новый Структура();
	СтруктураДанные.Вставить("Номенклатура", СтрокаТабличнойЧасти.Номенклатура);
	СтруктураДанные.Вставить("ТипЦен", ЭтаФорма.Объект.ТипЦен);
	СтруктураДанные.Вставить("Подразделение", ЭтаФорма.Объект.Подразделение);
	СтруктураДанные.Вставить("ДатаСреза", ЭтаФорма.Объект.Дата);
	
	СтруктураДанные = ПолучитьДанныеНоменклатураПриИзменении(СтруктураДанные);
	
	СтрокаТабличнойЧасти.ЕдиницаИзмерения = СтруктураДанные.ЕдиницаИзмерения;
	СтрокаТабличнойЧасти.Цена = СтруктураДанные.Цена;
	СтрокаТабличнойЧасти.Сумма = СтрокаТабличнойЧасти.Количество * СтрокаТабличнойЧасти.Цена;

	
КонецПроцедуры

&НаКлиенте
Процедура ЗапасыРасчетСтроки(СтрокаТабличнойЧасти = Неопределено)
	
	Если СтрокаТабличнойЧасти = Неопределено Тогда
		СтрокаТабличнойЧасти = Элементы.Запасы.ТекущиеДанные;
	КонецЕсли;
	
	СтрокаТабличнойЧасти.Сумма = СтрокаТабличнойЧасти.Количество * СтрокаТабличнойЧасти.Цена;
	
КонецПроцедуры // ЗапасыКоличествоПриИзменении()

&НаКлиенте
Процедура ПодборНоменклатуры(Команда)
	ДействиеПодбор("Запасы");
КонецПроцедуры

&НаКлиенте
Процедура ДействиеПодбор(ИмяТабличнойЧасти)
	
	Если ИмяТабличнойЧасти = "Запасы" Тогда
		Команда = "ПодборВТабличнуюЧастьЗапасы";
	КонецЕсли;
	СтруктураПараметровПодбора = Новый Структура();
	СтруктураПараметровПодбора.Вставить("Команда", Команда);
	
	ДобавитьПоставщикаВПараметрыОтбора(СтруктураПараметровПодбора);
	ДобавитьТипЦенВПараметрыОтбора(СтруктураПараметровПодбора);
	
	ВременнаяДатаРасчетов = ?(НачалоДня(Объект.Дата) = НачалоДня(ТекущаяДата()), ТекущаяДата(), Объект.Дата);
	СтруктураПараметровПодбора.Вставить("ДатаРасчетов", ВременнаяДатаРасчетов);
	
	РаботаСДиалогамиКлиент.ОткрытьПодборНоменклатуры(ЭтаФорма, СтруктураПараметровПодбора);
	
КонецПроцедуры //

&НаСервере
Процедура ДобавитьПоставщикаВПараметрыОтбора(СтруктураПараметровПодбора)
	
	СтруктураПараметровПодбора.Вставить("Поставщик", Объект.Контрагент);
	СтруктураПараметровПодбора.Вставить("ОтборПоПоставщику", Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьТипЦенВПараметрыОтбора(СтруктураПараметровПодбора)
	
	//СтруктураПараметровПодбора.Вставить("Поставщик", Объект.Контрагент);
	Если ЗначениеЗаполнено(Объект.ТипЦен) Тогда
		СтруктураПараметровПодбора.Вставить("ТипЦен", Объект.ТипЦен);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Подразделение) Тогда
		СтруктураПараметровПодбора.Вставить("Подразделение", Объект.Подразделение);
	КонецЕсли;
	
КонецПроцедуры



&НаКлиенте
Процедура ОбработкаПодбора(ИмяТабличнойЧасти, ЗначениеВыбора) Экспорт
	
	Перем Номенклатура;
	Перем Количество;
	
	// Получим параметры подбора из структуры подбора.
	ЗначениеВыбора.Свойство("Номенклатура",					Номенклатура);
	ЗначениеВыбора.Свойство("Количество",					Количество);
	
	// Ищем выбранную позицию в таблице подобранной номенклатуры.
	// Если найдем - увеличим количество; не найдем - добавим новую строку.
	СтруктураОтбора = Новый Структура();
	СтруктураОтбора.Вставить("Номенклатура", Номенклатура);
	
	
	МассивСтрок = Объект[ИмяТабличнойЧасти].НайтиСтроки(СтруктураОтбора);
	Если МассивСтрок.Количество() = 0 Тогда
		СтрокаТабличнойЧасти = Неопределено;
	Иначе
		СтрокаТабличнойЧасти = МассивСтрок[0];
	КонецЕсли;
	
	Если СтрокаТабличнойЧасти <> Неопределено Тогда
		// Нашли, увеличиваем количество в первой найденной строке.
		СтрокаТабличнойЧасти.Количество = СтрокаТабличнойЧасти.Количество + Количество;
		
		//РаботаСДиалогамиКлиент.РассчитатьСуммуТабЧасти(СтрокаТабличнойЧасти);
	Иначе
		// Не нашли - добавляем новую строку.
		СтрокаТабличнойЧасти = Объект[ИмяТабличнойЧасти].Добавить();
		СтрокаТабличнойЧасти.Номенклатура     			= Номенклатура;
		СтрокаТабличнойЧасти.Количество       			= Количество;
		
	КонецЕсли;
	
	//РассчитатьСуммуДокумента();
	
	СтруктураДанные = Новый Структура();
	СтруктураДанные.Вставить("Номенклатура", СтрокаТабличнойЧасти.Номенклатура);
	СтруктураДанные.Вставить("ТипЦен", ЭтаФорма.Объект.ТипЦен);
	СтруктураДанные.Вставить("Подразделение", ЭтаФорма.Объект.Подразделение);
	СтруктураДанные.Вставить("ДатаСреза", ЭтаФорма.Объект.Дата);
	
	СтруктураДанные = ПолучитьДанныеНоменклатураПриИзменении(СтруктураДанные);
	
	СтрокаТабличнойЧасти.ЕдиницаИзмерения = СтруктураДанные.ЕдиницаИзмерения;
	
	СтрокаТабличнойЧасти.Цена = СтруктураДанные.Цена;
	
	СтрокаТабличнойЧасти.Сумма = СтрокаТабличнойЧасти.Количество * СтрокаТабличнойЧасти.Цена;
	
КонецПроцедуры //


&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	СтруктураДанные = Новый Структура();
	СтруктураДанные.Вставить("Контрагент", ЭтаФорма.Объект.Контрагент);
	
	СтруктураДанные = ПолучитьДанныеКонтрагентприИзменении(СтруктураДанные);
	
	ЭтаФорма.Объект.ТипЦен = СтруктураДанные.ТипЦен;
	Если НЕ ЗначениеЗаполнено(СтруктураДанные.Подразделение) Тогда
		ЭтаФорма.Объект.Подразделение = СтруктураДанные.Подразделение;
	КонецЕсли;
	
	ПересчетДокумента();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДанныеКонтрагентприИзменении(СтруктураДанные)
	
	СтруктураДанные.Вставить("ТипЦен", Справочники.ТипыЦен.ПустаяСсылка());
	
	СтруктураДанные.ТипЦен = СтруктураДанные.Контрагент.ТипЦен;
	
	СтруктураДанные.Вставить("Подразделение", СтруктураДанные.Контрагент.Родитель.Подразделение);
	
	Возврат СтруктураДанные;
	
КонецФункции


&НаКлиенте
Процедура ПересчетДокумента()
	
	
	
	Для Каждого СтрокаТабличнойЧасти Из Объект.Запасы Цикл
		
		//СтрокаТабличнойЧасти = Элементы.Запасы.ТекущиеДанные;
		
		СтруктураДанные = Новый Структура();
		СтруктураДанные.Вставить("Номенклатура", СтрокаТабличнойЧасти.Номенклатура);
		СтруктураДанные.Вставить("ТипЦен", ЭтаФорма.Объект.ТипЦен);
		СтруктураДанные.Вставить("Подразделение", ЭтаФорма.Объект.Подразделение);
		СтруктураДанные.Вставить("ДатаСреза", ЭтаФорма.Объект.Дата);
		СтруктураДанные.Вставить("Контрагент", ЭтаФорма.Объект.Контрагент);
		
		СтруктураДанные = ПолучитьДанныеНоменклатураПриИзменении(СтруктураДанные);
		
		СтрокаТабличнойЧасти.ЕдиницаИзмерения 	= СтруктураДанные.ЕдиницаИзмерения;
		СтрокаТабличнойЧасти.Цена 				= СтруктураДанные.Цена;
		
		ЗапасыРасчетСтроки(СтрокаТабличнойЧасти);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапасыКоличествоПриИзменении(Элемент)
	ЗапасыРасчетСтроки();
КонецПроцедуры

&НаКлиенте
Процедура ТипЦенПриИзменении(Элемент)
	
	ПересчетДокумента();
	
КонецПроцедуры







&НаКлиенте
Процедура КомандаИмуществоЗаполнитьПоОстаткам(Команда)
	
	ФормаНастроекКомпоновкиДанныхИмуществоПоОстаткамПараметры = Новый Структура;
	ФормаНастроекКомпоновкиДанныхИмуществоПоОстаткамПараметры.Вставить("АдресНастроекСКД",АдресНастроекСКД);
	ФормаНастроекКомпоновкиДанныхИмуществоПоОстаткамПараметры.Вставить("Регистратор",Объект.Ссылка);
	ФормаНастроекКомпоновкиДанныхИмуществоПоОстаткамПараметры.Вставить("ДатаДокумента",Объект.Дата);
	ФормаНастроекКомпоновкиДанныхИмуществоПоОстаткамПараметры.Вставить("Подразделение",Объект.Подразделение);
	
	//ОткрытьФорму("Документ.ВозвратПоставщику.Форма.ФормаНастроекКомпоновкиДанныхИмуществоПоОстаткам",ФормаНастроекКомпоновкиДанныхИмуществоПоОстаткамПараметры,ЭтаФорма);
	ОткрытьФорму("Отчет.СхемаЗаполнения_ИмуществоПоОстаткамНастройки.Форма.ФормаОтчета", ФормаНастроекКомпоновкиДанныхИмуществоПоОстаткамПараметры,ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ИмуществоЗаполнитьПоОстаткам()
	
	//Документы.ВозвратПоставщику.ПолучитьМакет("СхемаКомпоновкиДанныхИмуществоПоОстаткам");
	схемаКомпоновкиДанных = Отчеты.СхемаЗаполнения_ИмуществоПоОстаткамНастройки.ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	
	компоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	макетКомпоновки = компоновщикМакета.Выполнить(схемаКомпоновкиДанных,ПолучитьИзВременногоХранилища(АдресНастроекСКД),,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	процессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	процессорКомпоновкиДанных.Инициализировать(макетКомпоновки,,,Истина);
	процессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	тз_результат = Новый ТаблицаЗначений;
	процессорВывода.УстановитьОбъект(тз_результат);
	процессорВывода.Вывести(процессорКомпоновкиДанных);
	
	Объект.Имущество.Загрузить(тз_результат);
	
КонецПроцедуры




&НаКлиенте
Процедура ИмуществоПриИзменении(Элемент)
	
	Элемент.ТекущиеДанные.Сумма = Элемент.ТекущиеДанные.Количество * Элемент.ТекущиеДанные.Цена;
	
КонецПроцедуры


