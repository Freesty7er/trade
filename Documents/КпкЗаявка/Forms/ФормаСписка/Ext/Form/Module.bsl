
#Область ОбработчикиСобытий

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	ОтборПодразделение = Настройки.Получить("ОтборПодразделение");
	ОтборМаршрут = Настройки.Получить("ОтборМаршрут");
	ОтборМенеджер = Настройки.Получить("ОтборМенеджер");
	
	УправлениеНебольшойФирмойСервер.ИзменитьЭлементОтбораСписка(Список, "Подразделение", ОтборПодразделение, ЗначениеЗаполнено(ОтборПодразделение));
	УправлениеНебольшойФирмойСервер.ИзменитьЭлементОтбораСписка(Список, "МаршрутРазвоза", ОтборМаршрут, ЗначениеЗаполнено(ОтборМаршрут));
	УправлениеНебольшойФирмойСервер.ИзменитьЭлементОтбораСписка(Список, "Менеджер", ОтборМенеджер, ЗначениеЗаполнено(ОтборМенеджер));
	
	ОбновлениеИнформацииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПодразделениеПриИзменении(Элемент)
	
	УправлениеНебольшойФирмойКлиент.ИзменитьЭлементОтбораСписка(Список, "Подразделение", ОтборПодразделение, ЗначениеЗаполнено(ОтборПодразделение));
	ОбновлениеИнформацииСервер();

КонецПроцедуры

&НаКлиенте
Процедура ОтборКонтрагентПриИзменении(Элемент)
	
	УправлениеНебольшойФирмойКлиент.ИзменитьЭлементОтбораСписка(Список, "МаршрутРазвоза", ОтборМаршрут, ЗначениеЗаполнено(ОтборМаршрут));
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборМенеджерПриИзменении(Элемент)
	
	УправлениеНебольшойФирмойКлиент.ИзменитьЭлементОтбораСписка(Список, "Менеджер", ОтборМенеджер, ЗначениеЗаполнено(ОтборМенеджер));
	
КонецПроцедуры

&НаКлиенте
Процедура СписокМаршрутовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(Элемент.ТекущиеДанные.Маршрут) Тогда
		Возврат;
	КонецЕсли;
	
	ДатаОкончания = Элементы.список.Период.ДатаОкончания;
	Если ДатаОкончания = '0001-01-01' Тогда
		ДатаОкончания = КонецДня(ТекущаяДата());
	КонецЕсли;
	
	УсловияОтбора = Новый Структура("НачалоПериода, КонецПериода, МаршрутРазвоза", ДатаОкончания - 7 * 24 * 60 * 60, ДатаОкончания, Элемент.ТекущиеДанные.Маршрут);
	
	ПараметрыФормы = Новый Структура("Отбор, СформироватьПриОткрытии", УсловияОтбора, Истина);
	
	ОткрытьФорму("Отчет.ВедомостьПоРазвозу.ФормаОбъекта", ПараметрыФормы);

КонецПроцедуры

#КонецОбласти

#Область ДействияКоманд

&НаКлиенте
Процедура АвтоЗаполнениеМаршрутов(Команда)
	
	// Обязательная проверка - "ОтборПодразделение"
	Если Не ЗначениеЗаполнено(ОтборПодразделение) Тогда
		
		Предупреждение(НСтр("ru = 'Установите отбор по подразделению'"));
		Возврат;
		
	КонецЕсли;
	
	Если ПериодАвтозаполнения = '00010101' Тогда
		
		ПериодАвтозаполнения = ТекущаяДата();
		Предупреждение(НСтр("ru = 'Укажите дату для автозаполнения.'"));
		
		Возврат;
		
	КонецЕсли;
	
	АвтоЗаполнениеМаршрутовСервер();
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьМенеджеровИМаршруты(Команда)
	
	// Обновим данные таблиц: "Менеджеры" и "Маршруты"
	ОбновлениеИнформацииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьЗаявку(Команда)
	
	ЗначениеМаршрутРазвоза = ОткрытьФормуМодально("Справочник.МаршрутыРазвоза.ФормаВыбора",);
	
	Если ЗначениеМаршрутРазвоза = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьМаршрут(Элементы.Список.ВыделенныеСтроки, ЗначениеМаршрутРазвоза);
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьМаршруты(Команда)
	
	// Обязательная проверка - "ОтборПодразделение"
	Если Не ЗначениеЗаполнено(ОтборПодразделение) Тогда
		
		Предупреждение(НСтр("ru = 'Установите отбор по подразделению'"));
		Возврат;
		
	КонецЕсли;
	
	Режим = РежимДиалогаВопрос.ДаНет;
	Текст = НСтр("ru = 'ВНИМАНИЕ! Все маршруты за выбранный период будут очищены.'");
	Ответ = Вопрос(Текст, Режим, 0);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
	    Возврат;
	КонецЕсли;
	
	// Вставить содержимое обработчика.
	ОчиститьМаршрутыСервер();
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура Печать(Команда)
	
	МаршрутРазвоза = Элементы.СписокМаршрутов.ТекущиеДанные.Маршрут;
	
	Если Не ЗначениеЗаполнено(МаршрутРазвоза) Тогда
		Возврат;
	КонецЕсли;
	
	ДатаОкончания = Элементы.список.Период.ДатаОкончания;
	Если ДатаОкончания = '0001-01-01' Тогда
		ДатаОкончания = КонецДня(ТекущаяДата());
	КонецЕсли;
	
	УсловияОтбора = Новый Структура("НачалоПериода, КонецПериода, МаршрутРазвоза", ДатаОкончания - 7 * 24 * 60 * 60, ДатаОкончания, МаршрутРазвоза);
	ПараметрыФормы = Новый Структура("Отбор, СформироватьПриОткрытии", УсловияОтбора, Истина);
	
	ОткрытьФорму("Отчет.ВедомостьПоРазвозу.ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьЗаявки(Команда)
	
	МаршрутРазвоза = Элементы.СписокМаршрутов.ТекущиеДанные.Маршрут;
	
	Если Не ЗначениеЗаполнено(МаршрутРазвоза) Тогда
		Возврат;
	КонецЕсли;

	ДатаОкончания = Элементы.список.Период.ДатаОкончания;
	Если ДатаОкончания = '0001-01-01' Тогда
		ДатаОкончания = КонецДня(ТекущаяДата());
	КонецЕсли;
	
	УсловияОтбора = Новый Структура("МаршрутРазвоза", МаршрутРазвоза);
	ПараметрыФормы = Новый Структура("Отбор, СформироватьПриОткрытии", УсловияОтбора, Истина);
	
	ОткрытьФорму("Отчет.Заявки.ФормаОбъекта", ПараметрыФормы);

КонецПроцедуры

&НаКлиенте
Процедура ПечатьЯрлыки(Команда)
		
	МаршрутРазвоза = Элементы.СписокМаршрутов.ТекущиеДанные.Маршрут;
	
	Если Не ЗначениеЗаполнено(МаршрутРазвоза) Тогда
		Возврат;
	КонецЕсли;

	ДатаОкончания = Элементы.список.Период.ДатаОкончания;
	Если ДатаОкончания = '0001-01-01' Тогда
		ДатаОкончания = КонецДня(ТекущаяДата());
	КонецЕсли;
	
	ДатаНачала = Элементы.список.Период.ДатаНачала;
	Если ДатаНачала = '0001-01-01' Тогда
		ДатаНачала = НачалоДня(ДатаОкончания);
	КонецЕсли;
	
	УсловияОтбора = Новый Структура("НачалоПериода, КонецПериода, МаршрутРазвоза", ДатаНачала, ДатаОкончания, МаршрутРазвоза);
	ПараметрыФормы = Новый Структура("Отбор, СформироватьПриОткрытии", УсловияОтбора, Истина);
	
	ОткрытьФорму("Отчет.Ярлыки.ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры

#КонецОбласти

#Область ДополнительныеПроцедурыИФункции

&НаСервере
Процедура УстановитьМаршрут(Знач ДанныеДляОбработки, ЗначениеМаршрутРазвоза)
	
	Если ДанныеДляОбработки <> Неопределено Тогда
		
		Для каждого ТекущиеДанные Из ДанныеДляОбработки Цикл
			
			Если ЗначениеЗаполнено(ТекущиеДанные) И (Не ТекущиеДанные.МаршрутРазвоза = ЗначениеМаршрутРазвоза) Тогда
				
				Объект = ТекущиеДанные.ПолучитьОбъект();
				Объект.МаршрутРазвоза = ЗначениеМаршрутРазвоза;
				Объект.Записать();
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновлениеИнформацииСервер()
	
	Если (Элементы.Список.Период.ДатаНачала = '00010101') Тогда
		НачалоПериода = НачалоДня(ТекущаяДата());
	Иначе
		НачалоПериода = Элементы.Список.Период.ДатаНачала;
	КонецЕсли;
	
	Если (Элементы.Список.Период.ДатаОкончания = '00010101') Тогда
		ОкончаниеПериода = КонецДня(ТекущаяДата());
	Иначе
		ОкончаниеПериода = Элементы.Список.Период.ДатаОкончания;
	КонецЕсли;
	
	Если ОкончаниеПериода < НачалоПериода Тогда
		
		НачалоПериода = НачалоДня(НачалоПериода);
		ОкончаниеПериода = КонецДня(НачалоПериода);
		
	КонецЕсли;
	
	Элементы.Группа3Итоги.Заголовок = "(" + ПредставлениеПериода(НачалоПериода,ОкончаниеПериода, "ДФ=dd.MM.yy") + ")";
	
	// Параметры запроса
	УстановитьПараметрДинамическогоСписка(СписокМенеджеров, "Подразделение", 		ОтборПодразделение);
	УстановитьПараметрДинамическогоСписка(СписокМенеджеров, "ОтборПодразделение",	ЗначениеЗаполнено(ОтборПодразделение));
	УстановитьПараметрДинамическогоСписка(СписокМенеджеров, "НачалоПериода", 		НачалоПериода);
	УстановитьПараметрДинамическогоСписка(СписокМенеджеров, "ОкончаниеПериода", 	ОкончаниеПериода);
	
	УстановитьПараметрДинамическогоСписка(СписокМаршрутов, "Подразделение", 		ОтборПодразделение);
	УстановитьПараметрДинамическогоСписка(СписокМаршрутов, "ОтборПодразделение",	ЗначениеЗаполнено(ОтборПодразделение));
	УстановитьПараметрДинамическогоСписка(СписокМаршрутов, "НачалоПериода", 		НачалоПериода);
	УстановитьПараметрДинамическогоСписка(СписокМаршрутов, "ОкончаниеПериода", 		ОкончаниеПериода);

	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ КпкЗаявка.Ссылка) КАК Колво,
	|	СУММА(КпкЗаявка.Количество * КпкЗаявка.Номенклатура.Вес) КАК Вес
	|ИЗ
	|	Документ.КпкЗаявка.Запасы КАК КпкЗаявка
	|ГДЕ
	|	КпкЗаявка.Ссылка.ПометкаУдаления = ЛОЖЬ
	|	И КпкЗаявка.Ссылка.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	И ВЫБОР
	|			КОГДА &ОтборПодразделение
	|				ТОГДА КпкЗаявка.Ссылка.Подразделение = &Подразделение
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ОтборПодразделение", ЗначениеЗаполнено(ОтборПодразделение));
	Запрос.УстановитьПараметр("Подразделение", ОтборПодразделение);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		Элементы.ВсегоВес = 0;
		Элементы.ВсегоЗаявок = 0;
		
	Иначе
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		
		ВсегоВес = Выборка.Вес;
		ВсегоЗаявок = Выборка.Колво;
		
	КонецЕсли;				   
		
КонецПроцедуры

// Устанавливает значение параметра динамического списка на сервере
//
// Параметры:
// ДинамическийСписок - динамический список, для которого устанавливается параметр
// Имя - имя параметра динамического списка
// ЗначениеПараметра - значение устанавливаемого параметра
//
&НаСервере
Процедура УстановитьПараметрДинамическогоСписка(ДинамическийСписок, Имя, ЗначениеПараметра)
	
	Если Не ДинамическийСписок.Параметры.Элементы.Найти(Имя) = Неопределено Тогда
		ДинамическийСписок.Параметры.УстановитьЗначениеПараметра(Имя, ЗначениеПараметра);
	КонецЕсли;
	
КонецПроцедуры // УстановитьПараметрДинамическогоСписка()

&НаСервере
Процедура АвтоЗаполнениеМаршрутовСервер()
	
	Если (Элементы.Список.Период.ДатаНачала = '00010101') Тогда
		НачалоПериода = НачалоДня(ТекущаяДата());
	Иначе
		НачалоПериода = Элементы.Список.Период.ДатаНачала;
	КонецЕсли;
	
	Если (Элементы.Список.Период.ДатаОкончания = '00010101') Тогда
		ОкончаниеПериода = КонецДня(ТекущаяДата());
	Иначе
		ОкончаниеПериода = Элементы.Список.Период.ДатаОкончания;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	КпкЗаявка.Ссылка,
	|	ЕСТЬNULL(КпкЗаявкаДляАнализа.МаршрутРазвоза, ЗНАЧЕНИЕ(Справочник.МаршрутыРазвоза.ПустойМаршрут)) КАК МаршрутРазвоза
	|ИЗ
	|	Документ.КпкЗаявка КАК КпкЗаявка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КпкЗаявка КАК КпкЗаявкаДляАнализа
	|		ПО КпкЗаявка.Контрагент = КпкЗаявкаДляАнализа.Контрагент
	|ГДЕ
	|	КпкЗаявкаДляАнализа.Дата МЕЖДУ &НачалоПериодаАнализа И &ОкончаниеПериодаАнализа
	|	И КпкЗаявкаДляАнализа.Проведен = ИСТИНА
	|	И КпкЗаявка.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	И КпкЗаявка.Проведен = ИСТИНА
	|	И КпкЗаявка.МаршрутРазвоза = ЗНАЧЕНИЕ(Справочник.МаршрутыРазвоза.ПустойМаршрут)
	|	И КпкЗаявка.Подразделение = &Подразделение";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	
	Запрос.УстановитьПараметр("НачалоПериодаАнализа", НачалоДня(ПериодАвтозаполнения));
	Запрос.УстановитьПараметр("ОкончаниеПериодаАнализа", КонецДня(ПериодАвтозаполнения));
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);
	Запрос.УстановитьПараметр("Подразделение", ОтборПодразделение);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ДокументОбъект.МаршрутРазвоза = Выборка.МаршрутРазвоза;
		ДокументОбъект.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьМаршрутыСервер()
	
	Если (Элементы.Список.Период.ДатаНачала = '00010101') Тогда
		НачалоПериода = НачалоДня(ТекущаяДата());
	Иначе
		НачалоПериода = Элементы.Список.Период.ДатаНачала;
	КонецЕсли;
	
	Если (Элементы.Список.Период.ДатаОкончания = '00010101') Тогда
		ОкончаниеПериода = КонецДня(ТекущаяДата());
	Иначе
		ОкончаниеПериода = Элементы.Список.Период.ДатаОкончания;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	КпкЗаявка.Ссылка
	|ИЗ
	|	Документ.КпкЗаявка КАК КпкЗаявка
	|ГДЕ
	|	КпкЗаявка.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	И КпкЗаявка.Проведен = ИСТИНА
	|	И КпкЗаявка.Подразделение = &Подразделение";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);
	Запрос.УстановитьПараметр("Подразделение", ОтборПодразделение);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ДокументОбъект.МаршрутРазвоза = Справочники.МаршрутыРазвоза.ПустойМаршрут;
		ДокументОбъект.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
