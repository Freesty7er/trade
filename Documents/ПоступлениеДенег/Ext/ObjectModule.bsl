
#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(отказ, режимПроведения)
	
	// Инициализация дополнительных свойств для проведения документа.
	ОбщегоНазначенияСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей.
	ОбщегоНазначенияСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Инициализация данных документа.
	Документы.ПоступлениеДенег.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	
	// Отражение в разделах учета
	ОбщегоНазначенияСервер.ОтразитьДвиженияПоРегистрамНакопления(ДополнительныеСвойства, Движения, отказ);
		
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(данныеЗаполнения, стандартнаяОбработка)
	
	заполненНаОснованииДокумента = Ложь;
	
	ЗаполнениеОбъектовСервер.ЗаполнитьДанныеНовогоДокумента(ЭтотОбъект, данныеЗаполнения);
	
	// Заполнение по умолчанию.
	Если ОперацияДокумента.Пустая() Тогда
		ОперацияДокумента = Справочники.ОперацииДокументов.ПоступлениеДенегОплата;
	КонецЕсли;
	
	// Ввод на основании.
	типДанныхЗаполнения = ТипЗнч(данныеЗаполнения);
	
	Если типДанныхЗаполнения = Тип("Структура") Тогда
		
		ЗаполнитьДокументПоОтбору(данныеЗаполнения);
		
	ИначеЕсли типДанныхЗаполнения = Тип("ДокументСсылка.РасходДенег") Тогда
		
		ЗаполнитьДокументНаОснованииРасходаДенег(данныеЗаполнения);
		заполненНаОснованииДокумента = Истина;
		
	КонецЕсли;
	
	свойствоСозданАвтоматически = Неопределено;
	Если ДополнительныеСвойства.Свойство("СозданАвтоматически", свойствоСозданАвтоматически) И свойствоСозданАвтоматически Тогда
		СозданАвтоматически = Истина;
		Комментарий = данныеЗаполнения.Комментарий;
	КонецЕсли;
	
	
КонецПроцедуры

Процедура ПередЗаписью(отказ, режимЗаписи, режимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	// Проверка заполнения валюты 
	Если НЕ ЗначениеЗаполнено(ВалютаДокумента) Тогда
		ВалютаДокумента = Константы.ВалютаУчета.Получить();
		Курс = 1;
		Кратность = 1;
	КонецЕсли;
	
	Если ПометкаУдаления = Ссылка.ПометкаУдаления Тогда
		
		Если режимЗаписи <> РежимЗаписиДокумента.ОтменаПроведения Тогда
			
			Если Не отказ Тогда
				
				ПредставлениеПлательщика = Документы.ПоступлениеДенег.ПолучитьПредставлениеПлательщика(ЭтотОбъект);
				
			КонецЕсли; 
			
		КонецЕсли;
		
	КонецЕсли;		
	
КонецПроцедуры

Процедура ПриКопировании(объектКопирования)
	
	ЗаполнениеОбъектовСервер.ЗаполнитьДанныеСкопированногоДокумента(ЭтотОбъект, ОбъектКопирования);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ЗаполнениеПоОснованию

Процедура ЗаполнитьДокументПоОтбору(Знач данныеЗаполнения)
	
КонецПроцедуры	

Процедура ЗаполнитьДокументНаОснованииРасходаДенег(Знач данныеЗаполнения)
	
	УстановитьПривилегированныйРежим(Истина);
	
	// Заполнение реквизитов документа.
	ЗаполнениеОбъектовСервер.ЗаполнитьРеквизитыДокументаПриВводеНаОсновании(ЭтотОбъект, данныеЗаполнения);
	
	запрос = Новый Запрос;
	
	#Область ТекстЗапроса
	
	запрос.Текст =
	"ВЫБРАТЬ
	|	РасходДенег.Ссылка КАК ДокументОснование,
	|	СД_СоответствияСрезПоследних.КлючСоответствия,
	|	ЕСТЬNULL(СД_СоответствияСрезПоследних.ПодразделениеЗначение, РасходДенег.Подразделение) КАК Подразделение,
	|	ЕСТЬNULL(СД_СоответствияСрезПоследних.КонтрагентЗначение, РасходДенег.Контрагент) КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.ОперацииДокументов.ПоступлениеДенегОплата) КАК ОперацияДокумента,
	|	РасходДенег.СчетПолучателя КАК ДенежныйСчет
	|ИЗ
	|	Документ.РасходДенег КАК РасходДенег
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СД_Соответствия.СрезПоследних(&МоментВремени, КлючСоответствия.ВидДокумента = &ВидДокумента) КАК СД_СоответствияСрезПоследних
	|		ПО (СД_СоответствияСрезПоследних.Активно = ИСТИНА)
	|			И РасходДенег.Подразделение = СД_СоответствияСрезПоследних.КлючСоответствия.Подразделение
	|			И РасходДенег.Контрагент = СД_СоответствияСрезПоследних.КлючСоответствия.Контрагент
	|ГДЕ
	|	РасходДенег.Ссылка = &ДокументОснование";
	
	#КонецОбласти
	
	запрос.УстановитьПараметр("МоментВремени", МоментВремени());
	запрос.УстановитьПараметр("ДокументОснование", данныеЗаполнения);
	запрос.УстановитьПараметр("ВидДокумента", Перечисления.СД_ВидыСвязанныхДокументов.РасходДенег);
	
	результатЗапроса = запрос.ВыполнитьПакет();
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, результатЗапроса[0].Выгрузить()[0]);
	
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти