// Формирует таблицу значений, содержащую данные для проведения по регистру.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура СформироватьТаблица_ВзаиморасчетыСПокупателями(ДокументСсылкаИнвентаризацияВзаиморасчетов, СтруктураДополнительныеСвойства)
	
	
	Если (ДокументСсылкаИнвентаризацияВзаиморасчетов.ОперацияДокумента = Справочники.ОперацииДокументов.ПередачаДолговПоПокупателям) Или 
			(ДокументСсылкаИнвентаризацияВзаиморасчетов.ОперацияДокумента = Справочники.ОперацииДокументов.СписаниеЗадолженностиПокупателей) Тогда
		ЕстьСписаниеЗадолженности = Истина;		
	Иначе
		ЕстьСписаниеЗадолженности = Ложь;
	КонецЕсли;
	
	Если (ДокументСсылкаИнвентаризацияВзаиморасчетов.ОперацияДокумента = Справочники.ОперацииДокументов.ПередачаДолговПоПокупателям) Или 
			(ДокументСсылкаИнвентаризацияВзаиморасчетов.ОперацияДокумента = Справочники.ОперацииДокументов.ОстаткиПоПокупателям) Тогда
		ЕстьОприходованиеЗадолженности = Истина;		
	Иначе
		ЕстьОприходованиеЗадолженности = Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаИнвентаризацияВзаиморасчетов);
	Запрос.УстановитьПараметр("Подразделение", ДокументСсылкаИнвентаризацияВзаиморасчетов.Подразделение);
	//Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("ПериодКонтроля", СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени.Дата);

	Запрос.УстановитьПараметр("ЕстьСписаниеЗадолженности", 		ЕстьСписаниеЗадолженности);
	Запрос.УстановитьПараметр("ЕстьОприходованиеЗадолженности", ЕстьОприходованиеЗадолженности);
	
	// Формирование временной таблицы по расчетам с покупателями.
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	&Подразделение,
		|	ИнвентаризацияВзаиморасчетовСПокупателямиСтрокиДокумента.Контрагент,
		|	ИнвентаризацияВзаиморасчетовСПокупателямиСтрокиДокумента.КредДокумент КАК КредитныйДокумент,
		|	ЕСТЬNULL(ВзаиморасчетыСПокупателямиОстатки.Менеджер, ЗНАЧЕНИЕ(Справочник.Менеджеры.ПустаяСсылка)) КАК Менеджер,
		|	-1*ЕСТЬNULL(ВзаиморасчетыСПокупателямиОстатки.СуммаОстаток, 0) КАК Сумма,
		|	ИнвентаризацияВзаиморасчетовСПокупателямиСтрокиДокумента.Ссылка.Дата КАК Период,
		|	ИнвентаризацияВзаиморасчетовСПокупателямиСтрокиДокумента.НомерСтроки
		|ПОМЕСТИТЬ ВременнаяТаблицаВзаиморасчетыСПокупателями
		|ИЗ
		|	Документ.ИнвентаризацияВзаиморасчетовСПокупателями.СтрокиДокумента КАК ИнвентаризацияВзаиморасчетовСПокупателямиСтрокиДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВзаиморасчетыСПокупателями.Остатки(&МоментВремени, Подразделение = &Подразделение) КАК ВзаиморасчетыСПокупателямиОстатки
		|		ПО ИнвентаризацияВзаиморасчетовСПокупателямиСтрокиДокумента.Контрагент = ВзаиморасчетыСПокупателямиОстатки.Контрагент
		|			И ИнвентаризацияВзаиморасчетовСПокупателямиСтрокиДокумента.КредДокумент = ВзаиморасчетыСПокупателямиОстатки.КредитныйДокумент
		|ГДЕ
		|	ИнвентаризацияВзаиморасчетовСПокупателямиСтрокиДокумента.Ссылка = &Ссылка
		|	И &ЕстьСписаниеЗадолженности = ИСТИНА
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
		|	&Подразделение,
		|	ИнвентаризацияВзаиморасчетовСПокупателямиСтрокиДокумента.Контрагент,
		|	ИнвентаризацияВзаиморасчетовСПокупателямиСтрокиДокумента.КредДокумент,
		|	ИнвентаризацияВзаиморасчетовСПокупателямиСтрокиДокумента.Ссылка.Менеджер,
		|	ИнвентаризацияВзаиморасчетовСПокупателямиСтрокиДокумента.Долг,
		|	ИнвентаризацияВзаиморасчетовСПокупателямиСтрокиДокумента.Ссылка.Дата,
		|	ИнвентаризацияВзаиморасчетовСПокупателямиСтрокиДокумента.НомерСтроки
		|ИЗ
		|	Документ.ИнвентаризацияВзаиморасчетовСПокупателями.СтрокиДокумента КАК ИнвентаризацияВзаиморасчетовСПокупателямиСтрокиДокумента
		|ГДЕ
		|	ИнвентаризацияВзаиморасчетовСПокупателямиСтрокиДокумента.Ссылка = &Ссылка
		|	И &ЕстьОприходованиеЗадолженности = ИСТИНА";

   	Запрос.Выполнить();
	
	Запрос.Текст = "ВЫБРАТЬ * ИЗ ВременнаяТаблицаВзаиморасчетыСПокупателями";
	
	// Установка исключительной блокировки контролируемых остатков расчетов с контрагентами.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВременнаяТаблицаВзаиморасчетыСПокупателями.Подразделение КАК Подразделение,
	|	ВременнаяТаблицаВзаиморасчетыСПокупателями.Контрагент КАК Контрагент,
	|	ВременнаяТаблицаВзаиморасчетыСПокупателями.Менеджер КАК Менеджер,
	|	ВременнаяТаблицаВзаиморасчетыСПокупателями.КредитныйДокумент КАК КредитныйДокумент
	|ИЗ
	|	ВременнаяТаблицаВзаиморасчетыСПокупателями";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ВзаиморасчетыСПокупателями");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
	
	Для каждого КолонкаРезультатЗапроса Из РезультатЗапроса.Колонки Цикл
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных(КолонкаРезультатЗапроса.Имя, КолонкаРезультатЗапроса.Имя);
	КонецЦикла;
	Блокировка.Заблокировать();

    НомерЗапроса = 0;
	Запрос.Текст = УправлениеНебольшойФирмойСервер.ПолучитьТекстЗапросаКурсовыеРазницыРасчетыСПокупателями(Запрос.МенеджерВременныхТаблиц, Истина, НомерЗапроса);
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("Таблица_ВзаиморасчетыСПокупателями", МассивРезультатов[НомерЗапроса].Выгрузить());

	
КонецПроцедуры



// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства"..
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылкаИнвентаризацияВзаиморасчетов, СтруктураДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = СтруктураДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст =
	"";
	
	//Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаРасходнаяНакладная);
	//Запрос.УстановитьПараметр("СкладВозвратов", СтруктураДополнительныеСвойства.ДляПроведения.СкладВозвратов);
	//Запрос.УстановитьПараметр("МоментВремени", Новый Граница(СтруктураДополнительныеСвойства.ДляПроведения.МоментВремени, ВидГраницы.Включая));
	//Запрос.УстановитьПараметр("ЦенаСклада", СтруктураДополнительныеСвойства.УчетнаяПолитика.ЦенаСклада);
	//Запрос.УстановитьПараметр("Подразделение", СтруктураДополнительныеСвойства.ДляПроведения.Подразделение);
	//Запрос.УстановитьПараметр("УчетПоЯчейкам", СтруктураДополнительныеСвойства.УчетнаяПолитика.УчетПоЯчейкам);
	
	//Запрос.ВыполнитьПакет();
	
	//Запрос.Текст = "ВЫБРАТЬ * ИЗ ВременнаяТаблицаЗапасы";
	
	// Формирование проводок документа.
	//УправлениеНебольшойФирмойСервер.СформироватьТаблицуПроводок(ДокументСсылкаРасходнаяНакладная, СтруктураДополнительныеСвойства);
	
	СформироватьТаблица_ВзаиморасчетыСПокупателями(ДокументСсылкаИнвентаризацияВзаиморасчетов, СтруктураДополнительныеСвойства);
	
	//СформироватьТаблица_ДоходыИРасходы(ДокументСсылкаРасходнаяНакладная, СтруктураДополнительныеСвойства);
	
	
КонецПроцедуры // ИнициализироватьДанныеДокумента()

