
#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(отказ, режимПроведения)
	
	Если Не КД_Категория.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	Движения.КД_СтандартыПрисутствия.Записывать = Истина;
	Движения.КД_СтандартПрисутствия.Записывать = Истина;
	Движения.КД_СтандартПрисутствияПоПриоритетам.Записывать = Истина;
	
	запрос = Новый Запрос;
	запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	#Область ТекстЗапроса
	//	0 - "СтандартПрисутствия"
	//	1 - "СтандарПрисутствияПоПриоритетам"
	запрос.Текст =
	"ВЫБРАТЬ
	|	БПАГСтандартПрисутствияСтандартПрисутствия.Ссылка.Дата КАК Период,
	|	БПАГСтандартПрисутствияСтандартПрисутствия.Ссылка.Подразделение,
	|	БПАГСтандартПрисутствияСтандартПрисутствия.КатегорияТТ,
	|	БПАГСтандартПрисутствияСтандартПрисутствия.Номенклатура,
	|	БПАГСтандартПрисутствияСтандартПрисутствия.ПриоритетПродукта КАК ПриоритетПродукта,
	|	БПАГСтандартПрисутствияСтандартПрисутствия.Номенклатура.КД_Группа КАК ГруппаПродукции,
	|	БПАГСтандартПрисутствияСтандартПрисутствия.Номенклатура.КД_Вид КАК ВидПродукции,
	|	БПАГСтандартПрисутствияСтандартПрисутствия.ТипПриоритета,
	|	БПАГСтандартПрисутствияСтандартПрисутствия.МинимальнаяДлинаПолкиДляФэйсинга,
	|	БПАГСтандартПрисутствияСтандартПрисутствия.МинимальныйОстаток,
	|	БПАГСтандартПрисутствияСтандартПрисутствия.Фэйсинг,
	|	НАЧАЛОПЕРИОДА(БПАГСтандартПрисутствияСтандартПрисутствия.Ссылка.Дата, ДЕНЬ) КАК ДатаВводаСтандарта,
	|	БПАГСтандартПрисутствияСтандартПрисутствия.КатегорияТТ.Родитель КАК КатегорийнаяГруппа,
	|	БПАГСтандартПрисутствияСтандартПрисутствия.Ссылка.ТорговаяТочка
	|ИЗ
	|	Документ.БПАГСтандартПрисутствия.СтандартПрисутствия КАК БПАГСтандартПрисутствияСтандартПрисутствия
	|ГДЕ
	|	БПАГСтандартПрисутствияСтандартПрисутствия.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БПАГСтандартПрисутствияИсходнаяТаблица.Ссылка.Дата КАК Период,
	|	БПАГСтандартПрисутствияИсходнаяТаблица.Ссылка.Подразделение,
	|	БПАГСтандартПрисутствияИсходнаяТаблица.Ссылка.ГруппаПродукта,
	|	БПАГСтандартПрисутствияИсходнаяТаблица.Ссылка.КатегорийнаяГруппа,
	|	БПАГСтандартПрисутствияИсходнаяТаблица.Ссылка.ТорговаяТочка,
	|	БПАГСтандартПрисутствияИсходнаяТаблица.Номенклатура,
	|	БПАГСтандартПрисутствияИсходнаяТаблица.КолвоАктивныхТТПоПродукту КАК АКБпоПродукту,
	|	БПАГСтандартПрисутствияИсходнаяТаблица.КолвоАктивныхТТВсего КАК АКБ,
	|	БПАГСтандартПрисутствияИсходнаяТаблица.СредняяСуммаРеализацииНаТТ КАК СредняяПродажаНаТТ,
	|	ВЫБОР
	|		КОГДА БПАГСтандартПрисутствияИсходнаяТаблица.КолвоАктивныхТТПоПродукту = 0
	|			ТОГДА 0
	|		ИНАЧЕ БПАГСтандартПрисутствияИсходнаяТаблица.Вес / БПАГСтандартПрисутствияИсходнаяТаблица.КолвоАктивныхТТПоПродукту
	|	КОНЕЦ КАК СреднийВесНаТТ,
	|	ВЫБОР
	|		КОГДА БПАГСтандартПрисутствияИсходнаяТаблица.КолвоАктивныхТТПоПродукту = 0
	|			ТОГДА 0
	|		ИНАЧЕ БПАГСтандартПрисутствияИсходнаяТаблица.Доход / БПАГСтандартПрисутствияИсходнаяТаблица.КолвоАктивныхТТПоПродукту
	|	КОНЕЦ КАК СреднийДоходНаТТ,
	|	БПАГСтандартПрисутствияИсходнаяТаблица.Приоритет,
	|	БПАГСтандартПрисутствияИсходнаяТаблица.Номенклатура.Родитель.Поставщик КАК Поставщик
	|ИЗ
	|	Документ.БПАГСтандартПрисутствия.ИсходнаяТаблица КАК БПАГСтандартПрисутствияИсходнаяТаблица
	|ГДЕ
	|	БПАГСтандартПрисутствияИсходнаяТаблица.Ссылка = &Ссылка
	|	И БПАГСтандартПрисутствияИсходнаяТаблица.Приоритет <> ЗНАЧЕНИЕ(Справочник.КД_ПриоритетыПродукта.Вывод)
	|	И БПАГСтандартПрисутствияИсходнаяТаблица.Приоритет <> ЗНАЧЕНИЕ(Справочник.КД_ПриоритетыПродукта.ПустаяСсылка)";
		
	#КонецОбласти
	
	запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	результатЗапроса = запрос.ВыполнитьПакет();
	
	Движения.КД_СтандартПрисутствия.Загрузить(результатЗапроса[0].Выгрузить());
	Движения.КД_СтандартПрисутствияПоПриоритетам.Загрузить(результатЗапроса[1].Выгрузить());
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(отказ, проверяемыеРеквизиты)
	
	проверяемыеРеквизиты.Добавить("Подразделение");
	проверяемыеРеквизиты.Добавить("ГруппаПродукта");
	проверяемыеРеквизиты.Добавить("СтандартПрисутствия.КатегорияТТ");
	
	параметрыУчетаПоПодразделению = РегистрыСведений.ПараметрыУчетаПоПодразделениям.ПолучитьПараметрыУчетаПоПодразделению(Дата, Подразделение, Новый Структура("ЭтоРозница"));
	Если параметрыУчетаПоПодразделению.ЭтоРозница Тогда
		проверяемыеРеквизиты.Добавить("СтандартПрисутствия.МинимальныйОстаток");
	КонецЕсли;
	
	ОбработкаТабличныхЧастейСервер.ПроверитьДублиСтрокТабличнойЧасти(Отказ, ЭтотОбъект, "ИсходнаяТаблица", Новый Структура("Номенклатура", "Номенклатура"));

КонецПроцедуры

Процедура ПередЗаписью(отказ, режимЗаписи, режимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Подразделение.Пустая() Тогда
		
		ТекстСообщения = НСтр("ru = 'Запись невозможна без заполнения Подразделения.'");
		ПроверкаДанныхКлиентСервер.СообщитьОбОшибке(отказ, текстСообщения, ЭтотОбъект, "Подразделение");
		
	КонецЕсли;
	
	Если Не Дата = НачалоМесяца(Дата) Тогда
		Дата = НачалоМесяца(Дата);
	КонецЕсли;

КонецПроцедуры

Процедура ПриКопировании(объектКопирования)
	
	ЗаполнениеОбъектовСервер.ЗаполнитьДанныеСкопированногоДокумента(ЭтотОбъект, ОбъектКопирования);
	
КонецПроцедуры

#КонецОбласти
