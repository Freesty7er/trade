
&НаКлиенте
Процедура КомандаЗагрузитьИзCVS(команда)
	
	отказ = Ложь;
	
	// добавить проверку заполнения реквизитов ...
	Если Подразделение.Пустая() Тогда
		ПроверкаДанныхКлиентСервер.СообщитьОбОшибке(отказ, "Не выбрано ""Подразделение""", ЭтотОбъект, "Подразделение");
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Дата) Тогда
		ПроверкаДанныхКлиентСервер.СообщитьОбОшибке(отказ, "Не выбрано ""Дата""", ЭтотОбъект, "Подразделение");
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДатаВизитаПлан) Тогда
		ПроверкаДанныхКлиентСервер.СообщитьОбОшибке(отказ, "Не выбрано ""Дата визита""", ЭтотОбъект, "Подразделение");
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ГруппаПродукта) Тогда
		ПроверкаДанныхКлиентСервер.СообщитьОбОшибке(отказ, "Не выбрано ""Группа продукта""", ЭтотОбъект, "Подразделение");
	КонецЕсли;
	
	
	
	
	Если отказ Тогда
		Возврат;
	КонецЕсли;
	
	диалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	
	диалогВыбораФайла.Фильтр = НСтр("ru = 'Текстовые файлы (*.csv)|*.csv'");
	диалогВыбораФайла.МножественныйВыбор = Ложь;
	диалогВыбораФайла.ПроверятьСуществованиеФайла = Ложь;
	
	описаниеОповещения = Новый ОписаниеОповещения("ОбработатьРезультатДиалогаВыбораФайла", ЭтотОбъект);
	диалогВыбораФайла.Показать(описаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьРезультатДиалогаВыбораФайла(выбранныеФайлы, дополнительныеПараметры) Экспорт
	
	Если выбранныеФайлы <> Неопределено Тогда
		
		путьФайла = выбранныеФайлы[0];
		адресХранилища = "";
		
		описаниеОповещения = Новый ОписаниеОповещения("ПослеПомещенияФайлаВХранилище", ЭтотОбъект);
		НачатьПомещениеФайла(описаниеОповещения, адресХранилища, путьФайла, Ложь, УникальныйИдентификатор);
		
	КонецЕсли;
	
КонецПроцедуры // ОбработатьРезультатДиалогаВыбораФайла()

&НаКлиенте
Процедура ПослеПомещенияФайлаВХранилище(выбрано, адресХранилища, результат, шЛак) Экспорт
	
	АдресХранилищаФайла = адресХранилища;
	
	ВыполнитьЗагрузкуФайлаНаСерере();
	
	ОповеститьОбИзменении(Тип("ДокументСсылка.ЗаданиеКонтролеруОКК"));
	
КонецПроцедуры	// ПослеПомещенияФайлаВХранилище()

&НаСервере
Процедура ВыполнитьЗагрузкуФайлаНаСерере()
	
	разделитель = ";";
	
	таблица = Новый ТаблицаЗначений;
	таблица.Колонки.Добавить("КодТТ",Новый ОписаниеТипов("Строка",Новый КвалификаторыСтроки(9)));
	таблица.Колонки.Добавить("КодАгента",Новый ОписаниеТипов("Строка",Новый КвалификаторыСтроки(9)));
	
	двоичныеДанные = ПолучитьИзВременногоХранилища(АдресХранилищаФайла);
	
	имяВременногоФайла = ПолучитьИмяВременногоФайла("txt");
	
	двоичныеДанные.Записать(имяВременногоФайла);
	
	текст = Новый ЧтениеТекста(имяВременногоФайла);
	
	строкаТекста = текст.ПрочитатьСтроку();
	Пока строкаТекста <> Неопределено Цикл 
		
		массивКол = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(строкаТекста,Разделитель);
		
		строкаТаблицы = таблица.Добавить();
		Если массивКол.Количество() <> таблица.Колонки.Количество() Тогда
			строкаТекста = текст.ПрочитатьСтроку();
			Сообщить("Внимание! Количество столбцов в файле больше 2.");
			Продолжить; // скорее всего в тексте содержит разделитель
		КонецЕсли;
		
		Для номерСтолбца = 1 по таблица.Колонки.Количество() Цикл
			
			строкаТаблицы[НомерСтолбца-1] = массивКол[номерСтолбца-1];
			
		КонецЦикла;
		
		строкаТекста = текст.ПрочитатьСтроку();
		
	КонецЦикла;
	
	текст.Закрыть();
	
	УдалитьФайлы(имяВременногоФайла);
	
	запрос = Новый Запрос;
	
	#Область ТекстЗапроса
	
	запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(внТаблица.КодТТ КАК СТРОКА(9)) КАК КодТТ,
	|	ВЫРАЗИТЬ(внТаблица.КодАгента КАК СТРОКА(9)) КАК КодАгента
	|ПОМЕСТИТЬ вт_таблица
	|ИЗ
	|	&таблица КАК внТаблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таблица.КодТТ,
	|	Таблица.КодАгента,
	|	Контрагенты.Ссылка КАК Контрагент,
	|	Агенты.Ссылка КАК Агент,
	|	Задание.Ссылка КАК Задание
	|ИЗ
	|	вт_таблица КАК Таблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|		ПО Таблица.КодТТ = Контрагенты.Код
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БПАГАгенты КАК Агенты
	|		ПО Таблица.КодАгента = Агенты.Код
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаданиеКонтролеруОКК КАК Задание
	|		ПО (Контрагенты.Ссылка = Задание.ТорговаяТочка)
	|			И (Агенты.Ссылка = Задание.КонтроллерОКК)
	|			И (Задание.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&Дата1, ДЕНЬ) И КОНЕЦПЕРИОДА(&Дата1, ДЕНЬ))
	|			И (Задание.Проведен)
	|			И (Задание.ГруппаПродукта = &ГруппаПродукта)";
	
	#КонецОбласти
	
	запрос.УстановитьПараметр("таблица", таблица);
	запрос.УстановитьПараметр("Дата1",Дата);
	запрос.УстановитьПараметр("ГруппаПродукта",ГруппаПродукта);
	
	
	результат = запрос.Выполнить();
	
	выборка = результат.Выбрать();
	Пока выборка.Следующий() Цикл
		
		найдено = Ложь;
		Если Не ЗначениеЗаполнено(выборка.Задание) тогда
			//создаем новый документ
			заданиеКК = Документы.ЗаданиеКонтролеруОКК.СоздатьДокумент();
		ИначеЕсли Не ПерезаписыватьСуществующиеЗадания	Тогда
			Продолжить;
		Иначе
			//существующий документ обновляем
			заданиеКК = выборка.Задание.ПолучитьОбъект();
			найдено = Истина;			
		КонецЕсли;
		
		заданиеКК.Дата 				= Дата;
		заданиеКК.ДатаВизитаПлан 	= ДатаВизитаПлан; 
		заданиеКК.ГруппаПродукта 	= ГруппаПродукта;
		заданиеКК.Подразделение 	= Подразделение;
		заданиеКК.ВидАнкеты 		= Справочники.БПАГВидыАнкет.НайтиПоНаименованию("Задача контролеру ОКК",1);
		заданиеКК.Статус 			= Перечисления.СтатусыЗаданийТорговымПредставителям.КОтработке;
		заданиеКК.КонтроллерОКК 	= выборка.Агент;
		заданиеКК.ТорговаяТочка 	= выборка.Контрагент;
		
		заданиеКК.Комментарий = СтрШаблон("Загружено из CSV [%1]", ТекущаяДатаСеанса());
		
		Если (Не найдено) И ЗначениеЗаполнено(заданиеКК.ВидАнкеты) тогда
			//добавление всех вопросов анкет
			спрВопросы = Справочники.БПАГВопросыАнкет.Выбрать(,заданиеКК.ВидАнкеты);
			Пока спрВопросы.Следующий() Цикл
				стр = заданиеКК.Задачи.Добавить();
				стр.ОписаниеЗадачи = спрВопросы.Ссылка;
			КонецЦикла;
		КонецЕсли;
		
		записывать = Истина;
		Если Не ЗначениеЗаполнено(выборка.Агент) Тогда
			Сообщить("Не найден Агент с кодом "+выборка.КодАгента);
			записывать = Ложь;
		КонецЕсли;	
		
		Если Не ЗначениеЗаполнено(выборка.Контрагент) Тогда
			Сообщить("Не найдена торговая точка с кодом "+выборка.КодТТ);
			записывать = Ложь;
		КонецЕсли;	
		
		Если записывать тогда
			Попытка
				заданиеКК.Записать(РежимЗаписиДокумента.Проведение);
				Сообщить(?(Найдено," Обновлен документ ", "Создан новый документ ")+СокрЛП(заданиеКК.Номер));
			Исключение
				Сообщить(ОписаниеОшибки());
			КонецПопытки;
			
		КонецЕсли;
	
	КонецЦикла;
	
	
КонецПроцедуры





