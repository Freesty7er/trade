
#Область ДействияКоманд

&НаКлиенте
Процедура СформироватьЗаказы(Команда)
	
	СформироватьЗаказыНаСервере();
	
	Оповестить("ОбновитьСписокЗаказовПоставщикам");
	
КонецПроцедуры

#КонецОбласти

#Область ДополнительныеПроцедурыИФункции

&НаСервере
Процедура СформироватьЗаказыНаСервере()
	
	запрос = Новый Запрос;
	запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	#Область ТекстЗапроса
	// 0 - список номенклатуры для заказа. в разрезе Подразделения/ЦФО
	// 1 - список заказов поставщику для блокировки по подразделению/поставщику
	// 2 - выборка для заполнения заказов
	запрос.Текст =
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Подразделение,
	|	ВложенныйЗапрос.ЦФО,
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Продажи КАК Продажи,
	|	ЕСТЬNULL(ТоварыВРозницеОстатки.КоличествоОстаток, 0) КАК Остаток,
	|	&ПериодЗакупок * ВложенныйЗапрос.Продажи / &ДнейПродаж - ЕСТЬNULL(ТоварыВРозницеОстатки.КоличествоОстаток, 0) КАК КоличествоЗаказ,
	|	ЕСТЬNULL(БПАГКоэффициентыРекомендуемогоЗапасаСрезПоследних.Коэффициент, 1.3) КАК КоэффифиентРекомендуемогоЗапаса,
	|	ЕСТЬNULL(БПАГКоэффициентыВыравниванияВЗаказеСрезПоследних.Коэффициент, 0.1) КАК КоэффициентВыравниванияВЗаказе,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.Номенклатура.БПАГКратностьУпаковки = 0
	|			ТОГДА 1
	|		ИНАЧЕ ВложенныйЗапрос.Номенклатура.БПАГКратностьУпаковки
	|	КОНЕЦ КАК КратностьУпаковки
	|ПОМЕСТИТЬ ТаблицаЗаказов
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТоварыВРозницеОбороты.Подразделение КАК Подразделение,
	|		ТоварыВРозницеОбороты.ОтделМагазина КАК ЦФО,
	|		ТоварыВРозницеОбороты.Номенклатура КАК Номенклатура,
	|		СУММА(ВЫБОР
	|				КОГДА ТоварыВРозницеОбороты.Регистратор ССЫЛКА Документ.ЧекККМ
	|					ТОГДА ТоварыВРозницеОбороты.КоличествоРасход
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК Продажи
	|	ИЗ
	|		РегистрНакопления.ТоварыВРознице.Обороты(
	|				&ДатаНачала,
	|				&ДатаОкончания,
	|				Авто,
	|				Подразделение = &Подразделение
	|					И Номенклатура.Родитель.Поставщик = &Поставщик) КАК ТоварыВРозницеОбороты
	|	ГДЕ
	|		ВЫБОР
	|				КОГДА ТоварыВРозницеОбороты.Регистратор ССЫЛКА Документ.ЧекККМ
	|					ТОГДА ТоварыВРозницеОбороты.КоличествоРасход
	|				ИНАЧЕ 0
	|			КОНЕЦ > 0
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТоварыВРозницеОбороты.ОтделМагазина,
	|		ТоварыВРозницеОбороты.Номенклатура,
	|		ТоварыВРозницеОбороты.Подразделение) КАК ВложенныйЗапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыВРознице.Остатки(
	|				&ДатаОкончания,
	|				Подразделение = &Подразделение
	|					И Номенклатура.Родитель.Поставщик = &Поставщик) КАК ТоварыВРозницеОстатки
	|		ПО ВложенныйЗапрос.Номенклатура = ТоварыВРозницеОстатки.Номенклатура
	|			И ВложенныйЗапрос.ЦФО = ТоварыВРозницеОстатки.ОтделМагазина
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.БПАГКоэффициентыРекомендуемогоЗапаса.СрезПоследних(&ДатаОкончания, ) КАК БПАГКоэффициентыРекомендуемогоЗапасаСрезПоследних
	|		ПО ВложенныйЗапрос.ЦФО.Магазин = БПАГКоэффициентыРекомендуемогоЗапасаСрезПоследних.Контрагент
	|			И ВложенныйЗапрос.Номенклатура.КД_Вид = БПАГКоэффициентыРекомендуемогоЗапасаСрезПоследних.НоменклатурнаяГруппа
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.БПАГКоэффициентыВыравниванияВЗаказе.СрезПоследних КАК БПАГКоэффициентыВыравниванияВЗаказеСрезПоследних
	|		ПО ВложенныйЗапрос.Номенклатура.КД_Вид = БПАГКоэффициентыВыравниванияВЗаказеСрезПоследних.НоменклатурнаяГруппа
	|ГДЕ
	|	&ПериодЗакупок * ВложенныйЗапрос.Продажи / &ДнейПродаж - ЕСТЬNULL(ТоварыВРозницеОстатки.КоличествоОстаток, 0) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказПоставщику.Ссылка
	|ИЗ
	|	Документ.ЗаказПоставщику КАК ЗаказПоставщику
	|ГДЕ
	|	НАЧАЛОПЕРИОДА(ЗаказПоставщику.Дата, ДЕНЬ) = НАЧАЛОПЕРИОДА(&ДатаЗаказа, ДЕНЬ)
	|	И ЗаказПоставщику.Контрагент = &Поставщик
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтделыВМагазинах.Подразделение КАК Подразделение,
	|	ОтделыВМагазинах.Ссылка КАК ЦФО,
	|	ЕСТЬNULL(ЗаказПоставщику.Ссылка, ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)) КАК Ссылка,
	|	ТаблицаЗаказов.Номенклатура КАК Номенклатура,
	|	ЕСТЬNULL(ТаблицаЗаказов.КоличествоЗаказ * ТаблицаЗаказов.КоэффифиентРекомендуемогоЗапаса, 0) КАК КоличествоЗаказ,
	|	ТаблицаЗаказов.КоэффифиентРекомендуемогоЗапаса КАК КоэффифиентРекомендуемогоЗапаса,
	|	ТаблицаЗаказов.КоэффициентВыравниванияВЗаказе КАК КоэффициентВыравниванияВЗаказе,
	|	ТаблицаЗаказов.КратностьУпаковки КАК КратностьУпаковки
	|ИЗ
	|	Справочник.ОтделыВМагазинах КАК ОтделыВМагазинах
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПоставщику КАК ЗаказПоставщику
	|		ПО ОтделыВМагазинах.Подразделение = ЗаказПоставщику.Подразделение
	|			И ОтделыВМагазинах.Ссылка = ЗаказПоставщику.ЦФО
	|			И (НАЧАЛОПЕРИОДА(ЗаказПоставщику.Дата, ДЕНЬ) = НАЧАЛОПЕРИОДА(&ДатаЗаказа, ДЕНЬ))
	|			И (ЗаказПоставщику.Контрагент = &Контрагент)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаЗаказов КАК ТаблицаЗаказов
	|		ПО ОтделыВМагазинах.Ссылка = ТаблицаЗаказов.ЦФО
	|			И (ТаблицаЗаказов.КоличествоЗаказ > 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОтделыВМагазинах.Наименование,
	|	ТаблицаЗаказов.Номенклатура.Наименование
	|ИТОГИ
	|	СУММА(КоличествоЗаказ),
	|	МАКСИМУМ(КоэффифиентРекомендуемогоЗапаса),
	|	МАКСИМУМ(КоэффициентВыравниванияВЗаказе),
	|	МАКСИМУМ(КратностьУпаковки)
	|ПО
	|	Подразделение,
	|	ЦФО,
	|	Ссылка,
	|	Номенклатура";
	
	#КонецОбласти
	
	запрос.УстановитьПараметр("Подразделение", 	Подразделение);
	запрос.УстановитьПараметр("Поставщик", 		Поставщик);
	запрос.УстановитьПараметр("Контрагент", 	Поставщик);
	
	
	запрос.УстановитьПараметр("ПериодЗакупок", 	ПериодЗакупок);
	запрос.УстановитьПараметр("ДнейПродаж", 	ДнейПродажи);
	запрос.УстановитьПараметр("ДатаЗаказа", 	ДатаЗаказа);
	
	запрос.УстановитьПараметр("ДатаНачала", 	ПериодПродаж.ДатаНачала);
	запрос.УстановитьПараметр("ДатаОкончания", 	ПериодПродаж.ДатаОкончания);
	
	результатЗапроса = запрос.ВыполнитьПакет();
	
	#Область ПроверкаВиртуальныхТаблицЗапроса
	запрос.Текст = "ВЫБРАТЬ * ИЗ ТаблицаЗаказов";
	#КонецОбласти 
	
	Если результатЗапроса[0].Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	НачатьТранзакцию();
	
	#Область Блокировка
	блокировка = Новый БлокировкаДанных;
	
	элементБлокировки = блокировка.Добавить();
	элементБлокировки.Область = "Документ.ЗаказПоставщику";
	элементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	элементБлокировки.ИсточникДанных = результатЗапроса[1];
	элементБлокировки.ИспользоватьИзИсточникаДанных("Ссылка", "Ссылка");
	
	#КонецОбласти

	
	выборкаПодразделения = результатЗапроса[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Подразделение");
	Пока выборкаПодразделения.Следующий() Цикл
		
		выборкаЦФО = выборкаПодразделения.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ЦФО");
		Пока выборкаЦФО.Следующий() Цикл
		
			выборкаСсылка = выборкаЦФО.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Ссылка");
			Пока выборкаСсылка.Следующий() Цикл
				
				Если Не выборкаСсылка.Ссылка.Пустая() Тогда
					
					документОбъект = выборкаСсылка.Ссылка.ПолучитьОбъект();
					
					Если выборкаСсылка.КоличествоЗаказ <= 0 Тогда
						// пометим на удаление документ, если ничего заказывать не надо .... уже
						документОбъект.УстановитьПометкуУдаления(Истина);
						Продолжить
					Иначе
						Если документОбъект.ПометкаУдаления Тогда
							документОбъект.УстановитьПометкуУдаления(Ложь);
						КонецЕсли;
						
						документОбъект.Запасы.Очистить();
						
					КонецЕсли;
					
				ИначеЕсли (выборкаСсылка.Ссылка.Пустая() И выборкаСсылка.КоличествоЗаказ > 0) Тогда
					
					документОбъект = Документы.ЗаказПоставщику.СоздатьДокумент();
					
					ЗаполнитьЗначенияСвойств(документОбъект, выборкаСсылка);
					
					документОбъект.Контрагент 	= Поставщик;
					документОбъект.Дата 		= ДатаЗаказа;
					документОбъект.ДатаДоставки = ДатаПоставки;
					
					
				Иначе
					Продолжить;
				КонецЕсли;
				
				Если Найти(документОбъект.Комментарий, "АВТОЗАКАЗ") = 0 Тогда
					документОбъект.Комментарий = "АВТОЗАКАЗ";
				КонецЕсли;
				
				выборкаНоменклатура = выборкаСсылка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Номенклатура");
				Пока выборкаНоменклатура.Следующий() Цикл
					
					Если выборкаНоменклатура.КоличествоЗаказ <= 0 Тогда
						Продолжить;
					КонецЕсли;
					
					целКоличество = Цел(выборкаНоменклатура.КоличествоЗаказ/выборкаНоменклатура.КратностьУпаковки);
					единицаКратности = ?(выборкаНоменклатура.КоличествоЗаказ/выборкаНоменклатура.КратностьУпаковки - целКоличество > выборкаНоменклатура.КоэффициентВыравниванияВЗаказе, 1,0);
					
					количествоВЗаказе = (целКоличество + единицаКратности) * выборкаНоменклатура.КратностьУпаковки;
					
					Если количествоВЗаказе = 0 Тогда
						Продолжить;
					КонецЕсли;
					
					новаяСтрока = документОбъект.Запасы.Добавить();
					
					ЗаполнитьЗначенияСвойств(новаяСтрока, выборкаНоменклатура);
					
					новаяСтрока.Количество = количествоВЗаказе;
				
				КонецЦикла; 
				
				документОбъект.Записать(РежимЗаписиДокумента.Проведение);
			
			КонецЦикла; 
		
		КонецЦикла; 
		
	КонецЦикла;
	
	ЗафиксироватьТранзакцию();
	
	
КонецПроцедуры

#КонецОбласти