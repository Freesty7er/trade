&НаКлиенте
Процедура ДействиеПодбор(ИмяТабличнойЧасти)
	
	Если ИмяТабличнойЧасти = "Запасы" Тогда
		Команда = "ПодборВТабличнуюЧастьЗапасы";
	КонецЕсли;
	
	СтруктураПараметровПодбора = Новый Структура();
	СтруктураПараметровПодбора.Вставить("Команда", Команда);
	
	СтруктураПараметровПодбора.Вставить("ОтборПоПоставщику", Ложь);
	ДобавитьТипЦенВПараметрыОтбора(СтруктураПараметровПодбора);

	
	ВременнаяДатаРасчетов = ?(НачалоДня(Объект.Дата) = НачалоДня(ТекущаяДата()), ТекущаяДата(), Объект.Дата);
	СтруктураПараметровПодбора.Вставить("ДатаРасчетов", ВременнаяДатаРасчетов);
	
	РаботаСДиалогамиКлиент.ОткрытьПодборНоменклатуры(ЭтаФорма, СтруктураПараметровПодбора);
		
КонецПроцедуры //

&НаСервере
Процедура ДобавитьТипЦенВПараметрыОтбора(СтруктураПараметровПодбора)
	
	//СтруктураПараметровПодбора.Вставить("Поставщик", Объект.Контрагент);
	
	СтруктураПараметровПодбора.Вставить("ТипЦен", Справочники.ТипыЦен.Закупка);
	
	
	Если ЗначениеЗаполнено(Объект.Подразделение) Тогда
		СтруктураПараметровПодбора.Вставить("Подразделение", Объект.Подразделение);
	КонецЕсли;
	
КонецПроцедуры

#Область ОбработчикиСобытий

&НаСервере
Процедура ПриСозданииНаСервере(отказ, стандартнаяОбработка)
	
	ПериодАнализа.ДатаНачала = Объект.ПериодАнализаДатаНачала;
	ПериодАнализа.ДатаОкончания = КонецДня(Объект.ПериодАнализаДатаОкончания);
	
	ПериодПланирования.ДатаНачала = Объект.ПериодПланированияДатаНачала;
	ПериодПланирования.ДатаОкончания = КонецДня(Объект.ПериодПланированияДатаОкончания);
	
	схемаКомпоновкиДанных = Документы.ЗаказПоставщику.ПолучитьМакет("СхемаКомпоновкиДанных");

	
	КомпоновщикНастроек.Инициализировать(
		Новый ИсточникДоступныхНастроекКомпоновкиДанных(ПоместитьВоВременноеХранилище(схемаКомпоновкиДанных, УникальныйИдентификатор))
	);
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		Запрос = Новый Запрос;
		
		#Область ТекстЗапроса
		
		запрос.Текст =
		"ВЫБРАТЬ
		|	ЗаказПоставщику.НастройкиКомпоновкиДанных КАК НастройкиКомпоновкиДанных
		|ИЗ
		|	Документ.ЗаказПоставщику КАК ЗаказПоставщику
		|ГДЕ
		|	ЗаказПоставщику.Ссылка = &Ссылка";
		
		#КонецОбласти
		
		Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
		
		результатЗапроса = запрос.Выполнить();
		
		выборка = результатЗапроса.Выбрать();
		Если выборка.Следующий() Тогда
			
			настройкиКомпоновкиДанных = выборка.НастройкиКомпоновкиДанных.Получить();
			
			Если ЗначениеЗаполнено(настройкиКомпоновкиДанных) Тогда
				КомпоновщикНастроек.ЗагрузитьНастройки(настройкиКомпоновкиДанных);
			Иначе
				КомпоновщикНастроек.ЗагрузитьНастройки(схемаКомпоновкиДанных.НастройкиПоУмолчанию);
			КонецЕсли;
			
		КонецЕсли;
		
	Иначе
		КомпоновщикНастроек.ЗагрузитьНастройки(схемаКомпоновкиДанных.НастройкиПоУмолчанию);
	КонецЕсли;
	
	КомпоновщикНастроек.Восстановить(СпособВосстановленияНастроекКомпоновкиДанных.ПроверятьДоступность);


КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Перем Команда;
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
		
		ВыбранноеЗначение.Свойство("Команда", Команда);

		Если Команда = "ПодборВТабличнуюЧастьЗапасы" Тогда
			ОбработкаПодбора("Запасы", ВыбранноеЗначение);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапасыНоменклатураПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.Запасы.ТекущиеДанные;
	
	СтруктураДанные = Новый Структура();
	СтруктураДанные.Вставить("Номенклатура", СтрокаТабличнойЧасти.Номенклатура);
	
	СтруктураДанные = ПолучитьДанныеНоменклатураПриИзменении(СтруктураДанные);
	
	СтрокаТабличнойЧасти.ЕдиницаИзмерения = СтруктураДанные.ЕдиницаИзмерения;
	СтрокаТабличнойЧасти.Количество = 1;

КонецПроцедуры

&НаКлиенте
Процедура ЗапасыКоличествоПриИзменении(Элемент)
	ЗапасыРасчетСтроки();
КонецПроцедуры

&НаКлиенте
Процедура ЗапасыЦенаПриИзменении(Элемент)
	ЗапасыРасчетСтроки();
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	
	// Заполнить по Контр, ном заказа, ДатаДоствки
	ЗаполнитьЗаказНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаПодбора(ИмяТабличнойЧасти, ЗначениеВыбора) Экспорт

	Перем Номенклатура;
	Перем Количество;
	
	// Получим параметры подбора из структуры подбора.
	ЗначениеВыбора.Свойство("Номенклатура",					Номенклатура);
	ЗначениеВыбора.Свойство("Количество",					Количество);

	// Ищем выбранную позицию в таблице подобранной номенклатуры.
	// Если найдем - увеличим количество; не найдем - добавим новую строку.
	СтруктураОтбора = Новый Структура();
	СтруктураОтбора.Вставить("Номенклатура", Номенклатура);
	
	
	МассивСтрок = Объект[ИмяТабличнойЧасти].НайтиСтроки(СтруктураОтбора);
	Если МассивСтрок.Количество() = 0 Тогда
		СтрокаТабличнойЧасти = Неопределено;
	Иначе
		СтрокаТабличнойЧасти = МассивСтрок[0];
	КонецЕсли;
	
	Если СтрокаТабличнойЧасти <> Неопределено Тогда
		// Нашли, увеличиваем количество в первой найденной строке.
		СтрокаТабличнойЧасти.Количество = СтрокаТабличнойЧасти.Количество + Количество;
		
		//РаботаСДиалогамиКлиент.РассчитатьСуммуТабЧасти(СтрокаТабличнойЧасти);
	Иначе
		// Не нашли - добавляем новую строку.
		СтрокаТабличнойЧасти = Объект[ИмяТабличнойЧасти].Добавить();
		СтрокаТабличнойЧасти.Номенклатура     			= Номенклатура;
		СтрокаТабличнойЧасти.Количество       			= Количество;
		
	КонецЕсли;
	
	СтруктураДанные = Новый Структура();
	СтруктураДанные.Вставить("Номенклатура", СтрокаТабличнойЧасти.Номенклатура);
	//СтруктураДанные.Вставить("ТипЦен", ЭтаФорма.Объект.ТипЦен);
	СтруктураДанные.Вставить("Подразделение", ЭтаФорма.Объект.Подразделение);
	СтруктураДанные.Вставить("ДатаСреза", ЭтаФорма.Объект.Дата);
	
	СтруктураДанные = ПолучитьДанныеНоменклатураПриИзменении(СтруктураДанные);
	
	СтрокаТабличнойЧасти.Цена = СтруктураДанные.Цена;

	СтрокаТабличнойЧасти.Сумма = СтрокаТабличнойЧасти.Количество * СтрокаТабличнойЧасти.Цена;
	
КонецПроцедуры //

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПодборЗапасы(Команда)
	
	ДействиеПодбор("Запасы");

КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаполнитьАвтозаказ(Команда)
	
	Состояние(НСтр("ru = 'Выполняется обновление списка товаров...'"));
	ЗаполнитьАвтозаказНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура КомандаЗаполнитьАнализНаСервере()
	
	запрос = Новый Запрос;
	
	#Область ТекстЗапроса
	
	запрос.Текст =
	"ВЫБРАТЬ
	|	СгруппированныеПродажи.Подразделение КАК Подразделение,
	|	СгруппированныеПродажи.Номенклатура КАК Номенклатура,
	|	СгруппированныеПродажи.КаналСбыта КАК КаналСбыта,
	|	СгруппированныеПродажи.ТипСтандартаПрисутствия КАК ТипСтандартаПрисутствия,
	|	СгруппированныеПродажи.НоменклатураРодительПоставщик КАК НоменклатураРодительПоставщик,
	|	ВЫБОР
	|		КОГДА СгруппированныеПродажи.Дн1_ДнейПродажи = 0
	|			ТОГДА 0
	|		ИНАЧЕ СгруппированныеПродажи.Дн1 / СгруппированныеПродажи.Дн1_ДнейПродажи
	|	КОНЕЦ КАК Дн1,
	|	ВЫБОР
	|		КОГДА СгруппированныеПродажи.Дн2_ДнейПродажи = 0
	|			ТОГДА 0
	|		ИНАЧЕ СгруппированныеПродажи.Дн2 / СгруппированныеПродажи.Дн2_ДнейПродажи
	|	КОНЕЦ КАК Дн2,
	|	ВЫБОР
	|		КОГДА СгруппированныеПродажи.Дн3_ДнейПродажи = 0
	|			ТОГДА 0
	|		ИНАЧЕ СгруппированныеПродажи.Дн3 / СгруппированныеПродажи.Дн3_ДнейПродажи
	|	КОНЕЦ КАК Дн3,
	|	ВЫБОР
	|		КОГДА СгруппированныеПродажи.Дн4_ДнейПродажи = 0
	|			ТОГДА 0
	|		ИНАЧЕ СгруппированныеПродажи.Дн4 / СгруппированныеПродажи.Дн4_ДнейПродажи
	|	КОНЕЦ КАК Дн4,
	|	ВЫБОР
	|		КОГДА СгруппированныеПродажи.Дн5_ДнейПродажи = 0
	|			ТОГДА 0
	|		ИНАЧЕ СгруппированныеПродажи.Дн5 / СгруппированныеПродажи.Дн5_ДнейПродажи
	|	КОНЕЦ КАК Дн5,
	|	ВЫБОР
	|		КОГДА СгруппированныеПродажи.Дн6_ДнейПродажи = 0
	|			ТОГДА 0
	|		ИНАЧЕ СгруппированныеПродажи.Дн6 / СгруппированныеПродажи.Дн6_ДнейПродажи
	|	КОНЕЦ КАК Дн6,
	|	ВЫБОР
	|		КОГДА СгруппированныеПродажи.Дн7_ДнейПродажи = 0
	|			ТОГДА 0
	|		ИНАЧЕ СгруппированныеПродажи.Дн7 / СгруппированныеПродажи.Дн7_ДнейПродажи
	|	КОНЕЦ КАК Дн7,
	|	0 КАК Дн1_Дефицит,
	|	0 КАК Дн2_Дефицит,
	|	0 КАК Дн3_Дефицит,
	|	0 КАК Дн4_Дефицит,
	|	0 КАК Дн5_Дефицит,
	|	0 КАК Дн6_Дефицит,
	|	0 КАК Дн7_Дефицит
	|ПОМЕСТИТЬ ВТ_ИсходныеДанные
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПродажиПоНеделям.Подразделение КАК Подразделение,
	|		ПродажиПоНеделям.Номенклатура КАК Номенклатура,
	|		ПродажиПоНеделям.КаналСбыта КАК КаналСбыта,
	|		ПродажиПоНеделям.НоменклатураРодительПоставщик КАК НоменклатураРодительПоставщик,
	|		СУММА(ПродажиПоНеделям.Дн1) КАК Дн1,
	|		СУММА(ПродажиПоНеделям.Дн2) КАК Дн2,
	|		СУММА(ПродажиПоНеделям.Дн3) КАК Дн3,
	|		СУММА(ПродажиПоНеделям.Дн4) КАК Дн4,
	|		СУММА(ПродажиПоНеделям.Дн5) КАК Дн5,
	|		СУММА(ПродажиПоНеделям.Дн6) КАК Дн6,
	|		СУММА(ПродажиПоНеделям.Дн7) КАК Дн7,
	|		СУММА(ВЫБОР
	|				КОГДА ПродажиПоНеделям.Дн1 = 0
	|					ТОГДА 0
	|				ИНАЧЕ 1
	|			КОНЕЦ) КАК Дн1_ДнейПродажи,
	|		СУММА(ВЫБОР
	|				КОГДА ПродажиПоНеделям.Дн2 = 0
	|					ТОГДА 0
	|				ИНАЧЕ 1
	|			КОНЕЦ) КАК Дн2_ДнейПродажи,
	|		СУММА(ВЫБОР
	|				КОГДА ПродажиПоНеделям.Дн3 = 0
	|					ТОГДА 0
	|				ИНАЧЕ 1
	|			КОНЕЦ) КАК Дн3_ДнейПродажи,
	|		СУММА(ВЫБОР
	|				КОГДА ПродажиПоНеделям.Дн4 = 0
	|					ТОГДА 0
	|				ИНАЧЕ 1
	|			КОНЕЦ) КАК Дн4_ДнейПродажи,
	|		СУММА(ВЫБОР
	|				КОГДА ПродажиПоНеделям.Дн5 = 0
	|					ТОГДА 0
	|				ИНАЧЕ 1
	|			КОНЕЦ) КАК Дн5_ДнейПродажи,
	|		СУММА(ВЫБОР
	|				КОГДА ПродажиПоНеделям.Дн6 = 0
	|					ТОГДА 0
	|				ИНАЧЕ 1
	|			КОНЕЦ) КАК Дн6_ДнейПродажи,
	|		СУММА(ВЫБОР
	|				КОГДА ПродажиПоНеделям.Дн7 = 0
	|					ТОГДА 0
	|				ИНАЧЕ 1
	|			КОНЕЦ) КАК Дн7_ДнейПродажи,
	|		ПродажиПоНеделям.ТипСтандартаПрисутствия КАК ТипСтандартаПрисутствия
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ПродажиОбороты.Подразделение КАК Подразделение,
	|			ПродажиОбороты.Номенклатура КАК Номенклатура,
	|			ПродажиОбороты.Контрагент.КД_КаналСбыта КАК КаналСбыта,
	|			ПродажиОбороты.Контрагент.КД_ТипСтандартаПрисутствия КАК ТипСтандартаПрисутствия,
	|			ПродажиОбороты.Номенклатура.Родитель.Поставщик КАК НоменклатураРодительПоставщик,
	|			СУММА(ВЫБОР
	|					КОГДА ДЕНЬНЕДЕЛИ(ПродажиОбороты.ПериодДень) = 1
	|						ТОГДА ПродажиОбороты.КоличествоОборот
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК Дн1,
	|			СУММА(ВЫБОР
	|					КОГДА ДЕНЬНЕДЕЛИ(ПродажиОбороты.ПериодДень) = 2
	|						ТОГДА ПродажиОбороты.КоличествоОборот
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК Дн2,
	|			СУММА(ВЫБОР
	|					КОГДА ДЕНЬНЕДЕЛИ(ПродажиОбороты.ПериодДень) = 3
	|						ТОГДА ПродажиОбороты.КоличествоОборот
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК Дн3,
	|			СУММА(ВЫБОР
	|					КОГДА ДЕНЬНЕДЕЛИ(ПродажиОбороты.ПериодДень) = 4
	|						ТОГДА ПродажиОбороты.КоличествоОборот
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК Дн4,
	|			СУММА(ВЫБОР
	|					КОГДА ДЕНЬНЕДЕЛИ(ПродажиОбороты.ПериодДень) = 5
	|						ТОГДА ПродажиОбороты.КоличествоОборот
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК Дн5,
	|			СУММА(ВЫБОР
	|					КОГДА ПродажиОбороты.Контрагент.КД_КаналСбыта = &КаналСбытаФайно
	|							И ДЕНЬНЕДЕЛИ(ПродажиОбороты.ПериодДень) = 7
	|						ТОГДА ПродажиОбороты.КоличествоОборот / 2
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ДЕНЬНЕДЕЛИ(ПродажиОбороты.ПериодДень) = 6
	|								ТОГДА ПродажиОбороты.КоличествоОборот
	|							ИНАЧЕ 0
	|						КОНЕЦ
	|				КОНЕЦ) КАК Дн6,
	|			СУММА(ВЫБОР
	|					КОГДА ПродажиОбороты.Контрагент.КД_КаналСбыта = &КаналСбытаФайно
	|							И ДЕНЬНЕДЕЛИ(ПродажиОбороты.ПериодДень) = 7
	|						ТОГДА ПродажиОбороты.КоличествоОборот / 2
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ДЕНЬНЕДЕЛИ(ПродажиОбороты.ПериодДень) = 7
	|								ТОГДА ПродажиОбороты.КоличествоОборот
	|							ИНАЧЕ 0
	|						КОНЕЦ
	|				КОНЕЦ) КАК Дн7,
	|			НЕДЕЛЯ(ПродажиОбороты.ПериодДень) КАК НомерНедели
	|		ИЗ
	|			РегистрНакопления.Продажи.Обороты(
	|					&ДатаНачалаАнализа,
	|					&ДатаОкончанияАнализа,
	|					Авто,
	|					Подразделение = &Подразделение
	|						И Номенклатура.Родитель.Поставщик = &Поставщик) КАК ПродажиОбороты
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ПродажиОбороты.Подразделение,
	|			ПродажиОбороты.Номенклатура,
	|			ПродажиОбороты.Контрагент.КД_КаналСбыта,
	|			ПродажиОбороты.Номенклатура.Родитель.Поставщик,
	|			НЕДЕЛЯ(ПродажиОбороты.ПериодДень),
	|			ПродажиОбороты.Контрагент.КД_ТипСтандартаПрисутствия) КАК ПродажиПоНеделям
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ПродажиПоНеделям.Подразделение,
	|		ПродажиПоНеделям.КаналСбыта,
	|		ПродажиПоНеделям.НоменклатураРодительПоставщик,
	|		ПродажиПоНеделям.Номенклатура,
	|		ПродажиПоНеделям.ТипСтандартаПрисутствия) КАК СгруппированныеПродажи
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СгруппированныеДефициты.Подразделение,
	|	СгруппированныеДефициты.Номенклатура,
	|	СгруппированныеДефициты.КаналСбыта,
	|	СгруппированныеДефициты.ТипСтандартаПрисутствия,
	|	СгруппированныеДефициты.НоменклатураРодительПоставщик,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	ВЫБОР
	|		КОГДА СгруппированныеДефициты.Дн1_ДнейДефицита = 0
	|			ТОГДА 0
	|		ИНАЧЕ СгруппированныеДефициты.Дн1_Дефицит / СгруппированныеДефициты.Дн1_ДнейДефицита
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СгруппированныеДефициты.Дн2_ДнейДефицита = 0
	|			ТОГДА 0
	|		ИНАЧЕ СгруппированныеДефициты.Дн2_Дефицит / СгруппированныеДефициты.Дн2_ДнейДефицита
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СгруппированныеДефициты.Дн3_ДнейДефицита = 0
	|			ТОГДА 0
	|		ИНАЧЕ СгруппированныеДефициты.Дн3_Дефицит / СгруппированныеДефициты.Дн3_ДнейДефицита
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СгруппированныеДефициты.Дн4_ДнейДефицита = 0
	|			ТОГДА 0
	|		ИНАЧЕ СгруппированныеДефициты.Дн4_Дефицит / СгруппированныеДефициты.Дн4_ДнейДефицита
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СгруппированныеДефициты.Дн5_ДнейДефицита = 0
	|			ТОГДА 0
	|		ИНАЧЕ СгруппированныеДефициты.Дн5_Дефицит / СгруппированныеДефициты.Дн5_ДнейДефицита
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СгруппированныеДефициты.Дн6_ДнейДефицита = 0
	|			ТОГДА 0
	|		ИНАЧЕ СгруппированныеДефициты.Дн6_Дефицит / СгруппированныеДефициты.Дн6_ДнейДефицита
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СгруппированныеДефициты.Дн7_ДнейДефицита = 0
	|			ТОГДА 0
	|		ИНАЧЕ СгруппированныеДефициты.Дн7_Дефицит / СгруппированныеДефициты.Дн7_ДнейДефицита
	|	КОНЕЦ
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДефицитыПоНеделям.Подразделение КАК Подразделение,
	|		ДефицитыПоНеделям.Номенклатура КАК Номенклатура,
	|		ДефицитыПоНеделям.КаналСбыта КАК КаналСбыта,
	|		ДефицитыПоНеделям.НоменклатураРодительПоставщик КАК НоменклатураРодительПоставщик,
	|		СУММА(ДефицитыПоНеделям.Дн1_Дефицит) КАК Дн1_Дефицит,
	|		СУММА(ДефицитыПоНеделям.Дн2_Дефицит) КАК Дн2_Дефицит,
	|		СУММА(ДефицитыПоНеделям.Дн3_Дефицит) КАК Дн3_Дефицит,
	|		СУММА(ДефицитыПоНеделям.Дн4_Дефицит) КАК Дн4_Дефицит,
	|		СУММА(ДефицитыПоНеделям.Дн5_Дефицит) КАК Дн5_Дефицит,
	|		СУММА(ДефицитыПоНеделям.Дн6_Дефицит) КАК Дн6_Дефицит,
	|		СУММА(ДефицитыПоНеделям.Дн7_Дефицит) КАК Дн7_Дефицит,
	|		СУММА(ВЫБОР
	|				КОГДА ДефицитыПоНеделям.Дн1_Дефицит = 0
	|					ТОГДА 0
	|				ИНАЧЕ 1
	|			КОНЕЦ) КАК Дн1_ДнейДефицита,
	|		СУММА(ВЫБОР
	|				КОГДА ДефицитыПоНеделям.Дн2_Дефицит = 0
	|					ТОГДА 0
	|				ИНАЧЕ 1
	|			КОНЕЦ) КАК Дн2_ДнейДефицита,
	|		СУММА(ВЫБОР
	|				КОГДА ДефицитыПоНеделям.Дн3_Дефицит = 0
	|					ТОГДА 0
	|				ИНАЧЕ 1
	|			КОНЕЦ) КАК Дн3_ДнейДефицита,
	|		СУММА(ВЫБОР
	|				КОГДА ДефицитыПоНеделям.Дн4_Дефицит = 0
	|					ТОГДА 0
	|				ИНАЧЕ 1
	|			КОНЕЦ) КАК Дн4_ДнейДефицита,
	|		СУММА(ВЫБОР
	|				КОГДА ДефицитыПоНеделям.Дн5_Дефицит = 0
	|					ТОГДА 0
	|				ИНАЧЕ 1
	|			КОНЕЦ) КАК Дн5_ДнейДефицита,
	|		СУММА(ВЫБОР
	|				КОГДА ДефицитыПоНеделям.Дн6_Дефицит = 0
	|					ТОГДА 0
	|				ИНАЧЕ 1
	|			КОНЕЦ) КАК Дн6_ДнейДефицита,
	|		СУММА(ВЫБОР
	|				КОГДА ДефицитыПоНеделям.Дн7_Дефицит = 0
	|					ТОГДА 0
	|				ИНАЧЕ 1
	|			КОНЕЦ) КАК Дн7_ДнейДефицита,
	|		ДефицитыПоНеделям.ТипСтандартаПрисутствия КАК ТипСтандартаПрисутствия
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ЗаказыПокупателейОбороты.Подразделение КАК Подразделение,
	|			ЗаказыПокупателейОбороты.Номенклатура КАК Номенклатура,
	|			ЗаказыПокупателейОбороты.Контрагент.КД_КаналСбыта КАК КаналСбыта,
	|			ЗаказыПокупателейОбороты.Контрагент.КД_ТипСтандартаПрисутствия КАК ТипСтандартаПрисутствия,
	|			ЗаказыПокупателейОбороты.Номенклатура.Родитель.Поставщик КАК НоменклатураРодительПоставщик,
	|			НЕДЕЛЯ(ЗаказыПокупателейОбороты.Период) КАК НомерНедели,
	|			СУММА(ВЫБОР
	|					КОГДА ДЕНЬНЕДЕЛИ(ЗаказыПокупателейОбороты.Период) = 1
	|						ТОГДА ВЫБОР
	|								КОГДА ЗаказыПокупателейОбороты.ЗаказаноОборот > ЗаказыПокупателейОбороты.ОтгруженоОборот
	|									ТОГДА ЗаказыПокупателейОбороты.ЗаказаноОборот - ЗаказыПокупателейОбороты.ОтгруженоОборот
	|								ИНАЧЕ 0
	|							КОНЕЦ
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК Дн1_Дефицит,
	|			СУММА(ВЫБОР
	|					КОГДА ДЕНЬНЕДЕЛИ(ЗаказыПокупателейОбороты.Период) = 2
	|						ТОГДА ВЫБОР
	|								КОГДА ЗаказыПокупателейОбороты.ЗаказаноОборот > ЗаказыПокупателейОбороты.ОтгруженоОборот
	|									ТОГДА ЗаказыПокупателейОбороты.ЗаказаноОборот - ЗаказыПокупателейОбороты.ОтгруженоОборот
	|								ИНАЧЕ 0
	|							КОНЕЦ
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК Дн2_Дефицит,
	|			СУММА(ВЫБОР
	|					КОГДА ДЕНЬНЕДЕЛИ(ЗаказыПокупателейОбороты.Период) = 3
	|						ТОГДА ВЫБОР
	|								КОГДА ЗаказыПокупателейОбороты.ЗаказаноОборот > ЗаказыПокупателейОбороты.ОтгруженоОборот
	|									ТОГДА ЗаказыПокупателейОбороты.ЗаказаноОборот - ЗаказыПокупателейОбороты.ОтгруженоОборот
	|								ИНАЧЕ 0
	|							КОНЕЦ
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК Дн3_Дефицит,
	|			СУММА(ВЫБОР
	|					КОГДА ДЕНЬНЕДЕЛИ(ЗаказыПокупателейОбороты.Период) = 4
	|						ТОГДА ВЫБОР
	|								КОГДА ЗаказыПокупателейОбороты.ЗаказаноОборот > ЗаказыПокупателейОбороты.ОтгруженоОборот
	|									ТОГДА ЗаказыПокупателейОбороты.ЗаказаноОборот - ЗаказыПокупателейОбороты.ОтгруженоОборот
	|								ИНАЧЕ 0
	|							КОНЕЦ
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК Дн4_Дефицит,
	|			СУММА(ВЫБОР
	|					КОГДА ДЕНЬНЕДЕЛИ(ЗаказыПокупателейОбороты.Период) = 5
	|						ТОГДА ВЫБОР
	|								КОГДА ЗаказыПокупателейОбороты.ЗаказаноОборот > ЗаказыПокупателейОбороты.ОтгруженоОборот
	|									ТОГДА ЗаказыПокупателейОбороты.ЗаказаноОборот - ЗаказыПокупателейОбороты.ОтгруженоОборот
	|								ИНАЧЕ 0
	|							КОНЕЦ
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК Дн5_Дефицит,
	|			СУММА(ВЫБОР
	|					КОГДА ДЕНЬНЕДЕЛИ(ЗаказыПокупателейОбороты.Период) = 6
	|						ТОГДА ВЫБОР
	|								КОГДА ЗаказыПокупателейОбороты.ЗаказаноОборот > ЗаказыПокупателейОбороты.ОтгруженоОборот
	|									ТОГДА ЗаказыПокупателейОбороты.ЗаказаноОборот - ЗаказыПокупателейОбороты.ОтгруженоОборот
	|								ИНАЧЕ 0
	|							КОНЕЦ
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК Дн6_Дефицит,
	|			СУММА(ВЫБОР
	|					КОГДА ДЕНЬНЕДЕЛИ(ЗаказыПокупателейОбороты.Период) = 7
	|						ТОГДА ВЫБОР
	|								КОГДА ЗаказыПокупателейОбороты.ЗаказаноОборот > ЗаказыПокупателейОбороты.ОтгруженоОборот
	|									ТОГДА ЗаказыПокупателейОбороты.ЗаказаноОборот - ЗаказыПокупателейОбороты.ОтгруженоОборот
	|								ИНАЧЕ 0
	|							КОНЕЦ
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК Дн7_Дефицит
	|		ИЗ
	|			РегистрНакопления.ЗаказыПокупателей.Обороты(
	|					&ДатаНачалаАнализа,
	|					&ДатаОкончанияАнализа,
	|					День,
	|					Подразделение = &Подразделение
	|						И Номенклатура.Родитель.Поставщик = &Поставщик) КАК ЗаказыПокупателейОбороты
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ЗаказыПокупателейОбороты.Подразделение,
	|			ЗаказыПокупателейОбороты.Номенклатура,
	|			ЗаказыПокупателейОбороты.Контрагент.КД_КаналСбыта,
	|			ЗаказыПокупателейОбороты.Контрагент.КД_ТипСтандартаПрисутствия,
	|			ЗаказыПокупателейОбороты.Номенклатура.Родитель.Поставщик,
	|			НЕДЕЛЯ(ЗаказыПокупателейОбороты.Период)) КАК ДефицитыПоНеделям
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ДефицитыПоНеделям.Подразделение,
	|		ДефицитыПоНеделям.Номенклатура,
	|		ДефицитыПоНеделям.КаналСбыта,
	|		ДефицитыПоНеделям.НоменклатураРодительПоставщик,
	|		ДефицитыПоНеделям.ТипСтандартаПрисутствия) КАК СгруппированныеДефициты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ИсходныеДанные.Подразделение,
	|	ВТ_ИсходныеДанные.Номенклатура,
	|	ВТ_ИсходныеДанные.КаналСбыта,
	|	ВТ_ИсходныеДанные.ТипСтандартаПрисутствия,
	|	ВТ_ИсходныеДанные.НоменклатураРодительПоставщик,
	|	СУММА(ВТ_ИсходныеДанные.Дн1) КАК Дн1,
	|	СУММА(ВТ_ИсходныеДанные.Дн2) КАК Дн2,
	|	СУММА(ВТ_ИсходныеДанные.Дн3) КАК Дн3,
	|	СУММА(ВТ_ИсходныеДанные.Дн4) КАК Дн4,
	|	СУММА(ВТ_ИсходныеДанные.Дн5) КАК Дн5,
	|	СУММА(ВТ_ИсходныеДанные.Дн6) КАК Дн6,
	|	СУММА(ВТ_ИсходныеДанные.Дн7) КАК Дн7,
	|	СУММА(ВТ_ИсходныеДанные.Дн1_Дефицит) КАК Дн1_Дефицит,
	|	СУММА(ВТ_ИсходныеДанные.Дн2_Дефицит) КАК Дн2_Дефицит,
	|	СУММА(ВТ_ИсходныеДанные.Дн3_Дефицит) КАК Дн3_Дефицит,
	|	СУММА(ВТ_ИсходныеДанные.Дн4_Дефицит) КАК Дн4_Дефицит,
	|	СУММА(ВТ_ИсходныеДанные.Дн5_Дефицит) КАК Дн5_Дефицит,
	|	СУММА(ВТ_ИсходныеДанные.Дн6_Дефицит) КАК Дн6_Дефицит,
	|	СУММА(ВТ_ИсходныеДанные.Дн7_Дефицит) КАК Дн7_Дефицит
	|ИЗ
	|	ВТ_ИсходныеДанные КАК ВТ_ИсходныеДанные
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ИсходныеДанные.Подразделение,
	|	ВТ_ИсходныеДанные.Номенклатура,
	|	ВТ_ИсходныеДанные.КаналСбыта,
	|	ВТ_ИсходныеДанные.ТипСтандартаПрисутствия,
	|	ВТ_ИсходныеДанные.НоменклатураРодительПоставщик
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТ_ИсходныеДанные.Номенклатура.Наименование,
	|	ВТ_ИсходныеДанные.КаналСбыта.Наименование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ИсходныеДанные.Номенклатура.КД_Группа.Родитель КАК ГруппаПродукта,
	|	ВТ_ИсходныеДанные.Номенклатура.КД_Вид КАК ВидПродукта,
	|	&Коэффициент
	|ИЗ
	|	ВТ_ИсходныеДанные КАК ВТ_ИсходныеДанные";
		
	#КонецОбласти
	
	запрос.УстановитьПараметр("ДатаНачалаАнализа", ПериодАнализа.ДатаНачала);
	запрос.УстановитьПараметр("ДатаОкончанияАнализа", ПериодАнализа.ДатаОкончания);
	запрос.УстановитьПараметр("Подразделение", Объект.Подразделение);
	запрос.УстановитьПараметр("Поставщик", Объект.НомерЗаказа.Поставщик);
	запрос.УстановитьПараметр("КаналСбытаФайно", Объект.КаналСбытаФайно);
	запрос.УстановитьПараметр("Коэффициент", Объект.КоэффициентУвеличенияПрогнозаСреднихПродаж);
	
	результатЗапроса = запрос.ВыполнитьПакет();
	
	Объект.АнализПродаж.Загрузить(результатЗапроса[1].Выгрузить());
		
	Объект.КоэффициентыУвеличенияПрогнозаСреднихПродаж.Загрузить(результатЗапроса[2].Выгрузить());
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаполнитьАнализ(Команда)
	КомандаЗаполнитьАнализНаСервере();
КонецПроцедуры

&НаСервере
Процедура КомандаЗаполнитьПланированиеНаСервере()
	
	запрос = Новый Запрос;
	
	#Область ТекстЗапроса
	
	запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаАнализа.Номенклатура,
	|	ТаблицаАнализа.ПрогнозПродажНаДатуПоставки,
	|	ТаблицаАнализа.ПрогнозПродажДоКонцаПериодаПланирования
	|ПОМЕСТИТЬ ВТ_ТаблицаАнализа
	|ИЗ
	|	&ТаблицаАнализа КАК ТаблицаАнализа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетЗаказа.Номенклатура,
	|	РасчетЗаказа.ОстатокНаДатуЗаказа,
	|	РасчетЗаказа.ПрогнозПродажНаДатуПоставки,
	|	РасчетЗаказа.ОстатокПрогнозНаДатуПоставки,
	|	РасчетЗаказа.ПрогнозПродажДоКонцаПериодаПланирования,
	|	РасчетЗаказа.ПрогнозПродажДоКонцаПериодаПланирования - РасчетЗаказа.ОстатокПрогнозНаДатуПоставки КАК РекомендуемыйЗаказ
	|ИЗ
	|	(ВЫБРАТЬ
	|		НоменклатураСсылка.Ссылка КАК Номенклатура,
	|		ЕСТЬNULL(ПартииТоваровНаСкладахОстатки.КоличествоОстаток, 0) КАК ОстатокНаДатуЗаказа,
	|		АнализПродаж.ПрогнозПродажНаДатуПоставки КАК ПрогнозПродажНаДатуПоставки,
	|		ВЫБОР
	|			КОГДА ЕСТЬNULL(ПартииТоваровНаСкладахОстатки.КоличествоОстаток, 0) - АнализПродаж.ПрогнозПродажНаДатуПоставки < 0
	|				ТОГДА 0
	|			ИНАЧЕ ЕСТЬNULL(ПартииТоваровНаСкладахОстатки.КоличествоОстаток, 0) - АнализПродаж.ПрогнозПродажНаДатуПоставки
	|		КОНЕЦ КАК ОстатокПрогнозНаДатуПоставки,
	|		АнализПродаж.ПрогнозПродажДоКонцаПериодаПланирования КАК ПрогнозПродажДоКонцаПериодаПланирования
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ВТ_ТаблицаАнализа.Номенклатура КАК Номенклатура,
	|			СУММА(ВТ_ТаблицаАнализа.ПрогнозПродажНаДатуПоставки) КАК ПрогнозПродажНаДатуПоставки,
	|			СУММА(ВТ_ТаблицаАнализа.ПрогнозПродажДоКонцаПериодаПланирования) КАК ПрогнозПродажДоКонцаПериодаПланирования
	|		ИЗ
	|			ВТ_ТаблицаАнализа КАК ВТ_ТаблицаАнализа
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ВТ_ТаблицаАнализа.Номенклатура) КАК АнализПродаж
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииТоваровНаСкладах.Остатки(
	|					&ДатаОстатков,
	|					Подразделение = &Подразделение
	|						И Номенклатура.Родитель.Поставщик = &Поставщик
	|						И Склад <> &СкладВозвратов) КАК ПартииТоваровНаСкладахОстатки
	|			ПО АнализПродаж.Номенклатура = ПартииТоваровНаСкладахОстатки.Номенклатура
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСсылка
	|			ПО АнализПродаж.Номенклатура = НоменклатураСсылка.Ссылка) КАК РасчетЗаказа
	|
	|УПОРЯДОЧИТЬ ПО
	|	РасчетЗаказа.Номенклатура.Наименование";
		
	#КонецОбласти 
	
	запрос.УстановитьПараметр("ТаблицаАнализа", Объект.АнализПродаж.Выгрузить(, "Номенклатура, ПрогнозПродажНаДатуПоставки, ПрогнозПродажДоКонцаПериодаПланирования"));
	запрос.УстановитьПараметр("Подразделение", Объект.Подразделение);
	запрос.УстановитьПараметр("Поставщик", Объект.НомерЗаказа.Поставщик);
	запрос.УстановитьПараметр("СкладВозвратов", Константы.СкладВозвратов.Получить());
	запрос.УстановитьПараметр("ДатаОстатков", КонецДня(Объект.Дата));
	
	Объект.Планирование.Загрузить(запрос.Выполнить().Выгрузить());
	
	запрос = Новый Запрос;
	
	#Область ТекстЗапроса
	
	запрос.Текст =
	"ВЫБРАТЬ
	|	ТалицаПланирование.Номенклатура,
	|	ТалицаПланирование.РекомендуемыйЗаказ
	|ПОМЕСТИТЬ ВТ_ТаблицаПланирование
	|ИЗ
	|	&ТалицаПланирование КАК ТалицаПланирование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Количество
	|ИЗ
	|	(ВЫБРАТЬ
	|		НоменклатураСсылка.Ссылка КАК Номенклатура,
	|		ВЫБОР
	|			КОГДА НоменклатураСсылка.БПАГКратностьЗаводскойУпаковки = 0
	|					ИЛИ НоменклатураСсылка.БПАГКратностьЗаводскойУпаковки = NULL
	|				ТОГДА ВЫРАЗИТЬ(ВТ_ТаблицаПланирование.РекомендуемыйЗаказ КАК ЧИСЛО(15, 0))
	|			ИНАЧЕ (ВЫРАЗИТЬ(ВТ_ТаблицаПланирование.РекомендуемыйЗаказ / НоменклатураСсылка.БПАГКратностьЗаводскойУпаковки КАК ЧИСЛО(15, 0))) * НоменклатураСсылка.БПАГКратностьЗаводскойУпаковки
	|		КОНЕЦ КАК Количество
	|	ИЗ
	|		ВТ_ТаблицаПланирование КАК ВТ_ТаблицаПланирование
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСсылка
	|			ПО ВТ_ТаблицаПланирование.Номенклатура = НоменклатураСсылка.Ссылка) КАК ВложенныйЗапрос
	|ГДЕ
	|	ВложенныйЗапрос.Количество <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВложенныйЗапрос.Номенклатура.Наименование";
		
	#КонецОбласти
	
	запрос.УстановитьПараметр("ТалицаПланирование", Объект.Планирование.Выгрузить(, "Номенклатура, РекомендуемыйЗаказ"));
	
	Объект.Запасы.Загрузить(запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаполнитьПланирование(Команда)
	КомандаЗаполнитьПланированиеНаСервере();
КонецПроцедуры

#КонецОбласти

#Область ПрочиеПроцедурыИФункции

&НаКлиенте
Процедура ЗапасыРасчетСтроки(СтрокаТабличнойЧасти = Неопределено)
	
	Если СтрокаТабличнойЧасти = Неопределено Тогда
		СтрокаТабличнойЧасти = Элементы.Запасы.ТекущиеДанные;
	КонецЕсли;
	
	СтрокаТабличнойЧасти = Элементы.Запасы.ТекущиеДанные;
	СтрокаТабличнойЧасти.Сумма = СтрокаТабличнойЧасти.Количество * СтрокаТабличнойЧасти.Цена;
	
КонецПроцедуры // ЗапасыКоличествоПриИзменении()

&НаСервере
Процедура ЗаполнитьЗаказНаСервере()
	
	Если Объект.НомерЗаказа.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	запрос = Новый Запрос;
	
	#Область ТекстЗапроса
	
	запрос.Текст= 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗаказыПокупателей.Номенклатура КАК Номенклатура,
	|	ЗаказыПокупателей.Количество КАК Количество,
	|	ЗаказыПокупателей.Номенклатура.ЕдиницаИзмерения КАК Единица,
	|	1 КАК Коэффициент,
	|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) КАК Цена,
	|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) * ЗаказыПокупателей.Количество КАК Сумма
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|		СУММА(ВложенныйЗапрос.Количество) КАК Количество
	|	ИЗ
	|		(ВЫБРАТЬ
	|			КпкЗаявкаЗапасы.Номенклатура КАК Номенклатура,
	|			КпкЗаявкаЗапасы.Количество КАК Количество
	|		ИЗ
	|			Документ.КпкЗаявка.Запасы КАК КпкЗаявкаЗапасы
	|		ГДЕ
	|			КпкЗаявкаЗапасы.Ссылка.НомерЗаказа = &НомерЗаказа
	|			И КпкЗаявкаЗапасы.Ссылка.ДатаДоставки = &ДатаДоставки
	|			И КпкЗаявкаЗапасы.Ссылка.Подразделение = &Подразделение
	|			И КпкЗаявкаЗапасы.Ссылка.Проведен = ИСТИНА
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ЗаказПокупателяЗапасы.Номенклатура,
	|			ЗаказПокупателяЗапасы.Количество
	|		ИЗ
	|			Документ.ЗаказПокупателя.Запасы КАК ЗаказПокупателяЗапасы
	|		ГДЕ
	|			ЗаказПокупателяЗапасы.Ссылка.НомерЗаказа = &НомерЗаказа
	|			И ЗаказПокупателяЗапасы.Ссылка.ДатаДоставки = &ДатаДоставки
	|			И ЗаказПокупателяЗапасы.Ссылка.Подразделение = &Подразделение
	|			И ЗаказПокупателяЗапасы.Ссылка.Проведен = ИСТИНА) КАК ВложенныйЗапрос
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВложенныйЗапрос.Номенклатура) КАК ЗаказыПокупателей
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|				&ДатаСреза,
	|				Подразделение = &Подразделение
	|					И ТипЦен = &ТипЦен) КАК ЦеныНоменклатурыСрезПоследних
	|		ПО ЗаказыПокупателей.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура";
	
	#КонецОбласти
	
	запрос.УстановитьПараметр("НомерЗаказа", 	Объект.НомерЗаказа);
	запрос.УстановитьПараметр("ДатаДоставки", 	НачалоДня(Объект.ДатаДоставки));
	запрос.УстановитьПараметр("Поставщик", 		Объект.Контрагент);
	запрос.УстановитьПараметр("ТипЦен", 		Объект.Контрагент.ТипЦен);
	запрос.УстановитьПараметр("Подразделение", 	Объект.Подразделение);
	запрос.УстановитьПараметр("ДатаСреза", 		Объект.Дата);
	
	результатЗапроса = запрос.Выполнить();
	
	Если результатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	объект.Запасы.Очистить();
	
	выборка = результатЗапроса.Выбрать();
	
	Пока выборка.Следующий() Цикл
		
		//Если выборка.ТипЗаписи() = ТипЗаписиЗапроса.ИтогПоГруппировке Тогда
			
			новаяСтрока = объект.Запасы.Добавить();
			
			ЗаполнитьЗначенияСвойств(новаяСтрока, выборка);
			
		//КонецЕсли;
		
	КонецЦикла;	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДанныеНоменклатураПриИзменении(СтруктураДанные)
	
	// Получим цену
	СтруктураПараметров = Новый Структура("Номенклатура, ТипЦен, Подразделение, ДатаСреза", СтруктураДанные.Номенклатура, Справочники.ТипыЦен.Закупка, СтруктураДанные.Подразделение,СтруктураДанные.ДатаСреза);
	СтруктураДанные.Вставить("Цена", ЦенообразованиеСервер.ВернутьЦенуНоменклатуры(СтруктураПараметров));
	
	СтруктураДанные.Вставить("ЕдиницаИзмерения", СтруктураДанные.Номенклатура.ЕдиницаИзмерения);
	Возврат СтруктураДанные;
	
КонецФункции // ПолучитьДанныеНоменклатураПриИзменении()

&НаСервере
Функция АдресКомпоновщикаНастроекВоВременномХранилище()
	
	АдресКомпоновщикаНастроекВоВременномХранилище = ПоместитьВоВременноеХранилище(КомпоновщикНастроек.ПолучитьНастройки());
	
	Возврат АдресКомпоновщикаНастроекВоВременномХранилище;
	
КонецФункции

Процедура ЗаполнитьАвтозаказНаСервере()
	
	ОбновитьТаблицуПланирования(Объект.Планирование, Объект.Ссылка, Объект.Подразделение, АдресКомпоновщикаНастроекВоВременномХранилище());
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьТаблицуПланирования(КодыТоваров, ПравилоОбмена, подразделение, АдресНаНастройки)
	
	СхемаКомпоновкиДанных = Документы.ЗаказПоставщику.ПолучитьМакет("СхемаКомпоновкиДанных");
	
	// Подготовка компоновщика макета компоновки данных, загрузка настроек
	Компоновщик = Новый КомпоновщикНастроекКомпоновкиДанных;
	Компоновщик.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных));
	
	Компоновщик.ЗагрузитьНастройки(ПолучитьИзВременногоХранилища(АдресНаНастройки));
	Компоновщик.Восстановить(СпособВосстановленияНастроекКомпоновкиДанных.ПроверятьДоступность);
	
	// Заполнение структуры отчета и выбранных полей.
	Компоновщик.Настройки.Структура.Очистить();
	
	ГруппировкаДетальныеЗаписи = Компоновщик.Настройки.Структура.Добавить(Тип("ГруппировкаКомпоновкиДанных"));
	ГруппировкаДетальныеЗаписи.Использование = Истина;
	
	Компоновщик.Настройки.Выбор.Элементы.Очистить();
	
	ВыбранноеПоле               = ГруппировкаДетальныеЗаписи.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
	ВыбранноеПоле.Поле          = Новый ПолеКомпоновкиДанных("Номенклатура");
	ВыбранноеПоле.Использование = Истина;
	
	ВыбранноеПоле               = ГруппировкаДетальныеЗаписи.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
	ВыбранноеПоле.Поле          = Новый ПолеКомпоновкиДанных("КаналСбыта");
	ВыбранноеПоле.Использование = Истина;
	
	ВыбранноеПоле               = ГруппировкаДетальныеЗаписи.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
	ВыбранноеПоле.Поле          = Новый ПолеКомпоновкиДанных("Дн1");
	ВыбранноеПоле.Использование = Истина;

	ВыбранноеПоле               = ГруппировкаДетальныеЗаписи.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
	ВыбранноеПоле.Поле          = Новый ПолеКомпоновкиДанных("Дн2");
	ВыбранноеПоле.Использование = Истина;

	ВыбранноеПоле               = ГруппировкаДетальныеЗаписи.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
	ВыбранноеПоле.Поле          = Новый ПолеКомпоновкиДанных("Дн3");
	ВыбранноеПоле.Использование = Истина;

	ВыбранноеПоле               = ГруппировкаДетальныеЗаписи.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
	ВыбранноеПоле.Поле          = Новый ПолеКомпоновкиДанных("Дн4");
	ВыбранноеПоле.Использование = Истина;

	ВыбранноеПоле               = ГруппировкаДетальныеЗаписи.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
	ВыбранноеПоле.Поле          = Новый ПолеКомпоновкиДанных("Дн5");
	ВыбранноеПоле.Использование = Истина;

	ВыбранноеПоле               = ГруппировкаДетальныеЗаписи.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
	ВыбранноеПоле.Поле          = Новый ПолеКомпоновкиДанных("Дн6");
	ВыбранноеПоле.Использование = Истина;

	ВыбранноеПоле               = ГруппировкаДетальныеЗаписи.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
	ВыбранноеПоле.Поле          = Новый ПолеКомпоновкиДанных("Дн7");
	ВыбранноеПоле.Использование = Истина;

	
	// Компоновка макета и исполнение запроса.
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Компоновщик.ПолучитьНастройки(), , , Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	//Параметр = МакетКомпоновки.ЗначенияПараметров.Найти("ДатаНачалаАнализа");
	//Если Параметр <> Неопределено Тогда
	//	Параметр.Значение = НачалоДня(ТекущаяДата());
	//КонецЕсли;
	//
	//Параметр = МакетКомпоновки.ЗначенияПараметров.Найти("ДатаОкончанияАнализа");
	//Если Параметр <> Неопределено Тогда
	//	Параметр.Значение = КонецДня(ТекущаяДата());;
	//КонецЕсли;
	
	//СхемаКомпоновкиДанных = ПолучитьИзВременногоХранилища(АдресСхемыКомпоновкиДанных);
	//
	//СегментыСервер.ВключитьОтборПоСегментуНоменклатурыВСКД(КомпоновщикНастроек);

	//КомпоновщикМакетаКомпоновкиДанных = Новый КомпоновщикМакетаКомпоновкиДанных;
	//МакетКомпоновкиДанных = КомпоновщикМакетаКомпоновкиДанных.Выполнить(СхемаКомпоновкиДанных,
	//	КомпоновщикНастроек.ПолучитьНастройки());
	//
	//запрос = Новый Запрос(МакетКомпоновкиДанных.НаборыДанных["НаборДанных"].Запрос);
	//
	//Для каждого ПараметрКомпоновки из МакетКомпоновкиДанных.ЗначенияПараметров Цикл
	//	
	//	Запрос.УстановитьПараметр(ПараметрКомпоновки.Имя, ПараметрКомпоновки.Значение);
	//	
	//КонецЦикла;
	//
	//Возврат Запрос;

	
	//запрос = Новый Запрос;
	
	#Область ТекстЗапроса
	
	//запрос.Текст =
	//"ВЫБРАТЬ
	//|	ПродажиОбороты.Подразделение,
	//|	ПродажиОбороты.Номенклатура,
	//|	ПродажиОбороты.КоличествоОборот КАК Количество
	//|ИЗ
	//|	РегистрНакопления.Продажи.Обороты(, , День, ) КАК ПродажиОбороты
	//|{ГДЕ
	//|	ПродажиОбороты.Подразделение,
	//|	ПродажиОбороты.Номенклатура}";
	
	#КонецОбласти
	
	
	//// Заполнение параметров с полей отбора компоновщика настроек формы обработки.
	//Для каждого Параметр Из МакетКомпоновки.ЗначенияПараметров Цикл
	//	запрос.Параметры.Вставить(Параметр.Имя, Параметр.Значение);
	//КонецЦикла;
	
	запрос = Новый Запрос(МакетКомпоновки.НаборыДанных["НаборДанных"].Запрос);
	
	Для каждого ПараметрКомпоновки из МакетКомпоновки.ЗначенияПараметров Цикл
		
		Запрос.УстановитьПараметр(ПараметрКомпоновки.Имя, ПараметрКомпоновки.Значение);
		
	КонецЦикла;

	
	Объект.Планирование.Загрузить(запрос.Выполнить().Выгрузить());
	а=1;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(отказ, текущийОбъект, параметрыЗаписи)
	
	текущийОбъект.НастройкиКомпоновкиДанных = Новый ХранилищеЗначения(КомпоновщикНастроек.ПолучитьНастройки());
	
	текущийОбъект.ПериодАнализаДатаНачала = ПериодАнализа.ДатаНачала;
	текущийОбъект.ПериодАнализаДатаОкончания = ПериодАнализа.ДатаОкончания;
	
	текущийОбъект.ПериодПланированияДатаНачала = ПериодПланирования.ДатаНачала;
	текущийОбъект.ПериодПланированияДатаОкончания = ПериодПланирования.ДатаОкончания;


КонецПроцедуры

функция ПолучитьТаблицуПериода(датаНачала, датаОкончания)
	
	результат = Новый ТаблицаЗначений;
	результат.Колонки.Добавить("ДеньНедели");
	результат.Колонки.Добавить("КоличествоДней");
	
	количествоДней = Окр((датаОкончания - датаНачала)/86400);
	
	Для индекс = 1 По количествоДней Цикл
		
		новаяСтрока = результат.Добавить();
		
		новаяСтрока.ДеньНедели = ДеньНедели(датаНачала+(индекс-1)*86400);
		новаяСтрока.КоличествоДней = 1;
		
	КонецЦикла;
	
	результат.Свернуть("ДеньНедели","КоличествоДней");
	
	Возврат (результат);
	
КонецФункции

Функция ПолучитьПрогнозПродаж(периодПрогноза, строкаАнализа, соКоэффициенты)
	
	результат = 0;
	коэффициент = соКоэффициенты.Получить(строкаАнализа.Номенклатура.КД_Вид);
	коэффициент = ?(коэффициент = 0, 1, коэффициент);
	
	Для Каждого строкаПериодаПрогноза Из периодПрогноза Цикл
		
		результат = результат + (строкаАнализа["Дн"+строкаПериодаПрогноза.ДеньНедели] * коэффициент + строкаАнализа["Дн"+строкаПериодаПрогноза.ДеньНедели+"_Дефицит"])*строкаПериодаПрогноза.КоличествоДней;
		
	КонецЦикла;
	
	Возврат (результат);
	
КонецФункции

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	КонтрагентПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура КонтрагентПриИзмененииНаСервере()
	
	запрос = Новый Запрос;
	
	#Область ТекстЗапроса
		
	запрос.Текст =
	"ВЫБРАТЬ
	|	Запасы.НомерСтроки,
	|	Запасы.Номенклатура,
	|	Запасы.Количество,
	|	Запасы.ЕдиницаИзмерения,
	|	Запасы.КоличествоИзменено,
	|	Запасы.Комментарий
	|ПОМЕСТИТЬ ВТ_Запасы
	|ИЗ
	|	&Запасы КАК Запасы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВТ_Запасы.НомерСтроки,
	|	ВТ_Запасы.Номенклатура,
	|	ВТ_Запасы.Количество,
	|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) КАК Цена,
	|	ВТ_Запасы.Количество * ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) КАК Сумма,
	|	ВТ_Запасы.ЕдиницаИзмерения,
	|	ВТ_Запасы.КоличествоИзменено,
	|	ВТ_Запасы.Комментарий
	|ИЗ
	|	ВТ_Запасы КАК ВТ_Запасы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|				&ДатаОкончания,
	|				Подразделение = &Подразделение
	|					И ТипЦен = &ТипЦен) КАК ЦеныНоменклатурыСрезПоследних
	|		ПО ВТ_Запасы.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура";
	
	#КонецОбласти
	
	запрос.УстановитьПараметр("ДатаОкончания", Объект.Дата);
	запрос.УстановитьПараметр("Подразделение", Объект.Подразделение);
	запрос.УстановитьПараметр("ТипЦен", Объект.Контрагент.ТипЦен);
	запрос.УстановитьПараметр("Запасы", Объект.Запасы.Выгрузить(,"НомерСтроки, Номенклатура, Количество, КоличествоИзменено, ЕдиницаИзмерения, Комментарий"));
	
	результатЗапроса = запрос.Выполнить();
	
	выборка = результатЗапроса.Выбрать();
	Пока выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Объект.Запасы[выборка.НомерСтроки-1], выборка);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьКоэффициентыПоВидамПродукта()
	
	результат = Новый Соответствие;
	
	Для Каждого строкаКоэффициентов Из Объект.КоэффициентыУвеличенияПрогнозаСреднихПродаж Цикл
		результат.Вставить(строкаКоэффициентов.ВидПродукта, строкаКоэффициентов.Коэффициент);
	КонецЦикла;
	
	Возврат результат;
	
КонецФункции

&НаСервере
Процедура КомандаРасчитатьНаСервере()
	
	соКоэффициентыПоВидамПродукта = ПолучитьКоэффициентыПоВидамПродукта();
	
	Для каждого строкаАнализа Из Объект.АнализПродаж Цикл
		
		строкаАнализа.ПрогнозПродажНаДатуПоставки = ПолучитьПрогнозПродаж(ПолучитьТаблицуПериода(ПериодПланирования.ДатаНачала, НачалоДня(Объект.ДатаДоставки) - 1), строкаАнализа, соКоэффициентыПоВидамПродукта);
		строкаАнализа.ПрогнозПродажДоКонцаПериодаПланирования = ПолучитьПрогнозПродаж(ПолучитьТаблицуПериода(НачалоДня(Объект.ДатаДоставки), ПериодПланирования.ДатаОкончания), строкаАнализа, соКоэффициентыПоВидамПродукта);
		
	КонецЦикла;

	
КонецПроцедуры

&НаКлиенте
Процедура КомандаРасчитать(Команда)
	КомандаРасчитатьНаСервере();
КонецПроцедуры



#КонецОбласти 