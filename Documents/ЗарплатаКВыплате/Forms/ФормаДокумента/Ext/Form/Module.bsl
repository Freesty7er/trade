
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(отказ, стандартнаяОбработка)
	
	УправлениеНебольшойФирмойСервер.ЗаполнитьШапкуДокумента(
	Объект,
	,
	Параметры.ЗначениеКопирования,
	Параметры.Основание,
	СостояниеДокумента,
	КартинкаСостоянияДокумента,
	РазрешеноПроведение,
	Параметры.ЗначенияЗаполнения
	);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(отказ)
	
	ОтображениеПериодаРегистрации = Формат(Объект.ПериодРегистрации, "ДФ='MMMM yyyy'");
	
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события формы ОбработкаВыбора
//
Процедура ОбработкаВыбора(выбранноеЗначение, источникВыбора)
	
	Если ТипЗнч(ИсточникВыбора) = Тип("УправляемаяФорма")
		И Найти(ИсточникВыбора.ИмяФормы, "ФормаКалендаря") > 0 Тогда
		
		Объект.ПериодРегистрации = НачалоДня(ВыбранноеЗначение);
		УправлениеНебольшойФирмойКлиент.ПриИзмененииПериодаРегистрации(ЭтаФорма);
		
	КонецЕсли;
	
КонецПроцедуры // ОбработкаВыбора()

#КонецОбласти

#Область ОбработчикиСобытий

&НаКлиенте
// Процедура - обработчик события Регулирования реквизита ПериодРегистрации.
//
Процедура ПериодРегистрацииРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	УправлениеНебольшойФирмойКлиент.ПриРегулированииПериодаРегистрации(ЭтаФорма, Направление);
	УправлениеНебольшойФирмойКлиент.ПриИзмененииПериодаРегистрации(ЭтаФорма);
	
КонецПроцедуры //ПериодРегистрацииРегулирование()

&НаКлиенте
// Процедура - обработчик события НачалоВыбора реквизита ПериодРегистрации.
//
Процедура ПериодРегистрацииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка	 = Ложь;
	
	ДатаКалендаряПриОткрытии = ?(ЗначениеЗаполнено(Объект.ПериодРегистрации), Объект.ПериодРегистрации, УправлениеНебольшойФирмойПовтИсп.ПолучитьТекущуюДатаСеанса());
	
	ОткрытьФорму("ОбщаяФорма.ФормаКалендаря", УправлениеНебольшойФирмойКлиент.ПолучитьПараметрыОткрытияФормыКалендаря(ДатаКалендаряПриОткрытии), ЭтаФорма);
	
КонецПроцедуры //ПериодРегистрацииНачалоВыбора()

&НаКлиенте
// Процедура - обработчик события Очистки реквизита ПериодРегистрации.
//
Процедура ПериодРегистрацииОчистка(Элемент, СтандартнаяОбработка)
	
	ПериодРегистрации = Неопределено;
	УправлениеНебольшойФирмойКлиент.ПриИзмененииПериодаРегистрации(ЭтаФорма);
	
КонецПроцедуры //ПериодРегистрацииОчистка()

#КонецОбласти

#Область КомандыФормы

&НаКлиенте
Процедура Заполнить(команда)
	
	Если Не ЗаполнитьСоставНаСервере() Тогда
		
		текстСообщения = НСтр("ru = 'Отсутствуют данные для заполнения'");
		
		ПоказатьПредупреждение(, текстСообщения);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ДополнительныеПроцедурыИФункции

&НаСервере
Функция ЗаполнитьСоставНаСервере()
	
	запрос = Новый Запрос;
	
	#Область ТекстЗапроса
	
	запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВзаиморасчетыССотрудникамиОстатки.Сотрудник,
	|	-1 * ВзаиморасчетыССотрудникамиОстатки.СуммаОстаток КАК Сумма
	|ИЗ
	|	РегистрНакопления.ВзаиморасчетыССотрудниками.Остатки(
	|			&КонецПериода,
	|			Подразделение = &Подразделение
	|				И Сотрудник.КатегорияРаботника = &КатегорияРаботников
	|				И СчетУчета = &СчетЗарплаты) КАК ВзаиморасчетыССотрудникамиОстатки
	|ГДЕ
	|	ВзаиморасчетыССотрудникамиОстатки.СуммаОстаток < 0";
	
	#КонецОбласти
	
	
	запрос.УстановитьПараметр("Подразделение", Объект.Подразделение);
	запрос.УстановитьПараметр("КатегорияРаботников", Объект.КатегорияРаботников);
	запрос.УстановитьПараметр("КонецПериода", Новый Граница(Объект.Дата, ВидГраницы.Включая));
	запрос.УстановитьПараметр("СчетЗарплаты", ПланыСчетов.Внутренний.Зарплата);
	
	результатЗапроса = запрос.Выполнить();
	
	Если результатЗапроса.Пустой() Тогда
		Возврат Ложь;
	КонецЕсли;
		
	Объект.Состав.Загрузить(результатЗапроса.Выгрузить());
	
	Возврат Истина;
	
Конецфункции

#КонецОбласти


