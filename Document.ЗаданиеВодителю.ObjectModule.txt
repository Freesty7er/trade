#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если Не МаршрутРазвоза.Пустая() Тогда
		// переписывать маршрут имеет смысл, только если он указан
		// ПЕРЕДЕЛАТЬ !!! на регистр сведений (пока для совместимости)
		
		запрос = Новый Запрос;
		
		#Область ТекстЗапроса
		запрос.Текст = 
		"ВЫБРАТЬ
		|	ВложенныйЗапрос.Документ,
		|	ВложенныйЗапрос.МаршрутРазвоза
		|ИЗ
		|	(ВЫБРАТЬ
		|		ЗаданиеВодителюТочкиМаршрута.Заявка КАК Документ,
		|		ЗаданиеВодителюТочкиМаршрута.Ссылка.МаршрутРазвоза КАК МаршрутРазвоза
		|	ИЗ
		|		Документ.ЗаданиеВодителю.ТочкиМаршрута КАК ЗаданиеВодителюТочкиМаршрута
		|	ГДЕ
		|		ЗаданиеВодителюТочкиМаршрута.Ссылка = &Ссылка
		|		И ЗаданиеВодителюТочкиМаршрута.Заявка <> ЗНАЧЕНИЕ(Документ.кпкЗаявка.ПустаяСсылка)) КАК ВложенныйЗапрос
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КпкЗаявка КАК КпкЗаявка
		|		ПО ВложенныйЗапрос.Документ = КпкЗаявка.Ссылка
		|ГДЕ
		|	КпкЗаявка.МаршрутРазвоза <> &МаршрутРазвоза";
		#КонецОбласти
		
		запрос.УстановитьПараметр("Ссылка", Ссылка);
		запрос.УстановитьПараметр("МаршрутРазвоза", МаршрутРазвоза);
		
		результатЗапроса = запрос.Выполнить();
		
		НачатьТранзакцию();
		
		блокировка = Новый БлокировкаДанных;
		элементБлокировки = блокировка.Добавить();
		элементБлокировки.Область = "Документ.кпкЗаявка";
		элементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		элементБлокировки.ИсточникДанных = результатЗапроса.Выгрузить();
		элементБлокировки.ИспользоватьИзИсточникаДанных("Ссылка", "Документ");
		блокировка.Заблокировать(); 
		
		выборка = результатЗапроса.Выбрать();
		Пока выборка.Следующий() Цикл
			
			заявкаОбъект = выборка.Документ.ПолучитьОбъект();
			заявкаОбъект.МаршрутРазвоза = МаршрутРазвоза;
			заявкаОбъект.Записать();
			
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
		
	КонецЕсли;

КонецПроцедуры

Процедура ПередЗаписью(отказ, режимЗаписи, режимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Подразделение.Пустая() Тогда
		
		ТекстСообщения = НСтр("ru = 'Запись невозможна без заполнения Подразделения.'");
		ПроверкаДанныхКлиентСервер.СообщитьОбОшибке(отказ, текстСообщения, ЭтотОбъект, "Подразделение");
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(объектКопирования)
	
	ЗаполнениеОбъектовСервер.ЗаполнитьДанныеСкопированногоДокумента(ЭтотОбъект, ОбъектКопирования);
	
КонецПроцедуры

#КонецОбласти