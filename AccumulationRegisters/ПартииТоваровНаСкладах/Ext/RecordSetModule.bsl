////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

// Процедура - обработчик события ПередЗаписью набора записей.
//
Процедура ПередЗаписью(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка
		ИЛИ НЕ ДополнительныеСвойства.Свойство("ДляПроведения")
		ИЛИ 1=1
		ИЛИ НЕ ДополнительныеСвойства.ДляПроведения.Свойство("СтруктураВременныеТаблицы") Тогда
		
		Возврат;
	КонецЕсли;
	
	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	
	// Установка исключительной блокировки текущего набора записей регистратора.
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ПартииТоваровНаСкладах.НаборЗаписей");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.УстановитьЗначение("Регистратор", Отбор.Регистратор.Значение);
	Блокировка.Заблокировать();
	
	Если НЕ СтруктураВременныеТаблицы.Свойство("ДвиженияПартииТоваровНаСкладахИзменение") ИЛИ
		СтруктураВременныеТаблицы.Свойство("ДвиженияПартииТоваровНаСкладахИзменение") И НЕ СтруктураВременныеТаблицы.ДвиженияПартииТоваровНаСкладахИзменение Тогда
		
		// Если временная таблица "ДвиженияПартииТоваровНаСкладахИзменение" не существует или не содержит записей
		// об изменении набора, значит набор записывается первый раз или для набора был выполнен контроль остатков.
		// Текущее состояние набора помещается во временную таблицу "ДвиженияПартииТоваровНаСкладахПередЗаписью",
		// чтобы при записи получить изменение нового набора относительно текущего.
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ПартииТоваровНаСкладах.НомерСтроки КАК НомерСтроки,
		|	ПартииТоваровНаСкладах.Подразделение КАК Подразделение,
		|	ПартииТоваровНаСкладах.Склад КАК Склад,
		|	ПартииТоваровНаСкладах.Номенклатура КАК Номенклатура,
		|	ВЫБОР
		|		КОГДА ПартииТоваровНаСкладах.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА ПартииТоваровНаСкладах.Количество
		|		ИНАЧЕ -ПартииТоваровНаСкладах.Количество
		|	КОНЕЦ КАК КоличествоПередЗаписью
		|ПОМЕСТИТЬ ДвиженияПартииТоваровНаСкладахПередЗаписью
		|ИЗ
		|	РегистрНакопления.ПартииТоваровНаСкладах КАК ПартииТоваровНаСкладах
		|ГДЕ
		|	ПартииТоваровНаСкладах.Регистратор = &Регистратор
		|	И &Замещение");
		
		Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
		Запрос.УстановитьПараметр("Замещение", Замещение);
		
		Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
		Запрос.Выполнить();
		
		Запрос.Текст = "ВЫБРАТЬ * ИЗ ДвиженияПартииТоваровНаСкладахПередЗаписью";
		
	Иначе
		
		// Если временная таблица "ДвиженияПартииТоваровНаСкладахИзменение" существует и содержит записи
		// об изменении набора, значит набор записывается не первый раз и для набора не был выполнен контроль остатков.
		// Текущее состояние набора и текущее состояние изменений помещаются во временную таблцу "ДвиженияПартииТоваровНаСкладахПередЗаписью",
		// чтобы при записи получить изменение нового набора относительно первоначального.
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ДвиженияПартииТоваровНаСкладахИзменение.НомерСтроки КАК НомерСтроки,
		|	ДвиженияПартииТоваровНаСкладахИзменение.Подразделение КАК Подразделение,
		|	ДвиженияПартииТоваровНаСкладахИзменение.Склад КАК Склад,
		|	ДвиженияПартииТоваровНаСкладахИзменение.Номенклатура КАК Номенклатура,
		|	ДвиженияЗапасыНаСкладахИзменение.КоличествоПередЗаписью КАК КоличествоПередЗаписью
		|ПОМЕСТИТЬ ДвиженияПартииТоваровНаСкладахПередЗаписью
		|ИЗ
		|	ДвиженияПартииТоваровНаСкладахИзменение КАК ДвиженияПартииТоваровНаСкладахИзменение
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПартииТоваровНаСкладах.НомерСтроки,
		|	ПартииТоваровНаСкладах.Подразделение,
		|	ПартииТоваровНаСкладах.Склад,
		|	ПартииТоваровНаСкладах.Номенклатура,
		|	ВЫБОР
		|		КОГДА ПартииТоваровНаСкладах.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА ПартииТоваровНаСкладах.Количество
		|		ИНАЧЕ -ПартииТоваровНаСкладах.Количество
		|	КОНЕЦ
		|ИЗ
		|	РегистрНакопления.ПартииТоваровНаСкладах КАК ПартииТоваровНаСкладах
		|ГДЕ
		|	ЗапасыНаСкладах.Регистратор = &Регистратор
		|	И &Замещение");
		
		Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
		Запрос.УстановитьПараметр("Замещение", Замещение);
		
		Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
		Запрос.Выполнить();
		
		Запрос.Текст = "ВЫБРАТЬ * ИЗ ДвиженияПартииТоваровНаСкладахПередЗаписью"; 
		
	КонецЕсли;
	
	// Временная таблица "ДвиженияПартииНаСкладахИзменение" уничтожается
	// Удаляется информация о ее существовании.
	
	Если СтруктураВременныеТаблицы.Свойство("ДвиженияПартииТоваровНаСкладахИзменение") Тогда
		
		Запрос = Новый Запрос("УНИЧТОЖИТЬ ДвиженияПартииТоваровНаСкладахИзменение");
		Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
		Запрос.Выполнить();
		СтруктураВременныеТаблицы.Удалить("ДвиженияПартииТоваровНаСкладахИзменение");
	
	КонецЕсли;
	
КонецПроцедуры // ПередЗаписью()

// Процедура - обработчик события ПриЗаписи набора записей.
//
Процедура ПриЗаписи(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка
		ИЛИ НЕ ДополнительныеСвойства.Свойство("ДляПроведения")
		ИЛИ 1=1
		ИЛИ НЕ ДополнительныеСвойства.ДляПроведения.Свойство("СтруктураВременныеТаблицы") Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	
	// Рассчитывается изменение нового набора относительно текущего с учетом накопленных изменений
	// и помещается во временную таблицу "ДвиженияПартииТоваровНаСкладахИзменение".
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	МИНИМУМ(ДвиженияПартииТоваровНаСкладахИзменение.НомерСтроки) КАК НомерСтроки,
	|	ДвиженияПартииТоваровНаСкладахИзменение.Подразделение КАК Подразделение,
	|	ДвиженияПартииТоваровНаСкладахИзменение.Склад КАК Склад,
	|	ДвиженияПартииТоваровНаСкладахИзменение.Номенклатура КАК Номенклатура,
	|	СУММА(ДвиженияПартииТоваровНаСкладахИзменение.КоличествоПередЗаписью) КАК КоличествоПередЗаписью,
	|	СУММА(ДвиженияПартииТоваровНаСкладахИзменение.КоличествоИзменение) КАК КоличествоИзменение,
	|	СУММА(ДвиженияПартииТоваровНаСкладахИзменение.КоличествоПриЗаписи) КАК КоличествоПриЗаписи
	|ПОМЕСТИТЬ ДвиженияПартииТоваровНаСкладахИзменение
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДвиженияПартииТоваровНаСкладахПередЗаписью.НомерСтроки КАК НомерСтроки,
	|		ДвиженияПартииТоваровНаСкладахПередЗаписью.Подразделение КАК Подразделение,
	|		ДвиженияПартииТоваровНаСкладахПередЗаписью.Склад КАК Склад,
	|		ДвиженияПартииТоваровНаСкладахПередЗаписью.Номенклатура КАК Номенклатура,
	|		ДвиженияПартииТоваровНаСкладахПередЗаписью.КоличествоПередЗаписью КАК КоличествоПередЗаписью,
	|		ДвиженияПартииТоваровНаСкладахПередЗаписью.КоличествоПередЗаписью КАК КоличествоИзменение,
	|		0 КАК КоличествоПриЗаписи
	|	ИЗ
	|		ДвиженияПартииТоваровНаСкладахПередЗаписью КАК ДвиженияПартииТоваровНаСкладахПередЗаписью
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДвиженияПартииТоваровНаСкладахПриЗаписи.НомерСтроки,
	|		ДвиженияПартииТоваровНаСкладахПриЗаписи.Подразделение,
	|		ДвиженияПартииТоваровНаСкладахПриЗаписи.Склад,
	|		ДвиженияПартииТоваровНаСкладахПриЗаписи.Номенклатура,
	|		0,
	|		ВЫБОР
	|			КОГДА ДвиженияПартииТоваровНаСкладахПриЗаписи.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ДвиженияПартииТоваровНаСкладахПриЗаписи.Количество
	|			ИНАЧЕ ДвиженияПартииТоваровНаСкладахПриЗаписи.Количество
	|		КОНЕЦ,
	|		ДвиженияПартииТоваровНаСкладахПриЗаписи.Количество
	|	ИЗ
	|		РегистрНакопления.ПартииТоваровНаСкладах КАК ДвиженияПартииТоваровНаСкладахПриЗаписи
	|	ГДЕ
	|		ДвиженияПартииТоваровНаСкладахПриЗаписи.Регистратор = &Регистратор) КАК ДвиженияПартииТоваровНаСкладахИзменение
	|
	|СГРУППИРОВАТЬ ПО
	|	ДвиженияПартииТоваровНаСкладахИзменение.Подразделение,
	|	ДвиженияПартииТоваровНаСкладахИзменение.Склад,
	|	ДвиженияПартииТоваровНаСкладахИзменение.Номенклатура
	|
	|ИМЕЮЩИЕ
	|	СУММА(ДвиженияПартииТоваровНаСкладахИзменение.КоличествоИзменение) <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Подразделение,
	|	Склад,
	|	Номенклатура");
	
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Запрос.Текст = "ВЫБРАТЬ * ИЗ ДвиженияПартииТоваровНаСкладахПередЗаписью";
	Запрос.Текст = "ВЫБРАТЬ * ИЗ ДвиженияПартииТоваровНаСкладахИзменение";
	
	ВыборкаИзРезультатаЗапроса = РезультатЗапроса.Выбрать();
	ВыборкаИзРезультатаЗапроса.Следующий();
	
	// Новые изменения были помещены во временную таблицу "ДвиженияЗапасыНаСкладахИзменение".
	// Добавляется информация о ее существовании и наличии в ней записей об изменении.
	СтруктураВременныеТаблицы.Вставить("ДвиженияПартииТоваровНаСкладахИзменение", ВыборкаИзРезультатаЗапроса.Количество > 0);
	
	// Временная таблица "ДвиженияЗапасыНаСкладахПередЗаписью" уничтожается
	Запрос = Новый Запрос("УНИЧТОЖИТЬ ДвиженияПартииТоваровНаСкладахПередЗаписью");
	Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры // ПриЗаписи()



