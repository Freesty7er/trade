
&НаКлиенте
Процедура ПодборНоменклатуры(Команда)
	
	ДействиеПодбор("Запасы");

КонецПроцедуры

&НаСервере
Процедура ДобавитьПоставщикаВПараметрыОтбора(СтруктураПараметровПодбора)
	
	СтруктураПараметровПодбора.Вставить("Поставщик", Объект.НомерЗаказа.Поставщик);
	СтруктураПараметровПодбора.Вставить("ОтборПоПоставщику", Истина);
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьПараметрыОтбора(СтруктураПараметровПодбора)
	
	// "Подразделение"
	Если ЗначениеЗаполнено(Объект.Подразделение) Тогда
		СтруктураПараметровПодбора.Вставить("Подразделение", Объект.Подразделение);
	КонецЕсли;
	
	// "Контрагент"
	Если ЗначениеЗаполнено(Объект.Контрагент) Тогда
		СтруктураПараметровПодбора.Вставить("Контрагент", Объект.Контрагент);
	КонецЕсли;
	
	// "Поставщик"
	Если ЗначениеЗаполнено(Объект.НомерЗаказа.Поставщик) Тогда
		СтруктураПараметровПодбора.Вставить("Поставщик", Объект.НомерЗаказа.Поставщик);
	КонецЕсли;
	
	// "ТипЦен"
	Если ЗначениеЗаполнено(Объект.ТипЦен) Тогда
		СтруктураПараметровПодбора.Вставить("ТипЦен", Объект.ТипЦен);
	КонецЕсли;
	
	// "Номенклатура"
	Если Объект.Запасы.Количество() > 0 Тогда
		
		ТаблицаЗначенийЗапасы = Новый ТаблицаЗначений;
		ТаблицаЗначенийЗапасы.Колонки.Добавить("Номенклатура");
		ТаблицаЗначенийЗапасы.Колонки.Добавить("Количество");
		
		Для Каждого СтрокаСостава Из Объект.Запасы Цикл
			Если СтрокаСостава.Количество > 0 Тогда
				НоваяСтрока = ТаблицаЗначенийЗапасы.Добавить();
				НоваяСтрока.Номенклатура = СтрокаСостава.Номенклатура;
				НоваяСтрока.Количество = СтрокаСостава.Количество;
			КонецЕсли;
		КонецЦикла;
		
		СтруктураПараметровПодбора.Вставить("СтрокиДокумента", ЗначениеВСтрокуВнутр(ТаблицаЗначенийЗапасы));
		
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ДействиеПодбор(ИмяТабличнойЧасти)
	
	Если ИмяТабличнойЧасти = "Запасы" Тогда
		Команда = "ПодборВТабличнуюЧастьЗапасы";
	КонецЕсли;
	
	СтруктураПараметровПодбора = Новый Структура();
	СтруктураПараметровПодбора.Вставить("Команда", Команда);
	
	//ДобавитьПоставщикаВПараметрыОтбора(СтруктураПараметровПодбора);
	//ДобавитьТипЦенВПараметрыОтбора(СтруктураПараметровПодбора);
	
	ДобавитьПараметрыОтбора(СтруктураПараметровПодбора);
	
	РаботаСДиалогамиКлиент.ОткрытьПодборНоменклатурыДляЗаказа(ЭтаФорма, СтруктураПараметровПодбора);
		
КонецПроцедуры //

&НаСервере
Процедура ДобавитьТипЦенВПараметрыОтбора(СтруктураПараметровПодбора)
	
	//СтруктураПараметровПодбора.Вставить("Поставщик", Объект.Контрагент);
	Если ЗначениеЗаполнено(Объект.ТипЦен) Тогда
		СтруктураПараметровПодбора.Вставить("ТипЦен", Объект.ТипЦен);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Подразделение) Тогда
		СтруктураПараметровПодбора.Вставить("Подразделение", Объект.Подразделение);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Перем Команда;
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
		
		ВыбранноеЗначение.Свойство("Команда", Команда);

		Если Команда = "ПодборВТабличнуюЧастьЗапасы" Тогда
			ОбработкаПодбора("Запасы", ВыбранноеЗначение);
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаПодбора(ИмяТабличнойЧасти, ЗначениеВыбора) Экспорт

	Перем Номенклатура;
	Перем Количество;
	
	// Тут суммировать не надо !!!
	
	// Получим параметры подбора из структуры подбора.
	ЗначениеВыбора.Свойство("Номенклатура",					Номенклатура);
	ЗначениеВыбора.Свойство("Количество",					Количество);

	// Ищем выбранную позицию в таблице подобранной номенклатуры.
	// Если найдем - увеличим количество; не найдем - добавим новую строку.
	СтруктураОтбора = Новый Структура();
	СтруктураОтбора.Вставить("Номенклатура", Номенклатура);
	
	
	МассивСтрок = Объект[ИмяТабличнойЧасти].НайтиСтроки(СтруктураОтбора);
	Если МассивСтрок.Количество() = 0 Тогда
		СтрокаТабличнойЧасти = Неопределено;
	Иначе
		СтрокаТабличнойЧасти = МассивСтрок[0];
	КонецЕсли;
	
	Если СтрокаТабличнойЧасти <> Неопределено Тогда
		// Нашли, увеличиваем количество в первой найденной строке.
		//СтрокаТабличнойЧасти.Количество = СтрокаТабличнойЧасти.Количество + Количество;
		СтрокаТабличнойЧасти.Количество = Количество;
		
		//РаботаСДиалогамиКлиент.РассчитатьСуммуТабЧасти(СтрокаТабличнойЧасти);
	Иначе
		// Не нашли - добавляем новую строку.
		СтрокаТабличнойЧасти = Объект[ИмяТабличнойЧасти].Добавить();
		СтрокаТабличнойЧасти.Номенклатура     			= Номенклатура;
		СтрокаТабличнойЧасти.Количество       			= Количество;
		
	КонецЕсли;
	
	//РассчитатьСуммуДокумента();
	
	СтруктураДанные = Новый Структура();
	СтруктураДанные.Вставить("Номенклатура", СтрокаТабличнойЧасти.Номенклатура);
	СтруктураДанные.Вставить("ТипЦен", ЭтаФорма.Объект.ТипЦен);
	СтруктураДанные.Вставить("Подразделение", ЭтаФорма.Объект.Подразделение);
	СтруктураДанные.Вставить("ДатаСреза", ЭтаФорма.Объект.Дата);
	СтруктураДанные.Вставить("Контрагент", ЭтаФорма.Объект.Контрагент);	
	
	СтруктураДанные = ПолучитьДанныеНоменклатураПриИзменении(СтруктураДанные);
	
	//СтрокаТабличнойЧасти.ЕдиницаИзмерения = СтруктураДанные.ЕдиницаИзмерения;
	
	СтрокаТабличнойЧасти.Цена = СтруктураДанные.Цена;
	//СтрокаТабличнойЧасти.ПроцентСкидки 	= СтруктураДанные.ПроцентСкидки;

	РасчитатьСуммуВСтрокеТабличнойЧасти(СтрокаТабличнойЧасти);
	
КонецПроцедуры //

&НаСервереБезКонтекста
Функция ПолучитьДанныеНоменклатураПриИзменении(СтруктураДанные)
	
	// Получим цену
	СтруктураПараметров = Новый Структура("Номенклатура, ТипЦен, Подразделение, ДатаСреза, Контрагент", СтруктураДанные.Номенклатура, СтруктураДанные.ТипЦен, СтруктураДанные.Подразделение, СтруктураДанные.ДатаСреза, СтруктураДанные.Контрагент);
	
	СтруктураДанные.Вставить("Цена", ЦенообразованиеСервер.ВернутьЦенуНоменклатуры(СтруктураПараметров));
	//СтруктураДанные.Вставить("ЕдиницаИзмерения", СтруктураДанные.Номенклатура.ЕдиницаИзмерения);
	//СтруктураДанные.Вставить("ПроцентСкидкиНаВес", СтруктураДанные.Номенклатура.Родитель.ПроцентСкидкиНаВес);
	
	СоответствиеСкидок = ЦенообразованиеСервер.ВернутьАвтоматическиеСкидки(СтруктураПараметров);
	//СтруктураДанные.Вставить("ПроцентСкидки", СоответствиеСкидок.Получить(СокрЛП(СтруктураДанные.Номенклатура.Родитель.Код) +" / "+СокрЛП(СтруктураДанные.Номенклатура.ЦеноваяГруппа.Код)) );	
	СтруктураДанные.Вставить("ПроцентСкидки", СоответствиеСкидок.Получить(СокрЛП(СтруктураДанные.Номенклатура.Родитель.Код) +" / "+СокрЛП(Справочники.ЦеновыеГруппы.ПустаяСсылка().Код)) );	
	
	Возврат СтруктураДанные;
	
КонецФункции // ПолучитьДанныеНоменклатураПриИзменении()

&НаКлиенте
Процедура РасчитатьСуммуВСтрокеТабличнойЧасти(СтрокаТабличнойЧасти = Неопределено)
	
	Если СтрокаТабличнойЧасти = Неопределено Тогда
		СтрокаТабличнойЧасти = Элементы.Запасы.ТекущиеДанные;
	КонецЕсли;
	
	СтруктураДанные = Новый Структура();
	СтруктураДанные.Вставить("Организация", ЭтаФорма.Объект.Организация);

	//СтруктураДанные = ПолучитьДанныеОрганизацияПриИзменении(СтруктураДанные);
	
	//Если НЕ(СтрокаТабличнойЧасти.КоличествоОтгружено = 0) Тогда
	//	СтрокаТабличнойЧасти.Количество = СтрокаТабличнойЧасти.КоличествоОтгружено - СтрокаТабличнойЧасти.КоличествоОтгружено*СтрокаТабличнойЧасти.ПроцентСкидкиНаВес/100;
	//КонецЕсли;
	//
	//Если НЕ(СтрокаТабличнойЧасти.КоличествоЗаказано = 0) Тогда
	//	СтрокаТабличнойЧасти.КоличествоОтклонение = СтрокаТабличнойЧасти.КоличествоЗаказано - СтрокаТабличнойЧасти.Количество; 	
	//КонецЕсли;		

	
	//СтрокаТабличнойЧасти.СуммаБезСкидки = СтрокаТабличнойЧасти.Количество * СтрокаТабличнойЧасти.Цена;
	
	//Если СтруктураДанные.ФинУчет Тогда
	//	
	//	СтрокаТабличнойЧасти.СуммаНДС = СтрокаТабличнойЧасти.СуммаБезСкидки / 6;
	//	
	//КонецЕсли;
	
	//СтрокаТабличнойЧасти.Скидка 	= СтрокаТабличнойЧасти.СуммаБезСкидки * СтрокаТабличнойЧасти.ПроцентСкидки/ 100;
	//СтрокаТабличнойЧасти.Сумма 		= СтрокаТабличнойЧасти.СуммаБезСкидки - СтрокаТабличнойЧасти.Скидка;
	СтрокаТабличнойЧасти.Сумма = СтрокаТабличнойЧасти.Количество * СтрокаТабличнойЧасти.Цена;
	
КонецПроцедуры // РасчитатьСуммуВСтрокеТабличнойЧасти()

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УправлениеНебольшойФирмойСервер.ЗаполнитьШапкуДокумента(
		Объект,
		,
		Параметры.ЗначениеКопирования,
		Параметры.Основание,
		СостояниеДокумента,
		КартинкаСостоянияДокумента,
		РазрешеноПроведение,
		Параметры.ЗначенияЗаполнения
	);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДанныеКонтрагентприИзменении(СтруктураДанные)
	
	СтруктураДанные.Вставить("ТипЦен", Справочники.ТипыЦен.ПустаяСсылка());
	
	//Если СтруктураДанные.Менеджер.НомерКоманды = 2 Тогда
	//	СтруктураДанные.ТипЦен = СтруктураДанные.Контрагент.ТипЦен2;
	//Иначе
	//	СтруктураДанные.ТипЦен = СтруктураДанные.Контрагент.ТипЦен;
	//КонецЕсли;
	
	СтрокаУсловийПоставки = СтруктураДанные.Контрагент.Менеджеры.Найти(СтруктураДанные.Менеджер, "Менеджер");
	
	Если НЕ СтрокаУсловийПоставки = Неопределено Тогда
		
		СтруктураДанные.ТипЦен = СтрокаУсловийПоставки.ТипЦен;
		
	КонецЕсли;
	
	СтруктураДанные.Вставить("Подразделение", СтруктураДанные.Контрагент.Родитель.Подразделение);
	
	Возврат СтруктураДанные;
	
КонецФункции

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	СтруктураДанные = Новый Структура();
	СтруктураДанные.Вставить("Контрагент", ЭтаФорма.Объект.Контрагент);
	СтруктураДанные.Вставить("Менеджер", ЭтаФорма.Объект.Менеджер);
	
	СтруктураДанные = ПолучитьДанныеКонтрагентприИзменении(СтруктураДанные);
	
	ЭтаФорма.Объект.ТипЦен = СтруктураДанные.ТипЦен;
	
	Если НЕ ЗначениеЗаполнено(СтруктураДанные.Подразделение) Тогда
		ЭтаФорма.Объект.Подразделение = СтруктураДанные.Подразделение;
	КонецЕсли;
	
	ПересчетДокумента();
	
КонецПроцедуры


&НаКлиенте
Процедура ЗапасыНоменклатураПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.Запасы.ТекущиеДанные;
	
	СтруктураДанные = Новый Структура();
	СтруктураДанные.Вставить("Номенклатура", СтрокаТабличнойЧасти.Номенклатура);
	СтруктураДанные.Вставить("ТипЦен", ЭтаФорма.Объект.ТипЦен);
	СтруктураДанные.Вставить("Подразделение", ЭтаФорма.Объект.Подразделение);
	СтруктураДанные.Вставить("ДатаСреза", ЭтаФорма.Объект.Дата);
	СтруктураДанные.Вставить("Контрагент", ЭтаФорма.Объект.Контрагент);
	
	СтруктураДанные = ПолучитьДанныеНоменклатураПриИзменении(СтруктураДанные);
	
	//СтрокаТабличнойЧасти.ЕдиницаИзмерения 	= СтруктураДанные.ЕдиницаИзмерения;
	СтрокаТабличнойЧасти.Цена 				= СтруктураДанные.Цена;
	//СтрокаТабличнойЧасти.ПроцентСкидки 		= СтруктураДанные.ПроцентСкидки;
	//СтрокаТабличнойЧасти.ПроцентСкидкиНаВес	= СтруктураДанные.ПроцентСкидкиНаВес;
	
	РасчитатьСуммуВСтрокеТабличнойЧасти(СтрокаТабличнойЧасти);

КонецПроцедуры

&НаКлиенте
Процедура ТипЦенПриИзменении(Элемент)
	ПересчетДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ПересчетДокумента()
	
	
	
	Для Каждого СтрокаТабличнойЧасти Из Объект.Запасы Цикл
		
		//СтрокаТабличнойЧасти = Элементы.Запасы.ТекущиеДанные;
		
		СтруктураДанные = Новый Структура();
		СтруктураДанные.Вставить("Номенклатура", СтрокаТабличнойЧасти.Номенклатура);
		СтруктураДанные.Вставить("ТипЦен", ЭтаФорма.Объект.ТипЦен);
		СтруктураДанные.Вставить("Подразделение", ЭтаФорма.Объект.Подразделение);
		СтруктураДанные.Вставить("ДатаСреза", ЭтаФорма.Объект.Дата);
		СтруктураДанные.Вставить("Контрагент", ЭтаФорма.Объект.Контрагент);
		
		СтруктураДанные = ПолучитьДанныеНоменклатураПриИзменении(СтруктураДанные);
		
		//СтрокаТабличнойЧасти.ЕдиницаИзмерения 	= СтруктураДанные.ЕдиницаИзмерения;
		СтрокаТабличнойЧасти.Цена 				= СтруктураДанные.Цена;
		
		РасчитатьСуммуВСтрокеТабличнойЧасти(СтрокаТабличнойЧасти);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Объект.НомерЗаказа = Настройки.Получить("НомерЗаказа");
	Объект.Машина = Настройки.Получить("Машина");
	Объект.ДатаДоставки = Настройки.Получить("ДатаДоставки");

КонецПроцедуры

&НаКлиенте
Процедура НомерЗаказаПриИзменении(Элемент)
	
	Объект.Комментарий = СокрЛП(Объект.НомерЗаказа);
	
КонецПроцедуры
