

#Область ДействияКоманд

&НаКлиенте
Процедура Сформировать(Команда)
	
	Если Агент.Пустая() Тогда
		Предупреждение("Укажите агента!");
		Возврат;
	КонецЕсли;
	
	Если ПоказатьПланФакт Тогда
		Если ВариантМаршрута.Пустая() Тогда
			Предупреждение("Укажите вариант маршрута!");
		Иначе
			СформироватьОтчетПланФакт(Агент, ДатаФормированияОтчета);
		КонецЕсли;
	Иначе
		СформироватьОтчет(Агент, ДатаФормированияОтчета);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКартуВБраузере(Команда)
	
   ТекстовыйДокумент = Новый ТекстовыйДокумент;
   ТекстовыйДокумент.ДобавитьСтроку(ТекстовыйДокументКарты);
   ТекстовыйДокумент.Записать(КаталогВременныхФайлов() + "map.html", КодировкаТекста.UTF8);	
   
   Файл = Новый Файл(КаталогВременныхФайлов() + "map.html");
   Если Файл.Существует() Тогда
	   ЗапуститьПриложение(КаталогВременныхФайлов() + "map.html");
   КонецЕсли;
   
КонецПроцедуры

#КонецОбласти

#Область ДополнительныеПроцедурыИФункции

Функция ПолучитьДатуМаршрута(ДатаПоиска, ТекВариантМаршрута)
	ИнтервалПланирования = ТекВариантМаршрута.ИнтервалПланирования; 	
	ДатаНачалаМаршрута = НачалоДня(ТекВариантМаршрута.ДатаНачала);
	
	ИнтервалВСекундах = ИнтервалПланирования * 24 * 60 * 60;
	ТекущийДеньМаршрута = ДатаНачалаМаршрута + (ДатаПоиска -  (ДатаНачалаМаршрута +  Цел((ДатаПоиска - ДатаНачалаМаршрута) / ИнтервалВСекундах) * ИнтервалВСекундах));
	Возврат ТекущийДеньМаршрута;
КонецФункции

Процедура СформироватьОтчетПланФакт(ТекАгент, ТекДата)
	
	ОбъектОбработка = РеквизитФормыВЗначение("Объект");
	
	Если ВариантМаршрута.Пустая() Тогда
		//Предупреждение("Не указан вариант маршрута.");
		Возврат;
	КонецЕсли;
	
	Макет = ОбъектОбработка.ПолучитьМакет("МакетОтчетаПоПосещениям");
	ТабДокумент = Новый ТабличныйДокумент;
	
	ДатаМаршрута = ПолучитьДатуМаршрута(НачалоДня(ТекДата), ВариантМаршрута);
	
	запрос = Новый Запрос;
	
	#Область ТекстЗапроса
	
	запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ДокументыАгентов.НаименованиеКонтрагента, Маршрут.НаименованиеКонтрагента) КАК НаименованиеКонтрагента,
	|	ЕСТЬNULL(ДокументыАгентов.Контрагент, Маршрут.Контрагент) КАК Контрагент,
	|	ЕСТЬNULL(ДокументыАгентов.ТорговаяТочка, Маршрут.ТорговаяТочка) КАК ТорговаяТочка,
	|	ДокументыАгентов.Документ,
	|	ДокументыАгентов.ДатаСоздания КАК ДатаСоздания,
	|	ДокументыАгентов.ДатаИзменения,
	|	ЕСТЬNULL(ДокументыАгентов.Широта, 0) КАК Широта,
	|	ЕСТЬNULL(ДокументыАгентов.Долгота, 0) КАК Долгота,
	|	ДокументыАгентов.ВидДокумента,
	|	ЕСТЬNULL(ДокументыАгентов.ШиротаТТ, Маршрут.ШиротаТТ) КАК ШиротаТТ,
	|	ЕСТЬNULL(ДокументыАгентов.ДолготаТТ, Маршрут.ДолготаТТ) КАК ДолготаТТ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ДокументыАгентов.Документ, ИСТИНА) = ИСТИНА
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьДокумент,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Маршрут.ТорговаяТочка, ИСТИНА) = ИСТИНА
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ПоМаршруту
	|ИЗ
	|	(ВЫБРАТЬ
	|		БПАГДокументыАгентовСрезПоследних.ТорговаяТочка.Владелец.Наименование КАК НаименованиеКонтрагента,
	|		БПАГДокументыАгентовСрезПоследних.ТорговаяТочка.Владелец КАК Контрагент,
	|		БПАГДокументыАгентовСрезПоследних.ТорговаяТочка КАК ТорговаяТочка,
	|		БПАГДокументыАгентовСрезПоследних.Документ КАК Документ,
	|		БПАГДокументыАгентовСрезПоследних.ДатаСозданияНаУстройстве КАК ДатаСоздания,
	|		БПАГДокументыАгентовСрезПоследних.ДатаИзмененияНаУстройстве КАК ДатаИзменения,
	|		БПАГДокументыАгентовСрезПоследних.ШиротаИзменения КАК Широта,
	|		БПАГДокументыАгентовСрезПоследних.ДолготаИзменения КАК Долгота,
	|		БПАГДокументыАгентовСрезПоследних.ВидДокумента КАК ВидДокумента,
	|		БПАГДокументыАгентовСрезПоследних.ТорговаяТочка.Широта КАК ШиротаТТ,
	|		БПАГДокументыАгентовСрезПоследних.ТорговаяТочка.Долгота КАК ДолготаТТ
	|	ИЗ
	|		РегистрСведений.БПАГДокументыАгентов.СрезПоследних(
	|				,
	|				Агент = &Агент
	|					И ДатаСозданияНаУстройстве >= &ДатаНачала
	|					И ДатаСозданияНаУстройстве <= &ДатаКонца
	|					И ВидДокумента <> &НаОсновании) КАК БПАГДокументыАгентовСрезПоследних) КАК ДокументыАгентов
	|		ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			БПАГМаршруты.ТорговаяТочка КАК ТорговаяТочка,
	|			БПАГМаршруты.ТорговаяТочка.Владелец КАК Контрагент,
	|			БПАГМаршруты.ТорговаяТочка.Владелец.Наименование КАК НаименованиеКонтрагента,
	|			БПАГМаршруты.ТорговаяТочка.Широта КАК ШиротаТТ,
	|			БПАГМаршруты.ТорговаяТочка.Долгота КАК ДолготаТТ,
	|			БПАГМаршруты.Порядок КАК Порядок
	|		ИЗ
	|			РегистрСведений.БПАГМаршруты КАК БПАГМаршруты
	|		ГДЕ
	|			БПАГМаршруты.Агент = &Агент
	|			И БПАГМаршруты.Дата = &ДатаМаршрута) КАК Маршрут
	|		ПО ДокументыАгентов.ТорговаяТочка = Маршрут.ТорговаяТочка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаСоздания,
	|	Маршрут.Порядок";
	#КонецОбласти				   
	                                   
	запрос.УстановитьПараметр("ДатаНачала", НачалоДня(ТекДата));
	запрос.УстановитьПараметр("ДатаКонца", КонецДня(ТекДата));
	запрос.УстановитьПараметр("Агент", ТекАгент);
	запрос.УстановитьПараметр("ДатаМаршрута", ДатаМаршрута);
	
	Если БПАГ.БПАГПолучитьНастройку("1СВариантЗагрузкиЗаявок", ТекАгент) = Перечисления.БПАГВариантыЗагрузкиЗаявок.Реализация Тогда
		запрос.УстановитьПараметр("НаОсновании", "NULL");
	Иначе
		запрос.УстановитьПараметр("НаОсновании", Перечисления.БПАГВидыДокументов.РеализацияПоЗаявке);
	КонецЕсли;
	
	результат = запрос.Выполнить();
	выборка = результат.Выбрать();

	ОбластьЗаголовок    = Макет.ПолучитьОбласть("Заголовок");
	ОбластьЗаголовок.Параметры.ТекстЗаголовка = "Отчет по посещениям";
	ТабДокумент.Вывести(ОбластьЗаголовок);

	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");

	ОбластьШапка.Параметры.ТекДата = Формат(ДатаФормированияОтчета, "ДФ=dd.MM.yyyy");
	ОбластьШапка.Параметры.ФИОАгента = ТекАгент.ФизЛицо.Наименование;
	ОбластьШапка.Параметры.МаркаАвто = ОбъектОбработка.НастройкаИзРегистра("1САвтомобиль", ТекАгент).Марка;
	ОбластьШапка.Параметры.НомерАвто = ОбъектОбработка.НастройкаИзРегистра("1САвтомобиль", ТекАгент);

	ТабДокумент.Вывести(ОбластьШапка);

	ОбластьШапкаТаблицы    = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ТабДокумент.Вывести(ОбластьШапкаТаблицы);

	ОбщееВремяНаДокумент = 0;
	ОбщееВремяМеждуДокументами = 0;
	ОбщееВремяМеждуТочками = 0;
	КоличествоКлиентов = 1;
	
	ВремяПредыдущего = Дата(2000, 1, 1);
	ВремяПредыдущегоКлиента = Дата(2000, 1, 1);
	ПредыдущийКлиент = 0;
	Пока Выборка.Следующий() Цикл
		Если Выборка.ПоМаршруту Тогда   
			ОбластьСтроки =  Макет.ПолучитьОбласть("Строка");
		Иначе
			ОбластьСтроки =  Макет.ПолучитьОбласть("Строка1");
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(ОбластьСтроки.Параметры, Выборка);
		
		Если Выборка.ЕстьДокумент Тогда 
			ВремяРаботы = (Выборка.ДатаИзменения - Выборка.ДатаСоздания) / 60;
			ОбластьСтроки.Параметры.ВремяРаботы = Формат(ВремяРаботы, "ЧДЦ=2; ЧН=0,00");
			
			Если ВремяПредыдущего = Дата(2000, 1, 1) Тогда
				ВремяСПредыдущего = 0;
			Иначе
				ВремяСПредыдущего = (Выборка.ДатаСоздания - ВремяПредыдущего) / 60;
			КонецЕсли;
			ВремяПредыдущего = Выборка.ДатаСоздания;
			ОбластьСтроки.Параметры.ВремяСПредыдущего = Формат(ВремяСПредыдущего, "ЧДЦ=2; ЧН=0,00");
			
			ВремяСПредыдущегоКлиента = 0;
			Если ПредыдущийКлиент = 0 Тогда
				ВремяСПредыдущегоКлиента = 0;
				ВремяПредыдущегоКлиента = Выборка.ДатаСоздания;
				ПредыдущийКлиент = Выборка.Контрагент;
				ПримернаяДлинаПути = 0;
				ПредыдущаяШ = 0;
				ПредыдущаяД = 0;
			ИначеЕсли Выборка.Контрагент <> ПредыдущийКлиент Тогда
				ВремяСПредыдущегоКлиента = (Выборка.ДатаСоздания - ВремяПредыдущегоКлиента) / 60;
				ВремяПредыдущегоКлиента = Выборка.ДатаСоздания;
				ПредыдущийКлиент = Выборка.Контрагент;
				КоличествоКлиентов = КоличествоКлиентов + 1;
			КонецЕсли;
			
			//Отклонение
			A1 = Выборка.Широта;
			//A1 = Выборка.Поле1;
			A2 = Выборка.ШиротаТТ;
			B1 = Выборка.Долгота;
			//B1 = Выборка.Поле2;
			B2 = Выборка.ДолготаТТ;
			K = 3.1415926535897932 / 180;
			Если (A1 <> 0) И (A2 <> 0) И (B1 <> 0) И (B2 <> 0) И (A2 <> NULL) И (B2 <> NULL) Тогда
				Отклонение = 2 * ASin(Sqrt(Sin((A2 - A1) * K / 2) * Sin((A2 - A1) * K / 2) + Cos(A2 * K) * Cos(A1 * K) * Sin((B2 - B1) * K / 2) * Sin((B2 - B1) * K / 2)));
				Отклонение = Отклонение * 6367.4446571225;
				Отклонение = Окр(Отклонение, 1);
			Иначе
				Отклонение = "???";
			КонецЕсли;
			ОбластьСтроки.Параметры.Отклонение = Отклонение;
			
			//Расчет пути "по прямой"
			Если (A1 <> 0) И (ПредыдущаяШ <> 0) И (B1 <> 0) И (ПредыдущаяД <> 0) Тогда
				Расстояние = 2 * ASin(Sqrt(Sin((ПредыдущаяШ - A1) * K / 2) * Sin((ПредыдущаяШ - A1) * K / 2) + Cos(ПредыдущаяШ * K) * Cos(A1 * K) * Sin((ПредыдущаяД - B1) * K / 2) * Sin((ПредыдущаяД - B1) * K / 2)));
				Расстояние = Расстояние * 6367.4446571225;
				Расстояние = ?(Расстояние < 0, -Расстояние, Расстояние);
				ПримернаяДлинаПути = ПримернаяДлинаПути + Расстояние;
			КонецЕсли;
			
			ПредыдущаяШ = A1;
			ПредыдущаяД = B1;
				
			ОбщееВремяНаДокумент = ОбщееВремяНаДокумент + ВремяРаботы;
			ОбщееВремяМеждуДокументами = ОбщееВремяМеждуДокументами + ВремяСПредыдущего;
			ОбщееВремяМеждуТочками = ОбщееВремяМеждуТочками + ВремяСПредыдущегоКлиента;
		КонецЕсли;
		
	   	ТабДокумент.Вывести(ОбластьСтроки);
	КонецЦикла;
	
	КолВоДокументов = Выборка.Количество();
	СреднееВремяНаДокумент = ?(КолВоДокументов = 0, 0, ОбщееВремяНаДокумент / КолВоДокументов);
	СреднееВремяМеждуДокументами = ?(КолВоДокументов = 0, 0, ОбщееВремяМеждуДокументами / КолВоДокументов);
	КолВоПереездов = КоличествоКлиентов - 1;
	СреднееВремяМеждуТочками = ?(КолВоПереездов = 0, 0, ОбщееВремяМеждуТочками / КолВоПереездов);
	
	ОбластьИтого =  Макет.ПолучитьОбласть("Подвал"); 
	ОбластьИтого.Параметры.СреднееВремяНаДокумент = Формат(СреднееВремяНаДокумент, "ЧДЦ=2; ЧН=0,00");
	ОбластьИтого.Параметры.СреднееВремяМеждуДокументами = Формат(СреднееВремяМеждуДокументами, "ЧДЦ=2; ЧН=0,00");
	ОбластьИтого.Параметры.СреднееВремяМеждуТочками = Формат(СреднееВремяМеждуТочками, "ЧДЦ=2; ЧН=0,00");
	ОбластьИтого.Параметры.ПримернаяДлинаПути = Формат(ПримернаяДлинаПути, "ЧДЦ=2; ЧН=0,00");
	ТабДокумент.Вывести(ОбластьИтого); 
	   
	ПолеТабличногоДокумента.Очистить();
	ПолеТабличногоДокумента.Вывести(ТабДокумент);
	
	//Формируем строку адресов по документам
	Выборка = Результат.Выбрать();
	
	СтрокаКоординат = "";
	тмпТТ = 0;
	ПорядокВыписки = 0;
	СтрокаВидовВыписанныхДокументов = "";
	предШирота = 0;
	предДолгота = 0;
	предНаименованиеКонтрагента = 0;
	
	Пока Выборка.Следующий() Цикл
		Если Выборка.ЕстьДокумент Тогда
			Если (тмпТТ = 0) ИЛИ (тмпТТ <> Выборка.ТорговаяТочка) Тогда
				Если тмпТТ <> 0 Тогда
					//Выведем предыдущий маркер
					Если (предШирота <> 0) И (предДолгота <> 0) Тогда
						СтрокаМаркера = "Порядок: " + ПорядокВыписки + "\n" + ОбъектОбработка.НормализоватьСтрокуДляPHP(предНаименованиеКонтрагента) + "\n" + СтрокаВидовВыписанныхДокументов;
						СтрокаКоординат = СтрокаКоординат + "[""" + СтрокаМаркера + """, " + Формат(предШирота, "ЧРД=.; ЧГ=0")+ ", " + Формат(предДолгота, "ЧРД=.; ЧГ=0") + "],";
					КонецЕсли;
				КонецЕсли;
				
				ПорядокВыписки = ПорядокВыписки + 1;
				
				тмпТТ = Выборка.ТорговаяТочка;
				
				предШирота = Выборка.Широта;
				предДолгота = Выборка.Долгота;
				//предШирота = Выборка.Поле1;
				//предДолгота = Выборка.Поле2;
				предНаименованиеКонтрагента = Выборка.НаименованиеКонтрагента;
				
				СтрокаВидовВыписанныхДокументов = Формат(Выборка.ДатаСоздания, "ДЛФ=T") + " " +  СокрЛП(Выборка.ВидДокумента) + ?(Выборка.ДатаСоздания <> Выборка.ДатаИзменения, " (записан в " + Формат(Выборка.ДатаИзменения, "ДЛФ=T") + ")", "");
			Иначе
				
				предШирота = Выборка.Широта;
				предДолгота = Выборка.Долгота;
				//предШирота = Выборка.Поле1;
				//предДолгота = Выборка.Поле2;
				СтрокаВидовВыписанныхДокументов = СтрокаВидовВыписанныхДокументов + ",\n" + Формат(Выборка.ДатаСоздания, "ДЛФ=T") + " " +  СокрЛП(Выборка.ВидДокумента) + ?(Выборка.ДатаСоздания <> Выборка.ДатаИзменения, " (записан в " + Формат(Выборка.ДатаИзменения, "ДЛФ=T") + ")", "");
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	//Выведем последний маркер
	Если (предШирота <> 0) И (предДолгота <> 0) Тогда
		СтрокаМаркера = "Факт. порядок: " + ПорядокВыписки + "\n" + ОбъектОбработка.НормализоватьСтрокуДляPHP(предНаименованиеКонтрагента) + "\n" + СтрокаВидовВыписанныхДокументов;
		СтрокаКоординат = СтрокаКоординат + "[""" + СтрокаМаркера + """, " + Формат(предШирота, "ЧРД=.; ЧГ=0")+ ", " + Формат(предДолгота, "ЧРД=.; ЧГ=0") + "],";
	КонецЕсли;
	
	СтрокаКоординат = Лев(СтрокаКоординат, СтрДлина(СтрокаКоординат) - 1);
	
	
	//Формируем строку адресов по маршруту
	Выборка = Результат.Выбрать();
	
	СтрокаКоординатПоМаршруту = "";
	тмпТТ = 0;
	ПорядокВыписки = 0;
	СтрокаВидовВыписанныхДокументов = "";
	предШирота = 0;
	предДолгота = 0;
	предНаименованиеКонтрагента = 0;
	
	Пока Выборка.Следующий() Цикл
		Если Выборка.ПоМаршруту Тогда
		Если (тмпТТ = 0) ИЛИ (тмпТТ <> Выборка.ТорговаяТочка) Тогда
			Если тмпТТ <> 0 Тогда
				//Выведем предыдущий маркер
				Если (предШирота <> 0) И (предДолгота <> 0) Тогда
					СтрокаМаркера = "Порядок: " + ПорядокВыписки + "\n" + ОбъектОбработка.НормализоватьСтрокуДляPHP(предНаименованиеКонтрагента) + "\n" + СтрокаВидовВыписанныхДокументов;
					СтрокаКоординатПоМаршруту = СтрокаКоординатПоМаршруту + "[""" + СтрокаМаркера + """, " + Формат(предШирота, "ЧРД=.; ЧГ=0")+ ", " + Формат(предДолгота, "ЧРД=.; ЧГ=0") + "],";
				КонецЕсли;
			КонецЕсли;
			
			ПорядокВыписки = ПорядокВыписки + 1;
			
			тмпТТ = Выборка.ТорговаяТочка;
			предШирота = Выборка.ШиротаТТ;
			предДолгота = Выборка.ДолготаТТ;
			предНаименованиеКонтрагента = Выборка.НаименованиеКонтрагента;
			
			СтрокаВидовВыписанныхДокументов = Формат(Выборка.ДатаСоздания, "ДЛФ=T") + " " +  СокрЛП(Выборка.ВидДокумента) + ?(Выборка.ДатаСоздания <> Выборка.ДатаИзменения, " (записан в " + Формат(Выборка.ДатаИзменения, "ДЛФ=T") + ")", "");
		Иначе
			предШирота = Выборка.ШиротаТТ;
			предДолгота = Выборка.ДолготаТТ;
			СтрокаВидовВыписанныхДокументов = СтрокаВидовВыписанныхДокументов + ",\n" + Формат(Выборка.ДатаСоздания, "ДЛФ=T") + " " +  СокрЛП(Выборка.ВидДокумента) + ?(Выборка.ДатаСоздания <> Выборка.ДатаИзменения, " (записан в " + Формат(Выборка.ДатаИзменения, "ДЛФ=T") + ")", "");
		КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	//Выведем последний маркер
	Если (предШирота <> 0) И (предДолгота <> 0) Тогда
		СтрокаМаркера = "Порядок: " + ПорядокВыписки + "\n" + ОбъектОбработка.НормализоватьСтрокуДляPHP(предНаименованиеКонтрагента) + "\n" + СтрокаВидовВыписанныхДокументов;
		СтрокаКоординатПоМаршруту = СтрокаКоординатПоМаршруту + "[""" + СтрокаМаркера + """, " + Формат(предШирота, "ЧРД=.; ЧГ=0")+ ", " + Формат(предДолгота, "ЧРД=.; ЧГ=0") + "],";
	КонецЕсли;
	
	СтрокаКоординатПоМаршруту = Лев(СтрокаКоординатПоМаршруту, СтрДлина(СтрокаКоординатПоМаршруту) - 1);
	
	#Область ТекстHTMLДокумента
	
	Текст = 
	"<HTML><HEAD><TITLE>Карты Google</TITLE>
	//|<META name=viewport content=""initial-scale=1.0, user-scalable=yes""></META>
	//|<META content=""text/html; charset=UTF-8"" http-equiv=content-type></META>
	//|<SCRIPT type=text/javascript src=""http://maps.google.com/maps/api/js?v=3.21&sensor=false""></SCRIPT>
	//|<SCRIPT type=text/javascript>
	//|
	|<meta name=""viewport"" content=""initial-scale=1.0, user-scalable=no"" />
	|<meta http-equiv=""Content-Type"" content=""text/html; charset=utf-8""/>
	|<meta http-equiv=""X-UA-Compatible"" content=""IE=9"">
	|<style type=""text/css"">
	|  html { height: 100% }
	|  body { height: 100%; margin: 0px; padding: 0px }
	|  #map { height: 100% }
	|</style>
	|<script type=""text/javascript"" src=""https://maps.google.com/maps/api/js?key=AIzaSyCtXVdhyxLD0VOcHYGAkTHTXniiz4WSh7g""></script>
	|<script type=""text/javascript"">
	|
	|var map;
    |
  	|function drawRoute() {
	| 	var agentRouteDoc = [" + СтрокаКоординат + "
	|  	];
	| 	var agentRoute = [" + СтрокаКоординатПоМаршруту + "
	|  	];
	|	
	|	var bounds = new google.maps.LatLngBounds();
    |	var coords = new Array(agentRoute.length);
	|   var coordsDoc = new Array(agentRouteDoc.length);
	|
	|	// Markers
    |	for (var i = 0; i < agentRoute.length; i++) {
	|		var place = agentRoute[i];
    |	    var myLatLng = new google.maps.LatLng(place[1], place[2]);
    |	    bounds.extend(myLatLng);
	|		coords[i] = myLatLng;
    |	    var marker = new google.maps.Marker({
    |	        position: myLatLng,
    |	        title: place[0],
	|			icon: 'http://www.google.com/mapfiles/dd-start.png'
    |	    });
	|		marker.setMap(map); 
    |	}
	|	for (var i = 0; i < agentRouteDoc.length; i++) {
	|		var place = agentRouteDoc[i];
    |	    var myLatLng = new google.maps.LatLng(place[1], place[2]);
    |	    bounds.extend(myLatLng);
	|		coordsDoc[i] = myLatLng;
    |	    var marker = new google.maps.Marker({
    |	        position: myLatLng,
    |	        title: place[0]
    |	    });
	|		marker.setMap(map); 
    |	}
    |	// Polyline
    |	var polyline = new google.maps.Polyline({
	|       path: coords,
    |	    strokeColor: ""#00AA00"",
    |	    strokeOpacity: 1.0,
    |	    strokeWeight: 2
    |	});
    |	polyline.setMap(map);
	|	
	|	// Polyline documents
    |	var polylineDoc = new google.maps.Polyline({
	|       path: coordsDoc,
    |	    strokeColor: ""#0000AA"",
    |	    strokeOpacity: 1.0,
    |	    strokeWeight: 2
    |	});
    |	polylineDoc.setMap(map);

	|
	|	// Center
	|	map.setCenter(bounds.getCenter(), map.fitBounds(bounds));
	|
  	|}
    |
	|function onLoad() {
    |	var myOptions = {
    |		mapTypeId: google.maps.MapTypeId.ROADMAP
    |	}
    |	map = new google.maps.Map(document.getElementById(""map_canvas""), myOptions);
    |	drawRoute();
	|}
    |
	|window.onload = onLoad;  
    |
	|</SCRIPT>
	|
	|</HEAD>
	|<body onload=""onLoad()"">
	|  <div id=""map_canvas"" style=""width:100%; height:100%""></div>
	|</body>
	|</html>";
	
	#КонецОбласти
	
	//ОткрыватьКартыВоВнешнемБраузере = БПАГ.БПАГПолучитьНастройку("1СОткрыватьКартыВоВнешнемБраузере"); 
	//Если НЕ ОткрыватьКартыВоВнешнемБраузере Тогда
		ПолеHTMLДокументаКарта = Текст;
	//Иначе
		ТекстовыйДокументКарты = Текст;
	//КонецЕсли;
КонецПроцедуры

Процедура СформироватьОтчет(ТекАгент, ТекДата)
	
	СпецификаПользователя = БПАГ.ПолучитьСпецификуПользователя();
	ОбъектОбработка = РеквизитФормыВЗначение("Объект");
	
	Если СпецификаПользователя = "SD" Тогда
		Макет = ОбъектОбработка.ПолучитьМакет("МакетОтчетаПоПосещениямSD");
	Иначе
		Макет = ОбъектОбработка.ПолучитьМакет("МакетОтчетаПоПосещениям");
	КонецЕсли;
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	Если СпецификаПользователя = "SD" Тогда
		запрос = Новый Запрос;
		
		#Область ТекстЗапроса
		
		запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	БПАГДокументыАгентовСрезПоследних.Документ.Контрагент.Наименование КАК НаименованиеКонтрагента,
		|	БПАГДокументыАгентовСрезПоследних.Документ.Контрагент КАК Контрагент,
		|	БПАГДокументыАгентовСрезПоследних.Документ.Контрагент КАК ТорговаяТочка,
		|	БПАГДокументыАгентовСрезПоследних.Документ,
		|	БПАГДокументыАгентовСрезПоследних.ДатаСозданияНаУстройстве КАК ДатаСоздания,
		|	БПАГДокументыАгентовСрезПоследних.ДатаИзмененияНаУстройстве КАК ДатаИзменения,
		|	ЕСТЬNULL(БПАГДокументыАгентовСрезПоследних.ШиротаИзменения, 0) КАК Широта,
		|	ЕСТЬNULL(БПАГДокументыАгентовСрезПоследних.ДолготаИзменения, 0) КАК Долгота,
		|	БПАГДокументыАгентовСрезПоследних.ВидДокумента,
		|	ЕСТЬNULL(БПАГДокументыАгентовСрезПоследних.ТорговаяТочка.Широта, 0) КАК ШиротаТТ,
		|	ЕСТЬNULL(БПАГДокументыАгентовСрезПоследних.ТорговаяТочка.Долгота, 0) КАК ДолготаТТ
		|ИЗ
		|	РегистрСведений.БПАГДокументыАгентов.СрезПоследних(
		|			,
		|			Агент = &Агент
		|				И ДатаСозданияНаУстройстве >= &ДатаНачала
		|				И ДатаСозданияНаУстройстве <= &ДатаКонца
		|				И ВидДокумента <> &НаОсновании) КАК БПАГДокументыАгентовСрезПоследних
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДатаСоздания";
		
		#КонецОбласти
		
	Иначе
		
		запрос = Новый Запрос;
		
		#Область ТекстЗапроса
		
		запрос.Текст = 
		"ВЫБРАТЬ
		|	БПАГДокументыАгентовСрезПоследних.ТорговаяТочка.Владелец.Наименование КАК НаименованиеКонтрагента,
		|	БПАГДокументыАгентовСрезПоследних.ТорговаяТочка.Владелец КАК Контрагент,
		|	БПАГДокументыАгентовСрезПоследних.ТорговаяТочка,
		|	БПАГДокументыАгентовСрезПоследних.Документ,
		|	БПАГДокументыАгентовСрезПоследних.ДатаСозданияНаУстройстве КАК ДатаСоздания,
		|	БПАГДокументыАгентовСрезПоследних.ДатаИзмененияНаУстройстве КАК ДатаИзменения,
		|	ЕСТЬNULL(БПАГДокументыАгентовСрезПоследних.ШиротаИзменения, 0) КАК Широта,
		|	ЕСТЬNULL(БПАГДокументыАгентовСрезПоследних.ДолготаИзменения, 0) КАК Долгота,
		|	БПАГДокументыАгентовСрезПоследних.ВидДокумента,
		|	ЕСТЬNULL(БПАГДокументыАгентовСрезПоследних.ТорговаяТочка.Широта, 0) КАК ШиротаТТ,
		|	ЕСТЬNULL(БПАГДокументыАгентовСрезПоследних.ТорговаяТочка.Долгота, 0) КАК ДолготаТТ
		|ИЗ
		|	РегистрСведений.БПАГДокументыАгентов.СрезПоследних(
		|			,
		|			Агент = &Агент
		|				И ДатаСозданияНаУстройстве >= &ДатаНачала
		|				И ДатаСозданияНаУстройстве <= &ДатаКонца
		|				И ВидДокумента <> &НаОсновании) КАК БПАГДокументыАгентовСрезПоследних
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДатаСоздания";
		
		#КонецОбласти
					   
	КонецЕсли;
	
	запрос.УстановитьПараметр("ДатаНачала", НачалоДня(ТекДата));
	запрос.УстановитьПараметр("ДатаКонца", КонецДня(ТекДата));
	запрос.УстановитьПараметр("Агент", ТекАгент);
	
	Если БПАГ.БПАГПолучитьНастройку("1СВариантЗагрузкиЗаявок", ТекАгент) = Перечисления.БПАГВариантыЗагрузкиЗаявок.Реализация Тогда
		запрос.УстановитьПараметр("НаОсновании", "NULL");
	Иначе
		запрос.УстановитьПараметр("НаОсновании", Перечисления.БПАГВидыДокументов.РеализацияПоЗаявке);
	КонецЕсли;
    	
	результат = запрос.Выполнить();
	Выборка = результат.Выбрать();

	ОбластьЗаголовок    = Макет.ПолучитьОбласть("Заголовок");
	ОбластьЗаголовок.Параметры.ТекстЗаголовка = "Отчет по посещениям";
	ТабДокумент.Вывести(ОбластьЗаголовок);

	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");

	ОбластьШапка.Параметры.ТекДата = Формат(ДатаФормированияОтчета, "ДФ=dd.MM.yyyy");
	Если СпецификаПользователя = "SD" Тогда
		ОбластьШапка.Параметры.ФИОАгента = ТекАгент.Наименование;
    Иначе
		ОбластьШапка.Параметры.ФИОАгента = ТекАгент.ФизЛицо.Наименование;
	КонецЕсли;
	
	ОбластьШапка.Параметры.МаркаАвто = ОбъектОбработка.НастройкаИзРегистра("1САвтомобиль", ТекАгент).Марка;
	ОбластьШапка.Параметры.НомерАвто = ОбъектОбработка.НастройкаИзРегистра("1САвтомобиль", ТекАгент);

	ТабДокумент.Вывести(ОбластьШапка);

	ОбластьШапкаТаблицы    = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ТабДокумент.Вывести(ОбластьШапкаТаблицы);

	НомСтр = 1;
	
	ОбщееВремяНаДокумент = 0;
	ОбщееВремяМеждуДокументами = 0;
	ОбщееВремяМеждуТочками = 0;
	КоличествоКлиентов = 1;
	
	ВремяПредыдущего = Дата(2000, 1, 1);
	ВремяПредыдущегоКлиента = Дата(2000, 1, 1);
	ПредыдущийКлиент = 0;
	Пока Выборка.Следующий() Цикл
		   
		ОбластьСтроки =  Макет.ПолучитьОбласть("Строка");
		ЗаполнитьЗначенияСвойств(ОбластьСтроки.Параметры, Выборка);
		ВремяРаботы = (Выборка.ДатаИзменения - Выборка.ДатаСоздания) / 60;
		ОбластьСтроки.Параметры.ВремяРаботы = Формат(ВремяРаботы, "ЧДЦ=2; ЧН=0,00");
		
		Если ВремяПредыдущего = Дата(2000, 1, 1) Тогда
			ВремяСПредыдущего = 0;
		Иначе
			ВремяСПредыдущего = (Выборка.ДатаСоздания - ВремяПредыдущего) / 60;
		КонецЕсли;
		ВремяПредыдущего = Выборка.ДатаСоздания;
		ОбластьСтроки.Параметры.ВремяСПредыдущего = Формат(ВремяСПредыдущего, "ЧДЦ=2; ЧН=0,00");
		
		ВремяСПредыдущегоКлиента = 0;
		Если ПредыдущийКлиент = 0 Тогда
			ВремяСПредыдущегоКлиента = 0;
			ВремяПредыдущегоКлиента = Выборка.ДатаСоздания;
			ПредыдущийКлиент = Выборка.Контрагент;
			ПримернаяДлинаПути = 0;
			ПредыдущаяШ = 0;
			ПредыдущаяД = 0;
		ИначеЕсли Выборка.Контрагент <> ПредыдущийКлиент Тогда
			ВремяСПредыдущегоКлиента = (Выборка.ДатаСоздания - ВремяПредыдущегоКлиента) / 60;
			ВремяПредыдущегоКлиента = Выборка.ДатаСоздания;
			ПредыдущийКлиент = Выборка.Контрагент;
			КоличествоКлиентов = КоличествоКлиентов + 1;
		КонецЕсли;
		
		//Отклонение
		A1 = Выборка.Широта;
		A2 = Выборка.ШиротаТТ;
		B1 = Выборка.Долгота;
		B2 = Выборка.ДолготаТТ;
		K = 3.1415926535897932 / 180;
		Если (A1 <> 0) И (A2 <> 0) И (B1 <> 0) И (B2 <> 0) Тогда
			Отклонение = 2 * ASin(Sqrt(Sin((A2 - A1) * K / 2) * Sin((A2 - A1) * K / 2) + Cos(A2 * K) * Cos(A1 * K) * Sin((B2 - B1) * K / 2) * Sin((B2 - B1) * K / 2)));
			Отклонение = Отклонение * 6367.4446571225;
			Отклонение = Окр(Отклонение, 1);
		Иначе
			Отклонение = "???";
		КонецЕсли;
		ОбластьСтроки.Параметры.Отклонение = Отклонение;
		
		//Расчет пути "по прямой"
		Если (A1 <> 0) И (ПредыдущаяШ <> 0) И (B1 <> 0) И (ПредыдущаяД <> 0) Тогда
			Расстояние = 2 * ASin(Sqrt(Sin((ПредыдущаяШ - A1) * K / 2) * Sin((ПредыдущаяШ - A1) * K / 2) + Cos(ПредыдущаяШ * K) * Cos(A1 * K) * Sin((ПредыдущаяД - B1) * K / 2) * Sin((ПредыдущаяД - B1) * K / 2)));
			Расстояние = Расстояние * 6367.4446571225;
			Расстояние = ?(Расстояние < 0, -Расстояние, Расстояние);
			ПримернаяДлинаПути = ПримернаяДлинаПути + Расстояние;
		КонецЕсли;
		
		ПредыдущаяШ = A1;
		ПредыдущаяД = B1;
		
		Если СпецификаПользователя = "SD" Тогда
			ОбластьСтроки.Параметры.НомСтр = НомСтр;
			ОбластьСтроки.Параметры.ШиротаДолгота = СтрШаблон("%1, %2",Формат(Выборка.Широта,"ЧРД=."), Формат(Выборка.Долгота, "ЧРД=."));
		КонецЕсли;
		
	   	ТабДокумент.Вывести(ОбластьСтроки);
		
		НомСтр = НомСтр + 1;
		
		ОбщееВремяНаДокумент = ОбщееВремяНаДокумент + ВремяРаботы;
		ОбщееВремяМеждуДокументами = ОбщееВремяМеждуДокументами + ВремяСПредыдущего;
		ОбщееВремяМеждуТочками = ОбщееВремяМеждуТочками + ВремяСПредыдущегоКлиента;
	КонецЦикла;
	
	КолВоДокументов = Выборка.Количество();
	СреднееВремяНаДокумент = ?(КолВоДокументов = 0, 0, ОбщееВремяНаДокумент / КолВоДокументов);
	СреднееВремяМеждуДокументами = ?(КолВоДокументов = 0, 0, ОбщееВремяМеждуДокументами / КолВоДокументов);
	КолВоПереездов = КоличествоКлиентов - 1;
	СреднееВремяМеждуТочками = ?(КолВоПереездов = 0, 0, ОбщееВремяМеждуТочками / КолВоПереездов);
	
	ОбластьИтого =  Макет.ПолучитьОбласть("Подвал"); 
	ОбластьИтого.Параметры.СреднееВремяНаДокумент = Формат(СреднееВремяНаДокумент, "ЧДЦ=2; ЧН=0,00");
	ОбластьИтого.Параметры.СреднееВремяМеждуДокументами = Формат(СреднееВремяМеждуДокументами, "ЧДЦ=2; ЧН=0,00");
	ОбластьИтого.Параметры.СреднееВремяМеждуТочками = Формат(СреднееВремяМеждуТочками, "ЧДЦ=2; ЧН=0,00");
	ОбластьИтого.Параметры.ПримернаяДлинаПути = Формат(ПримернаяДлинаПути, "ЧДЦ=2; ЧН=0,00");
	ТабДокумент.Вывести(ОбластьИтого); 
	   
	ПолеТабличногоДокумента.Очистить();
	ПолеТабличногоДокумента.Вывести(ТабДокумент);
	
	//Отрисуем карту маршрута
	Выборка = Результат.Выбрать();
	
	СтрокаКоординат = "";
	тмпТТ = 0;
	ПорядокВыписки = 0;
	СтрокаВидовВыписанныхДокументов = "";
	предШирота = 0;
	предДолгота = 0;
	предНаименованиеКонтрагента = 0;
	
	Пока Выборка.Следующий() Цикл
		Если (тмпТТ = 0) ИЛИ (тмпТТ <> Выборка.ТорговаяТочка) Тогда
			Если тмпТТ <> 0 Тогда
				//Выведем предыдущий маркер
				Если (предШирота <> 0) И (предДолгота <> 0) Тогда
					СтрокаМаркера = "Порядок: " + ПорядокВыписки + "\n" + ОбъектОбработка.НормализоватьСтрокуДляPHP(предНаименованиеКонтрагента) + "\n" + СтрокаВидовВыписанныхДокументов;
					СтрокаКоординат = СтрокаКоординат + "[""" + СтрокаМаркера + """, " + Формат(предШирота, "ЧРД=.; ЧГ=0")+ ", " + Формат(предДолгота, "ЧРД=.; ЧГ=0") + "],";
				КонецЕсли;
			КонецЕсли;
			
			ПорядокВыписки = ПорядокВыписки + 1;
			
			тмпТТ = Выборка.ТорговаяТочка;
			предШирота = Выборка.Широта;
			предДолгота = Выборка.Долгота;
			предНаименованиеКонтрагента = Выборка.НаименованиеКонтрагента;
			
			СтрокаВидовВыписанныхДокументов = Формат(Выборка.ДатаСоздания, "ДЛФ=T") + " " +  СокрЛП(Выборка.ВидДокумента) + ?(Выборка.ДатаСоздания <> Выборка.ДатаИзменения, " (записан в " + Формат(Выборка.ДатаИзменения, "ДЛФ=T") + ")", "");
		Иначе
			предШирота = Выборка.Широта;
			предДолгота = Выборка.Долгота;
			СтрокаВидовВыписанныхДокументов = СтрокаВидовВыписанныхДокументов + ",\n" + Формат(Выборка.ДатаСоздания, "ДЛФ=T") + " " +  СокрЛП(Выборка.ВидДокумента) + ?(Выборка.ДатаСоздания <> Выборка.ДатаИзменения, " (записан в " + Формат(Выборка.ДатаИзменения, "ДЛФ=T") + ")", "");
		КонецЕсли;
		
	КонецЦикла;
	//Выведем последний маркер
	Если (предШирота <> 0) И (предДолгота <> 0) Тогда
		СтрокаМаркера = "Порядок: " + ПорядокВыписки + "\n" + ОбъектОбработка.НормализоватьСтрокуДляPHP(предНаименованиеКонтрагента) + "\n" + СтрокаВидовВыписанныхДокументов;
		СтрокаКоординат = СтрокаКоординат + "[""" + СтрокаМаркера + """, " + Формат(предШирота, "ЧРД=.; ЧГ=0")+ ", " + Формат(предДолгота, "ЧРД=.; ЧГ=0") + "],";
	КонецЕсли;
	
	СтрокаКоординат = Лев(СтрокаКоординат, СтрДлина(СтрокаКоординат) - 1);
	
	Текст = 
	"<HTML><HEAD><TITLE>Карты Google</TITLE>
	//|<META name=viewport content=""initial-scale=1.0, user-scalable=yes""></META>
	//|<META content=""text/html; charset=UTF-8"" http-equiv=content-type></META>
	//|<SCRIPT type=text/javascript src=""http://maps.google.com/maps/api/js?v=3.21&sensor=false""></SCRIPT>
	//|<SCRIPT type=text/javascript>
	|<meta name=""viewport"" content=""initial-scale=1.0, user-scalable=no"" />
	|<meta http-equiv=""Content-Type"" content=""text/html; charset=utf-8""/>
	|<meta http-equiv=""X-UA-Compatible"" content=""IE=9"">
	|<style type=""text/css"">
	|  html { height: 100% }
	|  body { height: 100%; margin: 0px; padding: 0px }
	|  #map { height: 100% }
	|</style>
	|<script type=""text/javascript"" src=""https://maps.google.com/maps/api/js?key=AIzaSyCtXVdhyxLD0VOcHYGAkTHTXniiz4WSh7g""></script>
	|<script type=""text/javascript"">
	|
	|
	|var map;
    |
  	|function drawRoute() {
	| 	var agentRoute = [" + СтрокаКоординат + "
	|  	];
	|	
	|	var bounds = new google.maps.LatLngBounds();	 
    |	var coords = new Array(agentRoute.length);
    |	// Markers
    |	for (var i = 0; i < agentRoute.length; i++) {
	|		var place = agentRoute[i];
    |	    var myLatLng = new google.maps.LatLng(place[1], place[2]);
    |	    bounds.extend(myLatLng);
	|		coords[i] = myLatLng;
    |	    var marker = new google.maps.Marker({
    |	        position: myLatLng,
    |	        title: place[0]
    |	    });
	|		marker.setMap(map); 
    |	}
    |	// Polyline
    |	var polyline = new google.maps.Polyline({
	|       path: coords,
    |	    strokeColor: ""#0000AA"",
    |	    strokeOpacity: 1.0,
    |	    strokeWeight: 2
    |	});
    |	polyline.setMap(map);
	|
	|	// Center
	|	map.setCenter(bounds.getCenter(), map.fitBounds(bounds));
	|
  	|}
    |
	|function onLoad() {
    |	var myOptions = {
    |		mapTypeId: google.maps.MapTypeId.ROADMAP
    |	}
    |	map = new google.maps.Map(document.getElementById(""map_canvas""), myOptions);
    |	drawRoute();
	|}
    |
	|window.onload = onLoad;  
    |
	|</SCRIPT>
	|
	|</HEAD>
	|<body onload=""onLoad()"">
	|  <div id=""map_canvas"" style=""width:100%; height:100%""></div>
	|</body>
	|</html>";
	
	//ОткрыватьКартыВоВнешнемБраузере = БПАГ.БПАГПолучитьНастройку("1СОткрыватьКартыВоВнешнемБраузере"); 
	//Если НЕ ОткрыватьКартыВоВнешнемБраузере Тогда
		ПолеHTMLДокументаКарта = Текст;
	//Иначе
		ТекстовыйДокументКарты = Текст;
	//КонецЕсли;
КонецПроцедуры

#КонецОбласти