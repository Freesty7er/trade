
#Область ОбработчикиСобытий

Процедура ПриКопировании(ОбъектКопирования)
	Инициатор = Неопределено;
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(отказ, проверяемыеРеквизиты)

	ОбработкаТабличныхЧастейСервер.ПроверитьДублиСтрокТабличнойЧасти(Отказ, ЭтотОбъект, "Клиенты", Новый Структура("Клиент,Менеджер", "Клиент", "Менеджер"));
	
	// Табличная часть "Клиенты".
	описаниеСтрокиСписка = ПроверкаДанныхСервер.ПолучитьОписаниеСтрокиТабличнойЧасти(Клиенты);
	Для каждого строкаКлиенты Из Клиенты Цикл
		
		Если строкаКлиенты.Исполнитель.Пустая()
			И строкаКлиенты.РольИсполнителя.Пустая() 
			И строкаКлиенты.Подразделение.Пустая() Тогда
			
			описаниеСтрокиСписка.НомерСтроки = строкаКлиенты.НомерСтроки;
			ПроверкаДанныхКлиентСервер.СообщитьОбОшибке(Отказ, НСтр("ru = 'Необходимо заполнить хотя бы одно из полей адресации задачи (Исполнитель, Роль исполнителя, Подразделение)'"), ЭтотОбъект,, описаниеСтрокиСписка);
			
		КонецЕсли; 
		
	КонецЦикла;
	
КонецПроцедуры

Процедура СтартПередСтартом(ТочкаМаршрутаБизнесПроцесса, Отказ)

	Инициатор = ПараметрыСеанса.ТекущийПользователь;
	Записать();
	
КонецПроцедуры

Процедура ВыполнениеТелефонныхЗвонковПередСозданиемЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;	// Создавать задачи будем вручную.
КонецПроцедуры

Процедура ВыполнениеТелефонныхЗвонковПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	
	точкаМаршрута = БизнесПроцессы.ЛистОбзвона.ТочкиМаршрута.ВыполнениеТелефонныхЗвонков;
	
	описаниеСтрокиСписка = ПроверкаДанныхСервер.ПолучитьОписаниеСтрокиТабличнойЧасти(Клиенты);
	
	// Для каждой строки табличной части создадим отдельную задачу.
	Для каждого строкаКлиенты Из Клиенты Цикл
		
		описаниеСтрокиСписка.НомерСтроки = строкаКлиенты.НомерСтроки;
	
		звонокКлиентуОбъект = Задачи.ЗвонокКлиенту.СоздатьЗадачу();
		звонокКлиентуОбъект.Заполнить(Неопределено);
		ЗаполнитьЗначенияСвойств(звонокКлиентуОбъект, строкаКлиенты);
		
		звонокКлиентуОбъект.БизнесПроцесс = Ссылка;
		звонокКлиентуОбъект.ТочкаМаршрута = точкаМаршрута;
		звонокКлиентуОбъект.Наименование = точкаМаршрута.НаименованиеЗадачи;
		звонокКлиентуОбъект.КонтрольныйСрок = КонтрольныйСрок;
		
		Если Не ПроверитьЗаполнение() Тогда
		
			текстСообщения = СтрШаблон(НСтр("ru = 'Не удалось сформировать задачу по причине: %1'"), ОбщегоНазначенияСервер.ПолучитьТекстСообщенийПользователю());
			ПроверкаДанныхКлиентСервер.СообщитьОбОшибке(Отказ, текстСообщения, ЭтотОбъект,, описаниеСтрокиСписка);
			
			Прервать;
		
		КонецЕсли; 
		звонокКлиентуОбъект.Записать();
		
		ФормируемыеЗадачи.Добавить(звонокКлиентуОбъект);
	
	КонецЦикла; 
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(данныеЗаполнения, текстЗаполнения, стандартнаяОбработка)
	
	ЗаполнениеОбъектовСервер.ЗаполнитьДанныеНовогоДокумента(ЭтотОбъект, данныеЗаполнения);
	
	Если Подразделение.Пустая() Тогда
		Подразделение = ПользователиСервер.ПолучитьЗначениеНастройки("ОсновноеПодразделение");
	КонецЕсли;

КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если Подразделение.Пустая() Тогда
		
		Отказ = Истина;
		
		ПроверкаДанныхКлиентСервер.СообщитьОбОшибке(Отказ, НСтр("ru = 'Необходимо заполнить Подразделение'"), ЭтотОбъект,, );
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
