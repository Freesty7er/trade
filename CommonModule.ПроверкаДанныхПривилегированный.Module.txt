
#Область ПрочиеПроцедурыИФункции

// Выполняется проверка на факт задействования объекта в учёте путём проверки наличия ссылок
// на него во всех регистрах накопления.
//
//  Объект  - <Тип прикладного объекта>Ссылка.<Имя прикладного объекта> - Объект, проверяемый
//                 на задействование в учёте.
//
// Возвращаемое значение:
//   Булево   - Истина - объект задействован в учёте; Ложь - в противном случае.
//
Функция ЗадействованВУчёте(Объект) Экспорт

	Если Объект.Пустая() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ТипОбъекта = ТипЗнч(Объект);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "";
	
	Для каждого РегистрНакопления Из Метаданные.РегистрыНакопления Цикл
		
		Для каждого РеквизитРегистра Из РегистрНакопления.Измерения Цикл
			
			Если РеквизитРегистра.Тип.СодержитТип(ТипОбъекта) Тогда
				
				Если Не ПустаяСтрока(Запрос.Текст) Тогда
					
					Запрос.Текст = Запрос.Текст + "
					|
					|ОБЪЕДИНИТЬ ВСЕ
					|";
					
				КонецЕсли;
				
				Запрос.Текст = Запрос.Текст + "
				|ВЫБРАТЬ ПЕРВЫЕ 1
				|	РегистрНакопления.[ИмяРегистра].[ИмяРеквизита]
				|ГДЕ
				|	[ИмяРеквизита] = &Объект
				|	И Активность";
				
				Запрос.Текст = СтрЗаменить(Запрос.Текст, "[ИмяРеквизита]", РеквизитРегистра.Имя);
				
			КонецЕсли;
			
		КонецЦикла;
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "[ИмяРегистра]", РегистрНакопления.Имя);
		
	КонецЦикла;
	
	Если ПустаяСтрока(Запрос.Текст) Тогда
		Возврат Ложь;
	КонецЕсли; 
	
	Запрос.УстановитьПараметр("Объект", Объект);
	
	Возврат Не Запрос.Выполнить().Пустой();

КонецФункции // ЗадействованВУчёте()

// Выполняется проверка на факт задействования объекта в документах путём проверки наличия ссылок
// на него во всех документах.
//
//  Объект  - Ссылка - Объект, проверяемый на задействование в документах.
//
// Возвращаемое значение:
//   Булево   - Истина - элемент задействован в документа, Ложь - в противном случае.
//
Функция ЗадействованВДокументах(Объект) Экспорт

	Если Объект.Пустая() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	тзВидыДокументов = Новый ТаблицаЗначений;
	тзВидыДокументов.Колонки.Добавить("ИмяДокумента", Новый ОписаниеТипов("Строка"));
	тзВидыДокументов.Колонки.Добавить("ИмяРеквизита", Новый ОписаниеТипов("Строка"));
	
	ТипОбъекта = ТипЗнч(Объект);                            	
	
	Для каждого Документ Из Метаданные.Документы Цикл
		
		ИмяДокумента = Документ.Имя;
		
		// Переберём все реквизиты документа.
		Для каждого Реквизит Из Документ.Реквизиты Цикл
			
			Если Реквизит.Тип.СодержитТип(ТипОбъекта) И ПравоДоступа("Чтение", Реквизит) Тогда
				
				ТекущаяСтрока = тзВидыДокументов.Добавить();
				ТекущаяСтрока.ИмяДокумента = ИмяДокумента;
				ТекущаяСтрока.ИмяРеквизита = Реквизит.Имя;
				
			КонецЕсли; 
			
		КонецЦикла; 
		
		// Переберём все табличные части документа и их реквизиты.
		Для каждого ТабличнаяЧасть Из Документ.ТабличныеЧасти Цикл
			
			Для каждого Реквизит Из ТабличнаяЧасть.Реквизиты Цикл
				
				Если Реквизит.Тип.СодержитТип(ТипОбъекта) И ПравоДоступа("Чтение", Реквизит) Тогда
					
					ТекущаяСтрока = тзВидыДокументов.Добавить();
					ТекущаяСтрока.ИмяДокумента = ИмяДокумента;
					ТекущаяСтрока.ИмяРеквизита = ТабличнаяЧасть.Имя + "." + Реквизит.Имя;
					
				КонецЕсли; 
				
			КонецЦикла; 
			
		КонецЦикла; 
		
	КонецЦикла; 
	
	ТекстЗапроса = "";
	Для каждого ТекСтрока Из тзВидыДокументов Цикл
	
		Если Не ПустаяСтрока(ТекстЗапроса) Тогда
			
			ТекстЗапроса = ТекстЗапроса + "
			|
			|ОБЪЕДИНИТЬ
			|";
			
		КонецЕсли; 
		
		ИмяДокумента = ТекСтрока.ИмяДокумента;
		
		ТекстЗапроса = ТекстЗапроса + "
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ТаблицаДокумента.Ссылка
		|ИЗ
		|	Документ.[ИмяДокумента] КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.[ИмяРеквизита] = &Объект";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "[ИмяДокумента]", ИмяДокумента);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "[ИмяРеквизита]", ТекСтрока.ИмяРеквизита);
	
	КонецЦикла; 
	
	Если ПустаяСтрока(ТекстЗапроса) Тогда
		Возврат Ложь;
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("Объект", Объект);
	
	Возврат Не Запрос.Выполнить().Пустой();

КонецФункции // ЗадействованВДокументах()

#КонецОбласти 
