// Обработчик события "ПередЗаписью" объекта.
//
Процедура ПередЗаписью(Отказ)

	Если Не (ЭтоГруппа Или ОбменДанными.Загрузка) Тогда
		Если НЕ ЗначениеЗаполнено(ТипОплаты) Тогда
			СтрокаСообщения = "Не заполнено значение реквизита ""Тип оплаты""!";
			ОбщегоНазначения.СообщитьОбОшибке(СтрокаСообщения, Отказ, "Справочник: Виды оплат чека ККМ");
		КонецЕсли;

		Если ТипОплаты = Перечисления.ТипыОплатЧекаККМ.БанковскийКредит Тогда
			Если НЕ ЗначениеЗаполнено(БанкКредитор) Тогда
				СтрокаСообщения = "Не заполнено значение реквизита ""Банк-кредитор""!";
				ОбщегоНазначения.СообщитьОбОшибке(СтрокаСообщения, Отказ, "Справочник: Виды оплат чека ККМ");
			КонецЕсли;

			Если НЕ ЗначениеЗаполнено(ДоговорВзаиморасчетовБанкаКредитора) Тогда
				СтрокаСообщения = "Не заполнено значение реквизита ""Договор взаиморасчетов""!";
				ОбщегоНазначения.СообщитьОбОшибке(СтрокаСообщения, Отказ, "Справочник: Виды оплат чека ККМ");
			КонецЕсли;
		КонецЕсли;
//ВСТАВКА РЕЗОНАНС
		Если ТипОплаты = Перечисления.ТипыОплатЧекаККМ.Р_БезналичнаяОплатаНаАЗС Тогда
			Если (Р_КодВидаПлатежаДляЭККА > 4) ИЛИ (Р_КодВидаПлатежаДляЭККА = 0) Тогда
				ОбщегоНазначения.СообщитьОбОшибке("Значение реквизита ""Код для ЭККА"" НЕДОПУСТИМО ! Вводите 1-4", Отказ);
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(Р_ЭмитентПлатежногоСредстваНаАЗС) Тогда
				ОбщегоНазначения.СообщитьОбОшибке("Не заполнено значение реквизита ""Эмитент платежного средства на АЗС""!", Отказ);
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(Р_ТипЭмитента) Тогда
				ОбщегоНазначения.СообщитьОбОшибке("Не заполнено значение реквизита ""Тип эмитента платежного средства""!", Отказ);
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(Р_ВидОплатыДляОтчетаГСМ) Тогда
				ОбщегоНазначения.СообщитьОбОшибке("Не заполнено значение реквизита ""Вид оплаты для отчета по ГСМ""!", Отказ);
			КонецЕсли;
			Если Отказ Тогда
				Возврат;
			Иначе
				Выборка = Справочники.ВидыОплатЧекаККМ.Выбрать();
				Пока Выборка.Следующий() Цикл
					Если (Выборка.ТипОплаты <> ТипОплаты) Тогда
						Продолжить;
					КонецЕсли;
					Если (Выборка.Р_КодВидаПлатежаДляЭККА = Р_КодВидаПлатежаДляЭККА)
					   И (Выборка.Р_ЭмитентПлатежногоСредстваНаАЗС = Р_ЭмитентПлатежногоСредстваНаАЗС)
					   И (Выборка.Р_ВТаблицуКлиенты = Р_ВТаблицуКлиенты)
					   И (ЭтоНовый() ИЛИ (Выборка.Ссылка <> Ссылка)) Тогда
						ОбщегоНазначения.СообщитьОбОшибке("Такой вид оплаты для АЗС уже есть. НЕ уникальная комбинация полей ""Код для ЭККА"", ""Эмитент платежного средства"", ""В табл. Клиенты""", Отказ);
						Прервать;
					КонецЕсли
				КонецЦикла;
				//Если Р_ТипЭмитента = Перечисления.Р_ТипыЭмитентовНаАЗС.Системный Тогда
				//	Если Р_КодВидаПлатежаДляЭККА <> 1 Тогда
				//		ОбщегоНазначения.СообщитьОбОшибке("Для эмитента ""Системные талоны"" код для ЭККА должен быть ""1"" !", Отказ);
				//	ИначеЕсли НЕ Р_СистемныйЭмитентТалоновУникальный() Тогда
				//		ОбщегоНазначения.СообщитьОбОшибке("Тип эмитента ""Системные талоны"" УЖЕ назначен в другом виде оплаты", Отказ);
				//	КонецЕсли
				//ИначеЕсли Р_ТипЭмитента = Перечисления.Р_ТипыЭмитентовНаАЗС.PetrolPlus Тогда
				//	Если Р_КодВидаПлатежаДляЭККА <> 1 Тогда
				//		ОбщегоНазначения.СообщитьОбОшибке("Для типа эмитента ""Карточки ГСМ Petrol"" код для ЭККА должен быть ""1"" !", Отказ);
				//	ИначеЕсли НЕ Р_ПетролПлюсЭмитентУникальный() Тогда
				//		ОбщегоНазначения.СообщитьОбОшибке("Тип эмитента ""Карточки ГСМ Petrol +"" УЖЕ назначен в другом виде оплаты", Отказ);
				//	КонецЕсли
				//КонецЕсли
			КонецЕсли
		ИначеЕсли ТипОплаты = Перечисления.ТипыОплатЧекаККМ.Наличные Тогда
			Если Р_КодВидаПлатежаДляЭККА <> 0 Тогда
				ОбщегоНазначения.СообщитьОбОшибке("Значение реквизита ""Код для ЭККА"" НЕДОПУСТИМО ! Вводите 0", Отказ);
			КонецЕсли
		ИначеЕсли ТипОплаты = Перечисления.ТипыОплатЧекаККМ.Р_Неплательщик Тогда
			Если Р_КодВидаПлатежаДляЭККА <> 9 Тогда
				ОбщегоНазначения.СообщитьОбОшибке("Значение реквизита ""Код для ЭККА"" должно быть 9 для ""Тип оплаты"" Неплательщик");
				Р_КодВидаПлатежаДляЭККА = 9;
			КонецЕсли
		Иначе
			Если (Р_КодВидаПлатежаДляЭККА > 3) ИЛИ (Р_КодВидаПлатежаДляЭККА = 0) Тогда
				ОбщегоНазначения.СообщитьОбОшибке("Значение реквизита ""Код для ЭККА"" НЕДОПУСТИМО ! Вводите 1-3", Отказ);
			КонецЕсли
		КонецЕсли;
		Если ((ТипОплаты = Перечисления.ТипыОплатЧекаККМ.ПлатежнаяКарта) И РольДоступна("Р_Обмен_ПОС")) Тогда
			Если (Р_КодВидаПлатежаДляЭККА <> 3) И (Р_КодВидаПлатежаДляЭККА <> 4) Тогда
				ОбщегоНазначения.СообщитьОбОшибке("""Код для ЭККА"" для банковской карточки на POS должен быть 3", Отказ);
			КонецЕсли;
			//Если (Р_ТипЭмитента <> Перечисления.Р_ТипыЭмитентовНаАЗС.Ведомость) Тогда
			//	ОбщегоНазначения.СообщитьОбОшибке("""Тип эмитента платежного средства"" для банковской карточки на POS должен быть ""Ведомость""!", Отказ);
			//КонецЕсли;
			//Если (Р_ВидОплатыДляОтчетаГСМ <> Перечисления.Р_ВидыОплатыДляОтчетаГСМ.Карточки) И РольДоступна("Р_АЗС_ПОС") Тогда
			//	ОбщегоНазначения.СообщитьОбОшибке("""Вид оплаты для отчета по ГСМ"" для банковской карточки на POS должен быть ""Карточки""!", Отказ);
			//КонецЕсли;
			//Если НЕ ЗначениеЗаполнено(Р_ЭмитентПлатежногоСредстваНаАЗС)
			// ИЛИ НЕ ЗначениеЗаполнено(Р_ОбщегоНазначения_ПОС.Р_ДанныеЭмитентаЭквайрера(Р_ЭмитентПлатежногоСредстваНаАЗС)) Тогда
			//	ОбщегоНазначения.СообщитьОбОшибке("Не заполнено значение реквизита ""Эмитент платежного средства на POS"" или эмитент не эквайрер (нет договора эквайринга) !", Отказ);
			//КонецЕсли
		КонецЕсли;
		Если (ТипОплаты = Перечисления.ТипыОплатЧекаККМ.Р_БезналичнаяОплатаНаАЗС)
		 ИЛИ ((ТипОплаты = Перечисления.ТипыОплатЧекаККМ.ПлатежнаяКарта) И РольДоступна("Р_Обмен_ПОС")) Тогда
			Если ЗначениеЗаполнено(Р_ОфисКод) Тогда
				Если ОфисКодНеУникальный() Тогда 
					ОбщегоНазначения.СообщитьОбОшибке("Код на POS не уникальный !", Отказ);
				КонецЕсли
			Иначе
				Р_ОфисКод = ПолучитьОфисКод(Отказ);
			КонецЕсли
		КонецЕсли;
//КОНЕЦ ВСТАВКИ
	КонецЕсли;

КонецПроцедуры // ПередЗаписью()

//ВСТАВКА РЕЗОНАНС

Функция ПолучитьОфисКод(Отказ)Экспорт 
	
	НовыйКод = 0;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВидыОплатЧекаККМ.Р_ОфисКод КАК Р_ОфисКод
	|ИЗ
	|	Справочник.ВидыОплатЧекаККМ КАК ВидыОплатЧекаККМ
	|ГДЕ
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВидыОплатЧекаККМ.Р_ОфисКод, 0) = 0
	|			ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВидыОплатЧекаККМ.Р_ОфисКод";
	Таблица = Запрос.Выполнить().Выгрузить();
	
	ВсегоЭлементов	= Таблица.Количество();
	Если ВсегоЭлементов = 0 Тогда 
		МаксКод = 0;
	Иначе
		МаксКод	= Таблица[ВсегоЭлементов-1].Р_ОфисКод;
	КонецЕсли;
		
	Если МаксКод+1 > 999999999 Тогда 
		ОбщегоНазначения.СообщитьОбОшибке("Достигнута максимальная величина значения офис-кода на POS", Отказ);
		Возврат 0;
	КонецЕсли;
	
	Если ВсегоЭлементов <> МаксКод Тогда 
		//В перечне существующих кодов есть пустоты;
		//Подберем код из пустоты
		Для НомКода = 1 по ВсегоЭлементов Цикл 
			Ответ = Таблица.Найти(НомКода, "Р_ОфисКод");
			Если Ответ = Неопределено Тогда 
				НовыйКод = НомКода;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	Иначе
		НовыйКод = МаксКод+1;
	КонецЕсли;
	
	Возврат НовыйКод;
	
КонецФункции

Функция ОфисКодНеУникальный()Экспорт 
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВидыОплатЧекаККМ.Р_ОфисКод КАК Р_ОфисКод
	|ИЗ
	|	Справочник.ВидыОплатЧекаККМ КАК ВидыОплатЧекаККМ
	|ГДЕ
	|	ВидыОплатЧекаККМ.Р_ОфисКод = &Р_ОфисКод
	|"+?(ЭтоНовый()," ","	И ВидыОплатЧекаККМ.Ссылка <> &Ссылка")+"";
	Запрос.УстановитьПараметр("Р_ОфисКод", Р_ОфисКод);
	Если Не ЭтоНовый() Тогда 
		Запрос.УстановитьПараметр("Ссылка",Ссылка);
	КонецЕсли;
	Возврат НЕ Запрос.Выполнить().Пустой();
КонецФункции

Функция Р_СистемныйЭмитентТалоновУникальный()
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВидыОплаты.Ссылка
	|ИЗ
	|	Справочник.ВидыОплатЧекаККМ КАК ВидыОплаты
	|ГДЕ
	|	ВидыОплаты.Р_ТипЭмитента = ЗНАЧЕНИЕ(Перечисление.Р_ТипыЭмитентовНаАЗС.Системный)
	|"+?(ЭтоНовый()," ","	И ВидыОплаты.Ссылка <> &Ссылка")+"";
	Если Не ЭтоНовый() Тогда 
		Запрос.УстановитьПараметр("Ссылка",Ссылка);
	КонецЕсли;
	
	Таблица = Запрос.Выполнить().Выгрузить();
	Если Таблица.Количество() = 0 Тогда 
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
КонецФункции
	
Функция Р_ПетролПлюсЭмитентУникальный()
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВидыОплаты.Ссылка
	|ИЗ
	|	Справочник.ВидыОплатЧекаККМ КАК ВидыОплаты
	|ГДЕ
	|	ВидыОплаты.Р_ТипЭмитента = ЗНАЧЕНИЕ(Перечисление.Р_ТипыЭмитентовНаАЗС.PetrolPlus)
	|"+?(ЭтоНовый()," ","	И ВидыОплаты.Ссылка <> &Ссылка")+"";
	Если Не ЭтоНовый() Тогда 
		Запрос.УстановитьПараметр("Ссылка",Ссылка);
	КонецЕсли;
	
	Таблица = Запрос.Выполнить().Выгрузить();
	Если Таблица.Количество() = 0 Тогда 
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
КонецФункции

Процедура ПриЗаписи(Отказ)
	
	// регистрация изменений для всех узлов ... "ПланыОбмена.Р_POS"
	Выборка = ПланыОбмена.Р_POS.Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.Ссылка = ПланыОбмена.Р_POS.ЭтотУзел() Тогда
			Продолжить;
		КонецЕсли;
		
			ПланыОбмена.ЗарегистрироватьИзменения(Выборка.Ссылка, Ссылка);
			
	КонецЦикла;

	
КонецПроцедуры

//КОНЕЦ ВСТАВКИ
