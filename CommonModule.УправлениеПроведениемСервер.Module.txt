#Область УправлениеПроведением

// Выполняет инициализацию дополнительных свойств для проведения документа.
//
Процедура ИнициализироватьДополнительныеСвойстваДляПроведения(документСсылка, структураДополнительныеСвойства) Экспорт
	
	дляПроведения = Неопределено;
	Если Не структураДополнительныеСвойства.Свойство("ДляПроведения", дляПроведения) Тогда
		дляПроведения = Новый Структура;
	КонецЕсли;
	
	Если Не дляПроведения.Свойство("МетаданныеДокумента") Тогда
		дляПроведения.Вставить("МетаданныеДокумента", документСсылка.Метаданные());
	КонецЕсли;
	
	Если Не дляПроведения.Свойство("СтруктураВременныеТаблицы") Тогда
		дляПроведения.Вставить("СтруктураВременныеТаблицы", Новый Структура("МенеджерВременныхТаблиц", Новый МенеджерВременныхТаблиц));
	КонецЕсли;
	
	Если Не дляПроведения.Свойство("МоментВремени") Тогда
		//дляПроведения.Вставить("МоментВремени", документСсылка.МоментВремени());
		дляПроведения.Вставить("МоментВремени", Новый Граница(документСсылка.МоментВремени(), ВидГраницы.Исключая));
	КонецЕсли;

	
	структураДополнительныеСвойства.Вставить("ДляПроведения", дляПроведения);
	структураДополнительныеСвойства.Вставить("ТаблицыДляДвижений", Новый Структура);
	
КонецПроцедуры

// Формирует массив имен регистров, по которым есть движения документа.
//
Функция ПолучитьМассивИменИспользуемыхРегистров(регистратор, метаданныеДокумента)
	
	массивРегистров = Новый Массив;
	текстЗапроса = "";
	счетчикТаблиц = 0;
	счетчикЦикла = 0;
	всегоРегистров = метаданныеДокумента.Движения.Количество();
	
	Для каждого движение из метаданныеДокумента.Движения Цикл
		
		массивРегистров.Добавить(движение.Имя);
		Продолжить;
		
		Если счетчикТаблиц > 0 Тогда
			
			текстЗапроса = текстЗапроса + "
			|ОБЪЕДИНИТЬ ВСЕ
			|";
			
		КонецЕсли;
		
		счетчикТаблиц = счетчикТаблиц + 1;
		счетчикЦикла = счетчикЦикла + 1;
		
		текстЗапроса = текстЗапроса + 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|""" + движение.Имя + """ КАК ИмяРегистра
		|
		|ИЗ " + движение.ПолноеИмя() + "
		|
		|ГДЕ Регистратор = &Регистратор
		|";
		
		Если счетчикТаблиц = 256 Или счетчикЦикла = всегоРегистров Тогда
			
			запрос = Новый Запрос(текстЗапроса);
			запрос.УстановитьПараметр("Регистратор", регистратор);
			
			текстЗапроса  = "";
			счетчикТаблиц = 0;
			
			Если массивРегистров.Количество() = 0 Тогда
				
				массивРегистров = запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ИмяРегистра");
				
			Иначе
				
				выборка = запрос.Выполнить().Выбрать();
				
				Пока выборка.Следующий() Цикл
					
					массивРегистров.Добавить(выборка.ИмяРегистра);
					
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат массивРегистров;
	
КонецФункции // ПолучитьМассивИменИспользуемыхРегистров()

// Выполняет подготовку наборов записей документа.
//
Процедура ПодготовитьНаборыЗаписейКРегистрацииДвижений(структураОбъект) Экспорт
	
	Для каждого наборЗаписей из структураОбъект.Движения Цикл
		
		Если ТипЗнч(наборЗаписей) = Тип("КлючИЗначение") Тогда
			
			наборЗаписей = наборЗаписей.Значение;
			
		КонецЕсли;
		
		Если наборЗаписей.Количество() > 0 Тогда
			
			наборЗаписей.Очистить();
			
		КонецЕсли;
		
	КонецЦикла;
	
	массивИменРегистров = ПолучитьМассивИменИспользуемыхРегистров(структураОбъект.Ссылка, структураОбъект.ДополнительныеСвойства.ДляПроведения.МетаданныеДокумента);
	
	Для каждого имяРегистра из массивИменРегистров Цикл
		
		структураОбъект.Движения[имяРегистра].Записывать = Истина;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
