&НаСервере
Функция ПолучитьГраницуПоследовательности() Экспорт
	
	запрос = Новый Запрос;
	
	#Область ТекстЗапроса
	
	запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗапасыГраницы.Регистратор
	|ИЗ
	|	Последовательность.Запасы.Границы КАК ЗапасыГраницы
	|ГДЕ
	|	ЗапасыГраницы.Подразделение = &Подразделение
	|	И ЗапасыГраницы.СчетУчета = &СчетУчета
	|	И ЗапасыГраницы.МестоХранения = &МестоХранения";
	
	#КонецОбласти 
	
	запрос.УстановитьПараметр("Подразделение", Объект.Подразделение); 
	запрос.УстановитьПараметр("МестоХранения", Объект.Склад);
	запрос.УстановитьПараметр("СчетУчета", Объект.СчетУчета);
	
	выборка = запрос.Выполнить().Выбрать();
	Если выборка.Следующий() Тогда
		Возврат  выборка.Регистратор;
	Иначе
		Возврат "";
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура ПолучитьГраницуПоследовательности1() Экспорт
	
	запрос = Новый Запрос;
	
	#Область ТекстЗапроса
	
	запрос.Текст = 
	"ВЫБРАТЬ
	|	Запасы.Регистратор.Дата КАК РегистраторДата,
	|	Запасы.МоментВремени КАК МоментВремени,
	|	Запасы.Регистратор
	|ИЗ
	|	Последовательность.Запасы КАК Запасы
	|ГДЕ
	|	Запасы.Подразделение = &Подразделение
	|	И Запасы.СчетУчета = &СчетУчета
	|	И Запасы.МестоХранения = &МестоХранения
	|
	|УПОРЯДОЧИТЬ ПО
	|	МоментВремени";

	#КонецОбласти 
	
	запрос.УстановитьПараметр("Подразделение", Объект.Подразделение); 
	запрос.УстановитьПараметр("СчетУчета", Объект.СчетУчета);
	запрос.УстановитьПараметр("МестоХранения", Объект.Склад);
	
	выборка = Запрос.Выполнить().Выбрать();
	Сообщить("---------------");
	Пока выборка.Следующий() Цикл
		Сообщить(СтрШаблон("док:%1, момент времени: %2", выборка.Регистратор, выборка.МоментВремени));
	КонецЦикла;
	Сообщить("---------------");
КонецПроцедуры




&НаСервере
Функция ПоказатьГраницуНаСервере(выбПодраздел,выбСчет)
	Отбор = Новый Структура ("Подразделение");
	Отбор.Вставить("Подразделение", выбПодраздел);
	Отбор.Вставить("СчетУчета", выбСчет);
	Граница = Последовательности.ПриходыВозвраты.ПолучитьГраницу(Отбор);
	Возврат(Граница);
КонецФункции

&НаКлиенте
Процедура ПоказатьГраницу(Команда)
	ПолучитьГраницуПоследовательности1();
КонецПроцедуры

&НаСервере
Процедура ВосстановитьНаСервере()
	ГраницаДок = ПолучитьГраницуПоследовательности();
	
	//Получение списка последовательности Сервер
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПриходыВозвраты.Регистратор.Дата КАК РегистраторДата,
	|	ПриходыВозвраты.МоментВремени,
	|	ПриходыВозвраты.Регистратор,
	|	ПриходыВозвраты.Период
	|ИЗ
	|	Последовательность.ПриходыВозвраты КАК ПриходыВозвраты
	|ГДЕ
	|	ПриходыВозвраты.Подразделение = &ВыбПодраздел
	|	И ПриходыВозвраты.СчетУчета = &ВыбСчетУчета
	|
	|УПОРЯДОЧИТЬ ПО
	|	РегистраторДата";
	
	Запрос.УстановитьПараметр("ВыбПодраздел",Объект.Подразделение); 
	Запрос.УстановитьПараметр("ВыбСчетУчета",Объект.СчетУчета);
	выборка = Запрос.Выполнить().Выбрать();
	Проводить = ЛОЖЬ;
	Пока выборка.Следующий() Цикл
		Если выборка.Регистратор = ГраницаДок Тогда
			Проводить = ИСТИНА;
		КонецЕсли;
		Если Проводить тогда
			Сообщить("Проводим " + выборка.Регистратор);
		Иначе
			Сообщить("Пропускаем " + выборка.Регистратор);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура Восстановить(Команда)
	ВосстановитьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьГраницу1(Команда)
	Сообщить("Граница установлена "+ПолучитьГраницуПоследовательности());
КонецПроцедуры
