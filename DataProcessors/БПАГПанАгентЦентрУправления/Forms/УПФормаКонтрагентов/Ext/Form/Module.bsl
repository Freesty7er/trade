Перем КаталогОбмена;


&НаСервере
Процедура ОтладочноеСообщениеУП(Текст)
    НашОбъект = РеквизитФормыВЗначение("Объект");
   	НашОбъект.ОтладочноеСообщение(Текст);
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Объект.ЭтоГруппа Тогда
		Этаформа.Элементы.ГруппаСинхронизации.Видимость = Ложь;
	КонецЕсли;
	
	// Отборы по контрагентам
	ТорговыеТочки.Параметры.УстановитьЗначениеПараметра("ТекОбъект",Объект.Ссылка);	
	
	ОбновитьКартинки();	
КонецПроцедуры


&НаКлиенте
Процедура ТорговыеТочкиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПараметрыФормы = Новый Структура("Ключ", Элемент.ТекущаяСтрока);
	Форма = ПолучитьФорму("Обработка.БПАГПанАгентЦентрУправления.Форма.УПФормаТорговыхТочек",ПараметрыФормы);	
	Форма.Открыть();

КонецПроцедуры


&НаКлиенте
Процедура ТорговыеТочкиПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	// Вставить содержимое обработчика.
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ТорговыеТочкиПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	ПеретаскиваемыеЗначения = ПараметрыПеретаскивания.Значение;
	
	Если ТипЗнч(ПеретаскиваемыеЗначения) = Тип("Массив") Тогда
		Для Каждого Перетаскиваемое Из ПеретаскиваемыеЗначения Цикл
			ЗаписатьТорговуюточку(Перетаскиваемое);
		КонецЦикла;
	КонецЕсли;

	
КонецПроцедуры

Процедура ЗаписатьТорговуюточку(Ссылка)
	Если Ссылка.ПометкаУдаления Тогда
		Возврат;
	КонецЕсли;
	
	СуществующийЭлемент = Справочники.БПАГТорговыеТочки.НайтиПоРеквизиту("Договор", Ссылка,,Объект.Ссылка);
	Если СуществующийЭлемент = Справочники.БПАГТорговыеТочки.ПустаяСсылка() Тогда
		НовыйОбъект = Справочники.БПАГТорговыеТочки.СоздатьЭлемент();
		НовыйОбъект.Договор = Ссылка;
		НовыйОбъект.Наименование = Ссылка.Наименование;
		НовыйОбъект.Владелец = Объект.Ссылка;
		НовыйОбъект.Записать();
	Иначе
		Если СуществующийЭлемент.Наименование <> Ссылка.Наименование Тогда
			ОтладочноеСообщениеУП("Торговая точка, соответствующая договору """ + Ссылка.Наименование + """ уже есть в справочнике! Название: " + СуществующийЭлемент.Наименование + ".");
		Иначе
			ОтладочноеСообщениеУП("Торговая точка, соответствующая договору """ + Ссылка.Наименование + """ уже есть в справочнике!");
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьКартинку(Команда)
	// Вставить содержимое обработчика.
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогОткрытияФайла.ПредварительныйПросмотр = Истина;
	ДиалогОткрытияФайла.Заголовок = "Выберите файл";
	ДиалогОткрытияФайла.МножественныйВыбор = Истина;
	//ДиалогОткрытияФайла.ПолноеИмяФайла = КаталогКартинок;
	ДиалогОткрытияФайла.Фильтр = 
		"Все картинки (*.bmp;*.dib;*.rle;*.jpg;*.jpeg;*.tif;*.gif;*.png;*.ico;*.wmf;*.emf)|*.bmp;*.dib;*.rle;*.jpg;*.jpeg;*.tif;*.gif;*.png;*.ico;*.wmf;*.emf|" 
		+ "Веб-страницы (*.htm;*.html)|*.htm;*.html|"
		+ "Все файлы (*.*)|*.*|"
		+ "Формат bmp (*.bmp;*.dib;*.rle)|*.bmp;*.dib;*.rle|"
		+ "Формат JPEG (*.jpg;*.jpeg)|*.jpg;*.jpeg|"
		+ "Формат TIFF (*.tif)|*.tif|"
		+ "Формат GIF (*.gif)|*.gif|"
		+ "Формат PNG (*.png)|*.png|"
		+ "Формат icon (*.ico)|*.ico|"
		+ "Формат метафайл (*.wmf;*.emf)|*.wmf;*.emf|"; // картинки
		
		Если ДиалогОткрытияФайла.Выбрать() Тогда
			МассивФайлов = ДиалогОткрытияФайла.ВыбранныеФайлы;
			Для Каждого ИмяФайла Из ДиалогОткрытияФайла.ВыбранныеФайлы Цикл	
				// Проверить сущестрование
				ИмяСуществующегоФайла = ФайлСуществуетВКаталогеОбмена(ИмяФайла);
				Если ИмяСуществующегоФайла = 0 Тогда
					УстановитьКартинку(ИмяФайла);
					ОбновитьКартинки();
				Иначе
					КодВозврата = Вопрос("В каталоге картинок уже существует файл с именем " + ИмяСуществующегоФайла + "! Заменить?", РежимДиалогаВопрос.ДаНет);
					Если КодВозврата = КодВозвратаДиалога.Да Тогда
						 УстановитьКартинку(ИмяФайла);
						 ОбновитьКартинки();
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;				
		Иначе
			Возврат;
		КонецЕсли;
	КонецПроцедуры

	&НаКлиенте
Процедура УдалитьКартинку(Команда)
	// Вставить содержимое обработчика.
	ИмяТекЭлемент = ЭтаФорма.ТекущийЭлемент.Имя;
	
	Если Лев(ИмяТекЭлемент,8) = "Картинка"  Тогда
		// ОпределитьНомерСтроки
		УдалитьКартинкуИЭлемент(ИмяТекЭлемент);
	КонецЕсли;	
КонецПроцедуры

Процедура УдалитьКартинкуИЭлемент(ИмяЭлемента)	
	НомерКартинки = Число(Прав(ИмяЭлемента,СтрДлина(ИмяЭлемента)-8));
	Объект.Картинки.Удалить(НомерКартинки-1);
	ОбновитьКартинки();
КонецПроцедуры

&НаКлиенте
Процедура НайтиВИнтернете(Команда)
	// Вставить содержимое обработчика.
КонецПроцедуры

Функция ФайлСуществуетВКаталогеОбмена(ИмяФайла)
	КаталогКартинок = КаталогОбмена+"Images\";
	
	Файл = Новый Файл(ИмяФайла);
	НовоеМестоположениеКартинки = КаталогКартинок + БПАГ.ПревратитьСтрокуВТранслит(Файл.Имя);
	НовыйФайлКартинки = Новый Файл(НовоеМестоположениеКартинки);
	Если НовыйФайлКартинки.Существует() Тогда
		Возврат Файл.Имя;
	Иначе
		Возврат 0;
	КонецЕсли;
КонецФункции

Функция ПоместитьКартинкуВоВременноеХранилище(ИмяКартинки)
	КаталогКартинок= КаталогОбмена+"Images\";
	
	НайденныеФайлы = НайтиФайлы(КаталогКартинок, ИмяКартинки, Ложь);
	Если НайденныеФайлы.Количество()>0 тогда
		СсылкаНаКартинку = ПоместитьВоВременноеХранилище(Новый Картинка(НайденныеФайлы[0].ПолноеИмя, Истина), УникальныйИдентификатор);
		Возврат СсылкаНаКартинку;
	Иначе
		Сообщить("Файл "+ИмяКартинки+" не найден.");
		Возврат 0;
	КонецЕсли; 
КонецФункции

&НаКлиенте
Процедура ПолеКартинкиНажатие(Элемент, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

Процедура ОбновитьКартинки()
	
   КаталогКартинок = КаталогОбмена+"Images\";
	
	ШиринаКартинки = 128;
	ВысотаКартинки = 90;
	Промежуток = 16;
	
	// Удаляем ненужные реквизиты
	МассивНаУдаление = Новый Массив;
	МассивЭлементовНаУдаление = Новый Массив;
	Для Каждого Элемент Из Элементы Цикл
		Если Лев(Элемент.Имя,8) = "Картинка" и СокрЛП(Элемент.Вид) = "Поле картинки" Тогда
			МассивНаУдаление.Добавить(Элемент.Имя);
			МассивЭлементовНаУдаление.Добавить(Элемент);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого ТекЭлемент Из МассивЭлементовНаУдаление Цикл
		Элементы.Удалить(ТекЭлемент);
	КонецЦикла;
	
	ИзменитьРеквизиты(,МассивНаУдаление);

	
	Для Каждого тмпКартинка Из Объект.Картинки Цикл	
				
		СсылкаНаКартинку = ПоместитьКартинкуВоВременноеХранилище(тмпКартинка.Имя);
				// Отобразить на форме
		//ЭтаФорма.Картинка = СсылкаНаКартинку;
		НаименованиеНовойкартинки = "Картинка"+СокрЛП(тмпКартинка.Номерстроки);
		
		ДобавляемыеРеквизиты = Новый Массив;
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(НаименованиеНовойкартинки, Новый ОписаниеТипов("Строка"), ));
		ИзменитьРеквизиты(ДобавляемыеРеквизиты);
		НоваяКартинка = Элементы.Добавить(НаименованиеНовойкартинки, Тип("ПолеФормы"), Элементы.Коллекция);
		НоваяКартинка.Вид = ВидПоляФормы.ПолеКартинки;
		НоваяКартинка.Заголовок = "("+СокрЛП(тмпКартинка.НомерСтроки)+") "+тмпКартинка.Имя;
		НоваяКартинка.ПутьКДанным = НаименованиеНовойкартинки;
		НоваяКартинка.РастягиватьПоВертикали = Ложь;
		НоваяКартинка.РастягиватьПоГоризонтали = Ложь;
		Новаякартинка.Ширина = 15;
		НоваяКартинка.Высота = 5;
		НоваяКартинка.РазмерКартинки = РазмерКартинки.Пропорционально;
		НоваяКартинка.Гиперссылка = Истина;
		НоваяКартинка.УстановитьДействие("Нажатие", "ПолеКартинкиНажатие");
		ЭтаФорма[НаименованиеНовойкартинки] = СсылкаНаКартинку;
        
	КонецЦикла;	
КонецПроцедуры

Функция УстановитьКартинку(ИмяФайла)
	КаталогКартинок = КаталогОбмена+"Images\";
	Файл = Новый Файл(ИмяФайла);
	
	НовоеМестоположениеКартинки = КаталогКартинок + БПАГ.ПревратитьСтрокуВТранслит(Файл.Имя);
	НовыйФайлКартинки = Новый Файл(НовоеМестоположениеКартинки);
	
	Если ВРег(Файл.ПолноеИмя) = ВРег(НовоеМестоположениеКартинки) Тогда //картинка уже лежит на нужном месте
		НоваяКартинка = Объект.Картинки.Добавить();
		НоваяКартинка.Имя = НовыйФайлКартинки.Имя;
		Возврат Истина;
	ИначеЕсли НовыйФайлКартинки.Существует() Тогда
		
	КонецЕсли;
	
	Попытка
		КопироватьФайл(Файл.ПолноеИмя, НовоеМестоположениеКартинки);
		
		НоваяКартинка = Объект.Картинки.Добавить();
		НоваяКартинка.Имя = НовыйФайлКартинки.Имя;
	Исключение
		Сообщить(ОписаниеОшибки());
		Возврат Ложь;
	КонецПопытки;
	
	Возврат Истина;
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ВидПрикладногоРешения = БПАГ.ПолучитьВидПрикладногоРешения();	
	
	ЭлементОтбора = ДоговорыКонтрагентов.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ВидСравнения     = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.Использование    = Истина;
	ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	
	Если ВидПрикладногоРешения = "УТ11" Тогда
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Партнер");
		ЭлементОтбора.ПравоеЗначение   = Объект.Партнер;
	Иначе
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Контрагент");
		ЭлементОтбора.ПравоеЗначение   = Объект.Контрагент;
	КонецЕсли;

КонецПроцедуры

КаталогОбмена = БПАГ.БПАГПолучитьНастройку("1СКаталогОбмена");



