
&НаКлиенте
Процедура ТаблицаБПАГНоменклатурыНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаБПАГНоменклатурыПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)		
	Состояние("Перетаскивание номенклатуры...");
	РекурсияПеретаскивания(ПараметрыПеретаскивания.Значение, Элемент.ТекущийРодитель, 0);
	Состояние("Перетаскивание завершено.");
КонецПроцедуры

Процедура РекурсияПеретаскивания(ПараметрыПеретаскивания, Строка, Папа = 0)
	
	СпецификаПользователя = БПАГ.ПолучитьСпецификуПользователя();
	КаталогКартинок = БПАГ.БПАГПолучитьНастройку("1СКаталогОбмена") + "images/";
	КаталогКартинокПроверен = Ложь;
	КаталогКартинокСуществует = Истина;
	
	ПеретаскиваемыеЗначения = ПараметрыПеретаскивания;
	
	Если ТипЗнч(ПеретаскиваемыеЗначения) = Тип("СправочникСсылка.Номенклатура") Тогда
		Перетаскиваемое = ПеретаскиваемыеЗначения;
		Если Перетаскиваемое.ПометкаУдаления Тогда
			Возврат;
		КонецЕсли;
		
		Если Перетаскиваемое.ЭтоГруппа Тогда
			Если Строка <> Неопределено Тогда
				Если Строка.ЭтоГруппа Тогда
					Если Перетаскиваемое = Строка.Номенклатура Тогда
						Возврат;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			СуществующийЭлемент = Справочники.БПАГНоменклатура.НайтиПоРеквизиту("Номенклатура", Перетаскиваемое);
			Если СуществующийЭлемент <> Справочники.БПАГНоменклатура.ПустаяСсылка() Тогда
				Объ = СуществующийЭлемент.ПолучитьОбъект();
			Иначе
				Объ = Справочники.БПАГНоменклатура.СоздатьГруппу();
			КонецЕсли;
			
			Если Папа = 0 Тогда
				Если Строка <> Неопределено Тогда
					Если Строка.ЭтоГруппа Тогда
						Объ.Родитель = Строка
					КонецЕсли;
				КонецЕсли;
			Иначе
				Объ.Родитель = Папа;
			КонецЕсли;
				
			Объ.Номенклатура = Перетаскиваемое;
			Объ.Наименование = Перетаскиваемое.Наименование;
			
			Объ.Записать();
			
			Запрос = Новый Запрос();
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	Номенклатура.Ссылка
			|ИЗ
			|	Справочник.Номенклатура КАК Номенклатура
			|ГДЕ
			|	Номенклатура.Родитель = &Родитель
			|	И (НЕ Номенклатура.ПометкаУдаления)
			|
			|УПОРЯДОЧИТЬ ПО
			|	Номенклатура.Наименование";
			
			Запрос.УстановитьПараметр("Родитель", Перетаскиваемое);
			ТЗ = Запрос.Выполнить().Выгрузить();
			
			Для Каждого Потомок Из ТЗ Цикл
				ПараметрыПеретаскивания = Потомок.Ссылка;
				РекурсияПеретаскивания(ПараметрыПеретаскивания, Строка, Объ.Ссылка);
			КонецЦикла;
			
		Иначе
			СуществующийЭлемент = Справочники.БПАГНоменклатура.НайтиПоРеквизиту("Номенклатура", Перетаскиваемое);
			Если СуществующийЭлемент <> Справочники.БПАГНоменклатура.ПустаяСсылка() Тогда
				Объ = СуществующийЭлемент.ПолучитьОбъект();
			Иначе
				Объ = Справочники.БПАГНоменклатура.СоздатьЭлемент();
			КонецЕсли;
			
			Если Папа = 0 Тогда
				Если Строка <> Неопределено Тогда
					Если Строка.ЭтоГруппа Тогда
						Объ.Родитель = Строка
					КонецЕсли;
				КонецЕсли;
			Иначе
				Объ.Родитель = Папа;
			КонецЕсли;

			Объ.Номенклатура = Перетаскиваемое;
			Объ.Наименование = Перетаскиваемое.Наименование;
	
			//Добавим картинки из типовых
			Если КаталогКартинокСуществует Тогда
				ЗапросФайлы = Новый Запрос;
				ЗапросФайлы.Текст =
				"ВЫБРАТЬ
				|	НоменклатураПрисоединенныеФайлы.Ссылка,
				|	""0"" КАК ВидХранения,
				|	НоменклатураПрисоединенныеФайлы.ВладелецФайла.Код КАК КодВладельца,
				|	НоменклатураПрисоединенныеФайлы.Размер,
				|	НоменклатураПрисоединенныеФайлы.Наименование КАК ИмяФайла,
				|	NULL КАК РасширениеФайла,
				|	NULL КАК ХранимыйФайл
				|ИЗ
				|	Справочник.НоменклатураПрисоединенныеФайлы КАК НоменклатураПрисоединенныеФайлы
				|ГДЕ
				|	НЕ НоменклатураПрисоединенныеФайлы.ПометкаУдаления
				|	И НоменклатураПрисоединенныеФайлы.ВладелецФайла = &ВладелецФайла
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	Файлы.Ссылка,
				|	""1"",
				|	Файлы.ВладелецФайла.Код,
				|	Файлы.ТекущаяВерсияРазмер,
				|	Файлы.ПолноеНаименование,
				|	Файлы.ТекущаяВерсияРасширение,
				|	ХранимыеФайлыВерсий.ХранимыйФайл
				|ИЗ
				|	Справочник.Файлы КАК Файлы
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ХранимыеФайлыВерсий КАК ХранимыеФайлыВерсий
				|		ПО Файлы.ТекущаяВерсия = ХранимыеФайлыВерсий.ВерсияФайла
				|ГДЕ
				|	НЕ Файлы.ПометкаУдаления
				|	И Файлы.ВладелецФайла = &ВладелецФайла";
				
				ЗапросФайлы.УстановитьПараметр("ВладелецФайла", Перетаскиваемое);
				
				Выборка = ЗапросФайлы.Выполнить().Выбрать();
				
				Счет = 0;
				Пока Выборка.Следующий() Цикл
					Счет = Счет + 1;
					//Создадим каталог картинок, если он еще не создан
					Если Не КаталогКартинокПроверен Тогда
						//Проверить и создать или выдать сообщение
						Если БПАГ.БПАГПолучитьНастройку("1СКаталогОбмена") = "" Тогда
							КаталогКартинокСуществует = Ложь;
						Иначе	
							Файл = Новый Файл(КаталогКартинок);
							Если Не Файл.Существует() Тогда
								Попытка
									СоздатьКаталог(КаталогКартинок);
									КаталогКартинокСуществует = Истина;
								Исключение
									Сообщить(ОписаниеОшибки());
									КаталогКартинокСуществует = Ложь;
								КонецПопытки;
							КонецЕсли;
						КонецЕсли;
						КаталогКартинокПроверен = Истина;
					КонецЕсли;
					
					Если КаталогКартинокСуществует Тогда
						
						ФайлВКаталогеОбмена = Ложь;
						Если Выборка.ВидХранения = "0" Тогда //присоединенный
							ДанныеФайла = ПрисоединенныеФайлы.ПолучитьДанныеФайла(Выборка.Ссылка);
							ИмяФайлаТиповойКартинки = ДанныеФайла.ИмяФайла;
						ИначеЕсли Выборка.ВидХранения = "1" Тогда //справочник "Файлы"
							ИмяФайлаТиповойКартинки = Выборка.ИмяФайла + "." + Выборка.РасширениеФайла;
						КонецЕсли;
						
						Если СпецификаПользователя <> "FT" Тогда
							ИмяФайлаТиповойКартинки = СокрЛП(Выборка.КодВладельца) + "_" + ИмяФайлаТиповойКартинки;
						КонецЕсли;
						
						ИмяФайлаТиповойКартинки = СокрЛП(БПАГ.ПревратитьСтрокуВТранслит(ИмяФайлаТиповойКартинки));
						
						ФайлНаДиске = Новый Файл(КаталогКартинок + ИмяФайлаТиповойКартинки);
						Если ФайлНаДиске.Существует() Тогда
							Если ФайлНаДиске.Размер() = Выборка.Размер Тогда
								ФайлВКаталогеОбмена = Истина;
							КонецЕсли;
						КонецЕсли;
						
						Если Не ФайлВКаталогеОбмена Тогда	
							Если Выборка.ВидХранения = "0" Тогда //присоединенный
								ДвоичныеДанные = ПрисоединенныеФайлы.ПолучитьДвоичныеДанныеФайла(Выборка.Ссылка);
							ИначеЕсли Выборка.ВидХранения = "1" Тогда //справочник "Файлы"
								ДвоичныеДанные = Выборка.ХранимыйФайл.Получить();
							КонецЕсли;
							ДвоичныеДанные.Записать(КаталогКартинок + ИмяФайлаТиповойКартинки);		
						КонецЕсли;
						
						НайденнаяСтрокаТиповойКартинки = Объ.Картинки.Найти(ИмяФайлаТиповойКартинки, "Имя");
						Если НайденнаяСтрокаТиповойКартинки = Неопределено Тогда
							НоваяКартинка = Объ.Картинки.Добавить();
							НоваяКартинка.Имя = ИмяФайлаТиповойКартинки;
						КонецЕсли;
						
					КонецЕсли;					
				КонецЦикла;
			КонецЕсли;

			Объ.Записать();
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(ПеретаскиваемыеЗначения) = Тип("Массив") Тогда
		Для Каждого Перетаскиваемое Из ПеретаскиваемыеЗначения Цикл
			ПараметрыПеретаскивания = Перетаскиваемое;
			РекурсияПеретаскивания(ПараметрыПеретаскивания, Строка, 0);
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ТаблицаБПАГНоменклатурыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	СтандартнаяОбработка = Ложь;
	ПараметрыФормы = Новый Структура("Ключ", Элемент.ТекущаяСтрока);
	Форма = ПолучитьФорму("Обработка.БПАГПанАгентЦентрУправления.Форма.УПФормаНоменклатуры",ПараметрыФормы);	
	Форма.Открыть();
КонецПроцедуры


&НаКлиенте
Процедура ТаблицаБПАГНоменклатурыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Если Группа = Истина Тогда
		//СтандартнаяОбработка = Ложь;
		//ПараметрыФормы = Новый Структура("Ключ", Элемент);
		//Форма = ПолучитьФорму("Обработка.БПАГПанАгентЦентрУправления.Форма.УПФормаНоменклатуры",ПараметрыФормы);	
		//Форма.Открыть();
	КонецЕсли;
КонецПроцедуры

