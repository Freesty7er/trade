&НаКлиенте
Процедура ТаблицаБПАГСкладыПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)	
	СправочникСписокПеретаскивание(ПараметрыПеретаскивания.Значение);
КонецПроцедуры

Процедура СправочникСписокПеретаскивание(ПараметрыПеретаскивания)
	ПеретаскиваемыеЗначения = ПараметрыПеретаскивания;
	
	ВидПрикладногоРешения = БПАГ.ПолучитьВидПрикладногоРешения();
	Если ВидПрикладногоРешения = "УНФ" Тогда
		ЭтоОтдельныйЭлемент = ТипЗнч(ПеретаскиваемыеЗначения) = Тип("СправочникСсылка.СтруктурныеЕдиницы");
	Иначе
		ЭтоОтдельныйЭлемент = ТипЗнч(ПеретаскиваемыеЗначения) = Тип("СправочникСсылка.Склады");
	КонецЕсли;
	
	Если ЭтоОтдельныйЭлемент Тогда
		Перетаскиваемое = ПеретаскиваемыеЗначения;
		Если Перетаскиваемое.ПометкаУдаления Тогда
			Возврат;
		КонецЕсли;
		
		Если Перетаскиваемое.ЭтоГруппа Тогда
			
			Запрос = Новый Запрос();
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	Склады.Ссылка
			|ИЗ
			|	Справочник." + ?(ВидПрикладногоРешения = "УНФ", "СтруктурныеЕдиницы", "Склады") + " КАК Склады
			|ГДЕ
			|	Склады.Родитель = &Родитель";
			
			Запрос.УстановитьПараметр("Родитель", Перетаскиваемое);
			ТЗ = Запрос.Выполнить().Выгрузить();
			
			Для Каждого Потомок Из ТЗ Цикл
				РекурсивныеПараметрыПеретаскивания = Потомок.Ссылка;
				СправочникСписокПеретаскивание(РекурсивныеПараметрыПеретаскивания);
			КонецЦикла;
			
		Иначе
			СуществующийЭлемент = Справочники.БПАГСклады.НайтиПоРеквизиту("Склад", Перетаскиваемое);
			Если СуществующийЭлемент <> Справочники.БПАГСклады.ПустаяСсылка() Тогда
				Объ = СуществующийЭлемент.ПолучитьОбъект();
			Иначе
				Объ = Справочники.БПАГСклады.СоздатьЭлемент();
			КонецЕсли;
			
			Объ.Склад = Перетаскиваемое;
			Объ.Наименование = Перетаскиваемое.Наименование;
			Объ.Записать();
		КонецЕсли;
	ИначеЕсли ТипЗнч(ПеретаскиваемыеЗначения) = Тип("Массив") Тогда
		Для Каждого Перетаскиваемое Из ПеретаскиваемыеЗначения Цикл
			РекурсивныеПараметрыПеретаскивания = Перетаскиваемое;
			СправочникСписокПеретаскивание(РекурсивныеПараметрыПеретаскивания);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаБПАГСкладовПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	// Вставить содержимое обработчика.
	Форма = ПолучитьФорму("Обработка.БПАГПанАгентЦентрУправления.Форма.УПФормаСклада");
	Форма.Открыть();
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаБПАГСкладовПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаБПАГСкладовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
	СтандартнаяОбработка = Ложь;
	ПараметрыФормы = Новый Структура("Ключ", Элемент.ТекущаяСтрока);
	Форма = ПолучитьФорму("Обработка.БПАГПанАгентЦентрУправления.Форма.УПФормаСкладов",ПараметрыФормы);	
	Форма.Открыть();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	СписокСкладов.ОсновнаяТаблица = ?(БПАГ.ПолучитьВидПрикладногоРешения() = "УНФ", "Справочник.СтруктурныеЕдиницы", "Справочник.Склады");
КонецПроцедуры


