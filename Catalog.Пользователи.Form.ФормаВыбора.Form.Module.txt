&НаКлиенте
Перем ПерваяАктивизация;

&НаКлиенте
Перем ВыбиратьИерархическиПриОткрытии;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Значение = ХранилищеНастроекДанныхФорм.Загрузить("СправочникПользователиФормаСписка", "ВыбиратьИерархически");
	ВыбиратьИерархически = ?(Значение = Неопределено, Истина, Значение);
	
	ГруппаПользователейПриОткрытии = Справочники.ГруппыПользователей.ВсеПользователи;
	
	Элементы.ГруппыПользователей.ТекущаяСтрока = ГруппаПользователейПриОткрытии;
	
	ОбновитьСодержимоеФормыПриИзмененииГруппы();
	
	Если Параметры.ЗакрыватьПриВыборе = Неопределено ИЛИ Параметры.ЗакрыватьПриВыборе Тогда
		Заголовок = НСтр("ru = 'Выбор пользователя'");
	Иначе
		Заголовок = НСтр("ru = 'Подбор пользователей'");
		Элементы.ПользователиСписок.МножественныйВыбор = Истина;
		Элементы.ПользователиСписок.РежимВыделения = РежимВыделенияТаблицы.Множественный;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура АдминистрированиеПользователейИБ(Команда)
	//ОткрытьФорму("Справочник.Пользователи.Форма.АдминистрированиеПользователейИБ");
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПользователя(Команда)
	ОткрытьФорму("Справочник.Пользователи.ФормаОбъекта", Новый Структура("ГруппаПользователей", Элементы.ГруппыПользователей.ТекущаяСтрока));
КонецПроцедуры

&НаКлиенте
Процедура ГруппыПользователейПриАктивизацииСтроки(Элемент)
	
	Если ПерваяАктивизация = Неопределено ИЛИ ПерваяАктивизация = Истина Тогда
		ПерваяАктивизация = Ложь;
		Возврат;
	КонецЕсли;
	
	ПодключитьОбработчикОжидания("ОбработкаОжидания", 0.2, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОжидания()
	
	ОбновитьСодержимоеФормыПриИзмененииГруппы();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбиратьИерархическиПриИзменении(Элемент)
	
	ОбновитьСодержимоеФормыПриИзмененииГруппы();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСодержимоеФормыПриИзмененииГруппы()
	
	Если Элементы.ГруппыПользователей.ТекущаяСтрока = Справочники.ГруппыПользователей.ВсеПользователи Тогда
		Элементы.ГруппаПоказыватьПользователейДочернихГрупп.ТекущаяСтраница = 
				Элементы.ГруппаНельзяУстановитьСвойство;
		ПользователиСписок.Параметры.УстановитьЗначениеПараметра("ВыбиратьИерархически", Истина);
	Иначе
		Элементы.ГруппаПоказыватьПользователейДочернихГрупп.ТекущаяСтраница = 
				Элементы.ГруппаУстановитьСвойство;
		ПользователиСписок.Параметры.УстановитьЗначениеПараметра("ВыбиратьИерархически", ВыбиратьИерархически);
	КонецЕсли;
	
	ПользователиСписок.Параметры.УстановитьЗначениеПараметра("ГруппаПользователей", Элементы.ГруппыПользователей.ТекущаяСтрока);
	ПользователиСписок.Параметры.УстановитьЗначениеПараметра("ПустойУникальныйИдентификатор", Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000"));
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	Если ВыбиратьИерархическиПриОткрытии <> ВыбиратьИерархически Тогда
		СохранитьНастройкиФормы(ВыбиратьИерархически);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СохранитьНастройкиФормы(ВыбиратьИерархически)
	
	ХранилищеНастроекДанныхФорм.Сохранить("СправочникПользователиФормаСписка", "ВыбиратьИерархически", ВыбиратьИерархически);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ВыбиратьИерархическиПриОткрытии = ВыбиратьИерархически;
КонецПроцедуры

&НаКлиенте
Процедура СоздатьГруппуДоступа(Команда)
	ОткрытьФорму("Справочник.ГруппыПользователей.ФормаОбъекта");
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененСоставГруппыПользователей" Тогда
		Если Параметр = Элементы.ГруппыПользователей.ТекущаяСтрока Тогда
			Элементы.ПользователиСписок.Обновить();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПользователиСписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	ОткрытьФорму("Справочник.Пользователи.ФормаОбъекта",
			Новый Структура("ГруппаПользователей,ЗначениеКопирования",
						Элементы.ГруппыПользователей.ТекущаяСтрока,
						Элемент.ТекущиеДанные.Ссылка));
	
КонецПроцедуры

&НаКлиенте
Процедура ПользователиСписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОповеститьОВыборе(ВыбраннаяСтрока);
КонецПроцедуры
