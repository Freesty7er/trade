
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УправлениеНебольшойФирмойСервер.ЗаполнитьШапкуДокумента(
		Объект,
		,
		Параметры.ЗначениеКопирования,
		Параметры.Основание,
		СостояниеДокумента,
		КартинкаСостоянияДокумента,
		РазрешеноПроведение,
		Параметры.ЗначенияЗаполнения
	);
	
	ИспПланыПродаж = Константы.кпкИспользоватьПланыПродаж.Получить();
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) тогда
		
		КонстантаИнтервала = Константы.кпкИнтервалПП.Получить();
		
		Если КонстантаИнтервала = -1 Тогда
			ВыбИнтервал = КонстантаИнтервала;
			Объект.Дата = НачалоМесяца(Объект.Дата);
			Объект.ИнтервалПланирования = День(КонецМесяца(Объект.Дата));
		ИначеЕсли (КонстантаИнтервала = 7) ИЛИ (КонстантаИнтервала = 14) ИЛИ (КонстантаИнтервала = 28) Тогда
			ВыбИнтервал = КонстантаИнтервала;
			Объект.ИнтервалПланирования = КонстантаИнтервала;
		Иначе
			ВыбИнтервал = 10;
			Объект.ИнтервалПланирования = Объект.КонстантаИнтервала;
			ПоказатьИнтервал(Истина);
		КонецЕсли;
		
		ТипПлана = Константы.кпкРежимТоргТочек.Получить();
		
		Если ИспПланыПродаж Тогда
			Объект.ВидОперации = Перечисления.кпкВидыОперацийПланирования.ПланПосещенийИПродажи;
		Иначе
			Объект.ВидОперации = Перечисления.кпкВидыОперацийПланирования.ПланированиеПосещений; 
		КонецЕсли;		
		
		Объект.ТипПлана = Константы.кпкРежимТоргТочек.Получить();
		
	КонецЕсли;
	
	ТаблицаПоДням();
	
	УстановитьВыбИнтервал();
	
	УстановитьВидимостьЭлементовФормы();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьЭлементовФормы()
		
	// В зависимости от вида операции
	Если Объект.ВидОперации = Перечисления.кпкВидыОперацийПланирования.ПланированиеПосещений Тогда
		Элементы.СтраницаПланПосещений.Видимость = Истина;
		Элементы.СтраницаПланПродаж.Видимость 	  = Ложь;
	ИначеЕсли Объект.ВидОперации = Перечисления.кпкВидыОперацийПланирования.ПланированиеПродаж Тогда
		Элементы.СтраницаПланПосещений.Видимость = Ложь;
		Элементы.СтраницаПланПродаж.Видимость 	  = Истина;
	Иначе
		Элементы.СтраницаПланПосещений.Видимость = Истина;
		Элементы.СтраницаПланПродаж.Видимость 	  = Истина;
	КонецЕсли;
	
	Если Объект.ТипПлана = 1 тогда
		флТипПлана = Истина;
	Иначе
		флТипПлана = Ложь;
	КонецЕсли;
	
	Элементы.ДниТорговаяТочка.Видимость = флТипПлана;			
	Элементы.ДниТорговаяТочкаЗона.Видимость   = флТипПлана;			
	Элементы.ДниТорговаяТочкаАдрес.Видимость   = флТипПлана;			

	Элементы.ДниКнопкаТорговымиТочкамиАгента.Видимость =  флТипПлана;
	
КонецПроцедуры //УстановитьВидимостьЭлементовФормы()

&НаСервере
Процедура ПоказатьИнтервал(Состояние)
	Элементы.ИнтервалПланирования.Видимость = Состояние;
КонецПроцедуры //ПоказатьИнтервал()

&НаКлиенте
Процедура ВыбИнтервалПриИзменении(Элемент)
	Если ВыбИнтервал = 10 Тогда
		ПоказатьИнтервал(Истина);
		ТаблицаПоДням();
	ИначеЕсли ВыбИнтервал = -1 Тогда
		Объект.Дата = НачалоМесяца(Объект.Дата);
		Объект.ИнтервалПланирования = День(КонецМесяца(Объект.Дата));
		ПоказатьИнтервал(Ложь);
		ТаблицаПоДням();
	ИначеЕсли (ВыбИнтервал = 7) ИЛИ (ВыбИнтервал = 14) ИЛИ (ВыбИнтервал = 28) Тогда
		Объект.ИнтервалПланирования = ВыбИнтервал;
		ПоказатьИнтервал(Ложь);
		ТаблицаПоДням();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ТаблицаПоДням()
	
	КолДней = Объект.ИнтервалПланирования;
	ТекущаяДата = Объект.Дата;
	
	Для День = 1 По КолДней Цикл
		Наим = "ДниД" + Строка(День);
		Элемент = Элементы.Найти(Наим);
		Элемент.Заголовок = Строка(День(ТекущаяДата)) + " " + кпкАгентПлюс.ДеньНеделиСтр(ДеньНедели(ТекущаяДата));
		Элемент.Видимость = Истина;
		
		ЦветВоск = Новый Цвет(255, 64, 128);
		ЦветСуб  = Новый Цвет(255, 128, 184);
		ЦветБудн = Новый Цвет(234, 229, 216);
		
		Если ДеньНедели(ТекущаяДата) = 7 Тогда // воскресенье
			Элемент.ЦветФонаЗаголовка   = ЦветВоск;  
			Элемент.ЦветФонаПодвала = ЦветВоск;  
		ИначеЕсли ДеньНедели(ТекущаяДата) = 6 Тогда //суббота
			Элемент.ЦветФонаЗаголовка   = ЦветСуб; 
			Элемент.ЦветФонаПодвала = ЦветСуб;  
		Иначе //остальные дни
			Элемент.ЦветФонаЗаголовка   = ЦветБудн; 
			Элемент.ЦветФонаПодвала = ЦветБудн;
		КонецЕсли;
		
		ТекущаяДата = ТекущаяДата + 86400;
		
	КонецЦикла;
	
	Если КолДней < 31 Тогда
		Для День = КолДней + 1 По 31 Цикл
			Наим = "ДниД" + Строка(День);
			Элемент = Элементы.Найти(Наим);
			Элемент.Видимость = Ложь;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры //ТаблицаПоДням()

&НаСервере
Процедура УстановитьВыбИнтервал()
	
	Если Объект.ИнтервалПланирования = День(КонецМесяца(Объект.Дата)) Тогда
		ВыбИнтервал = -1;
		ПоказатьИнтервал(Ложь);
	ИначеЕсли (Объект.ИнтервалПланирования = 7) ИЛИ (Объект.ИнтервалПланирования = 14) ИЛИ (Объект.ИнтервалПланирования = 28) Тогда
		ВыбИнтервал = Объект.ИнтервалПланирования;
		ПоказатьИнтервал(Ложь);
	Иначе
		ВыбИнтервал = 10;
		ПоказатьИнтервал(Истина);
	КонецЕсли;
	
КонецПроцедуры //УстановитьВыбИнтервал()


&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	Если ВыбИнтервал = -1 Тогда
		Если Объект.Дата <> НачалоМесяца(Объект.Дата) Тогда
			Объект.Дата = НачалоМесяца(Объект.Дата);
			Предупреждение("При выбранном значении интервала планирования: Месяц, дата документа должна быть первым числом месяца!");
		КонецЕсли;
	КонецЕсли;
	ТаблицаПоДням();
	
КонецПроцедуры


&НаКлиенте
Процедура ВидОперацииПриИзменении(Элемент)
	
	УстановитьВидимостьЭлементовФормы();	
	
КонецПроцедуры


&НаСервере
Функция ПолучитьДанныеАгентНачалоВыбораИзСписка()
	
	СписокАгентов = Новый СписокЗначений;
	
	СтруктураДанные = Новый Структура();
	СтруктураДанные.Вставить("СписокАгентов", СписокАгентов);

	ТабАгентов = кпкАгентПлюс.ПолучитьТаблицуТорговыхАгентов();	
	
	Для Каждого СтрАгент Из ТабАгентов Цикл
		СписокАгентов.Добавить(СтрАгент.Агент, СтрАгент.Агент.Наименование);
	КонецЦикла;

	Возврат СтруктураДанные;

КонецФункции 


&НаКлиенте
Процедура АгентНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;	
	АгентНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка);
	
КонецПроцедуры


&НаКлиенте
Процедура АгентНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	Элемент.СписокВыбора.Очистить();
	
	СтруктураДанные = ПолучитьДанныеАгентНачалоВыбораИзСписка();
	
	Для каждого ЭлСписка Из СтруктураДанные.СписокАгентов Цикл
		Элемент.СписокВыбора.Добавить(ЭлСписка.Значение, ЭлСписка.Представление);
	КонецЦикла;
	
КонецПроцедуры


&НаКлиенте
Процедура АгентОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если ЗначениеЗаполнено(Объект.Агент) Тогда
		
		Структура = Новый Структура("Объект", Объект.Агент);
		Массив = Новый Массив;
		Массив.Добавить(Структура);
		Ключ = Новый("РегистрСведенийКлючЗаписи.кпкСведенияАгента", Массив); 
		
		ПараметрАгент = Новый Структура("Ключ", Ключ);

		Форма = ПолучитьФорму("РегистрСведений.кпкСведенияАгента.ФормаЗаписи",ПараметрАгент);
		Форма.Открыть();
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ДниПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ТекущиеДанные = Элементы.Дни.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено тогда
		Возврат;
	КонецЕсли;
	
	КолДней = Объект.ИнтервалПланирования;
	ВсегоПосещений = 0;	
	Для День = 1 По КолДней Цикл
		Наим = "Д" + Строка(День);
		ВсегоПосещений = ВсегоПосещений + ТекущиеДанные[Наим];
	КонецЦикла;
	
	ТекущиеДанные.ВсегоПосещений = ВсегоПосещений;
	
КонецПроцедуры


&НаКлиенте
Процедура КомандаЗаполнитьНаОснованииДругогоПлана(Команда)
	
	Если Объект.Дни.Количество()<>0 Тогда
		Если Вопрос("Очистить табличую часть перед заполнением?", РежимДиалогаВопрос.ДаНет, 10) = КодВозвратаДиалога.Да Тогда
			Объект.Дни.Очистить();
		КонецЕсли;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", Истина);
	
	ОткрытьФорму("Документ.кпкПланПосещений.ФормаВыбора", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТорговымиТочкамиАгента()
	
	Выборка = Справочники.кпкТорговыеТочки.Выбрать(, , Новый Структура("Агент", Объект.Агент));
	
	Пока Выборка.Следующий() Цикл
		Если Выборка.ПометкаУдаления Тогда Продолжить КонецЕсли;
		Стр = Объект.Дни.Добавить();
		Стр.ТорговаяТочка = Выборка.Ссылка;				
		Стр.Контрагент = Выборка.Ссылка.Владелец;				
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаполнитьТорговымиТочкамиАгента(Команда)
	
	Если Объект.Дни.Количество() <> 0 Тогда
		Если Вопрос("Табличная часть будет очищена. Продолжить?", РежимДиалогаВопрос.ДаНет, 10) = КодВозвратаДиалога.Да Тогда
			Объект.Дни.Очистить();
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьТорговымиТочкамиАгента();
	
КонецПроцедуры


&НаКлиенте
Процедура КомандаОчистить(Команда)
	
	Если Вопрос("Табличная часть будет очищена. Продолжить?", РежимДиалогаВопрос.ДаНет, 10) = КодВозвратаДиалога.Да Тогда
		Объект.Дни.Очистить();
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЗаполнитьПоЗонам(ВыбранноеЗначение)
	
		СтруктураОтбора = Новый Структура;
		СтруктураОтбора.Вставить("Зона", ВыбранноеЗначение);
		Выборка = Справочники.кпкТорговыеТочки.Выбрать( , , СтруктураОтбора, );
		Пока Выборка.Следующий() Цикл
			ПараметрыОтбора = Новый Структура;
			ПараметрыОтбора.Вставить("ТорговаяТочка", Выборка.Ссылка);
			
			Если Выборка.Владелец.Пустая() Тогда
				Продолжить;
			ИначеЕсли Выборка.Владелец.ПометкаУдаления Тогда
				Продолжить;
			ИначеЕсли Выборка.ПометкаУдаления Тогда
				Продолжить;
			ИначеЕсли Объект.Дни.НайтиСтроки(ПараметрыОтбора).Количество() > 0 Тогда
				Продолжить;
			КонецЕсли;
			Стр = Объект.Дни.Добавить();
			Стр.ТорговаяТочка = Выборка.Ссылка;				
			Стр.Контрагент = Выборка.Ссылка.Владелец;				
		КонецЦикла;
	
КонецФункции

&НаСервере
Функция СписокТорговыхТочекКонтрагента(ВыбранноеЗначение)
	
	Меню = Новый СписокЗначений;
	Выборка = Справочники.кпкТорговыеТочки.Выбрать( , ВыбранноеЗначение, , );				
	Пока Выборка.Следующий() Цикл
		Меню.Добавить(Выборка.Ссылка, СокрЛП(Выборка.НаименованиеПолное) + " " + СокрЛП(Выборка.Адрес));
	КонецЦикла;
	
	Возврат Меню;
	
КонецФункции

&НаСервере
Функция ЗаполнитьПланПосещенийПоДокументу(ВыбранноеЗначение)
	
	Если ВыбранноеЗначение.ТипПлана <> Объект.ТипПлана Тогда
		Возврат Ложь;	
	Иначе
		Если Объект.Дни.Количество() = 0 Тогда 
			Объект.Дни.Загрузить(ВыбранноеЗначение.Дни.Выгрузить());					
		Иначе
			
			Сообщить("Заполнение табличной части ""Дни""", СтатусСообщения.Информация);
			Сообщить("----------------------------------");
			
			НоваяТаблица = ВыбранноеЗначение.Дни.Выгрузить();
			
			Для Каждого СтрокаТаб Из НоваяТаблица Цикл
				Пар = ?(Объект.ТипПлана <> 1, "Контрагент", "ТорговаяТочка");	
				ПараметрыОтбора = Новый Структура;
				ПараметрыОтбора.Вставить(Пар, СтрокаТаб[Пар]);
				
				
				Если Объект.Дни.НайтиСтроки(ПараметрыОтбора).Количество() > 0 Тогда
					ПарСтр = ?(Объект.ТипПлана <> 1, "Контрагент " + СтрокаТаб[Пар] + " уже внесен в план!", "Торговая точка " + СтрокаТаб[Пар] + " уже внесена в план!");
					Сообщить(ПарСтр, СтатусСообщения.Внимание);
					Продолжить;  
				Иначе	
					Стр = Объект.Дни.Добавить();
					ЗаполнитьЗначенияСвойств(Стр, СтрокаТаб);
					
				КонецЕсли;  												
			КонецЦикла;
			
		КонецЕсли;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции


&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
		
		Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.кпкЗоны") Тогда
			Если Вопрос("Ввести в документ все торговые точки с выбранной зоной?", РежимДиалогаВопрос.ДаНет, 10) = КодВозвратаДиалога.Да Тогда
				
				ЗаполнитьПоЗонам(ВыбранноеЗначение);				
				
			КонецЕсли;
			
		ИначеЕсли ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Контрагенты") Тогда
			
			Если Объект.ТипПлана <> 1 Тогда
				ПараметрыОтбора = Новый Структура;
				ПараметрыОтбора.Вставить("Контрагент", ВыбранноеЗначение);
				
				Если Объект.Дни.НайтиСтроки(ПараметрыОтбора).Количество() > 0 Тогда
					Предупреждение("Данный контрагент уже внесен в план", 10);
					Возврат;
				Иначе
					Стр = Объект.Дни.Добавить();
					Стр.Контрагент = ВыбранноеЗначение;
				КонецЕсли;
			Иначе 
				Меню = СписокТорговыхТочекКонтрагента(ВыбранноеЗначение);
				
				Если Меню.Количество() = 0 Тогда
					Предупреждение("У данного контрагента нет торговых точек!", 10);
					Возврат;
				КонецЕсли;					
					
				ВыбТочка = ИсточникВыбора.ВыбратьИзМеню(Меню);
				Если ВыбТочка = Неопределено Тогда
					Предупреждение("Не выбрана торговая точка!", 10);
					Возврат;
				КонецЕсли;
				
				ПараметрыОтбора = Новый Структура;
				ПараметрыОтбора.Вставить("ТорговаяТочка", ВыбТочка.Значение);
				
				Если Объект.Дни.НайтиСтроки(ПараметрыОтбора).Количество() > 0 Тогда
					Предупреждение("Данная точка уже внесена в план!", 10);
					Возврат;
				Иначе
					Стр = Объект.Дни.Добавить();
					Стр.ТорговаяТочка = ВыбТочка.Значение;
					Стр.Контрагент = ВыбранноеЗначение;
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли ТипЗнч(ВыбранноеЗначение) = Тип("ДокументСсылка.кпкПланПосещений") Тогда
			
			Если Элементы.Страницы.ТекущаяСтраница.Имя = "СтраницаПланПосещений" тогда  // Если заполняем план посещений
				
				Если НЕ ЗаполнитьПланПосещенийПоДокументу(ВыбранноеЗначение) тогда
					Предупреждение("Тип построения выбранного плана (по клиентам/торговым точкам) отличается от текущего! Не хватает данных для корректного заполнения текущего плана! Обратите внимание на константу ""Режим использования торговых точек""!");
					Возврат;
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
		Модифицированность = Истина;
	
КонецПроцедуры


&НаКлиенте
Процедура ПланПосещенийПоКлиентам(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", Ложь);
	
	ОткрытьФорму("Справочник.Контрагенты.ФормаВыбора", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры


&НаКлиенте
Процедура ПланПосещенийПоЗонам(Команда)
	
	Если Объект.ТипПлана <> 1 Тогда
		Предупреждение("Подбор по зонам возможен только при построении плана посещений по торговым точкам!");
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", Ложь);
	
	ОткрытьФорму("Справочник.кпкЗоны.ФормаВыбора", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура СдвигВлево()
	
	Док = РеквизитФормыВЗначение("Объект");

	ПерваяКолонка = Док.Дни.ВыгрузитьКолонку("Д1");
	Для Индекс = 1 По Док.ИнтервалПланирования - 1 Цикл
		Док.Дни.ЗагрузитьКолонку(Док.Дни.ВыгрузитьКолонку("Д" + (Индекс + 1)), "Д" + Индекс);
	КонецЦикла;
	Док.Дни.ЗагрузитьКолонку(ПерваяКолонка, "Д" + Док.ИнтервалПланирования);
	
	ЗначениеВРеквизитФормы(Док, "Объект");

КонецПроцедуры

&НаКлиенте
Процедура ПланПосещенийСдвигВлево(Команда)
	
	СдвигВлево();
	Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
Процедура СдвигВправо()
	
	Док = РеквизитФормыВЗначение("Объект");
	
	ПоследняяКолонка = Док.Дни.ВыгрузитьКолонку("Д" + Док.ИнтервалПланирования);
	Для Индекс = 1 По Док.ИнтервалПланирования - 1 Цикл
		Док.Дни.ЗагрузитьКолонку(Док.Дни.ВыгрузитьКолонку("Д" + (Док.ИнтервалПланирования - Индекс)), "Д" + (Док.ИнтервалПланирования - Индекс + 1));
	КонецЦикла;
	Док.Дни.ЗагрузитьКолонку(ПоследняяКолонка, "Д1");
	
	ЗначениеВРеквизитФормы(Док, "Объект");

КонецПроцедуры


&НаКлиенте
Процедура ПланПосещенийСдвигВправо(Команда)
	
	СдвигВправо();	
	Модифицированность = Истина;
	
КонецПроцедуры

