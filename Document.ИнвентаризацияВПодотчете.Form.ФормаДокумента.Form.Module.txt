#Область ОбработчикиСобытий

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	// Обработка события изменения даты.
	ДатаПередИзменением = ДатаДокумента;
	ДатаДокумента = Объект.Дата;
	
	Если Год(Объект.Дата) <> Год(ДатаПередИзменением) Тогда
		
		// Присвоим новый номер
		Объект.Номер = "";
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УправлениеНебольшойФирмойСервер.ЗаполнитьШапкуДокумента(
		Объект,
		,
		Параметры.ЗначениеКопирования,
		Параметры.Основание,
		СостояниеДокумента,
		КартинкаСостоянияДокумента,
		РазрешеноПроведение,
		Параметры.ЗначенияЗаполнения
	);
	
	ДатаДокумента = Объект.Дата;
	
КонецПроцедуры

&НаКлиенте
Процедура СоставПриИзменении(Элемент)
		
	СтрокаТабличнойЧасти = Элементы.Состав.ТекущиеДанные;
	СтрокаТабличнойЧасти.СуммаФакт = СтрокаТабличнойЧасти.Цена * СтрокаТабличнойЧасти.КоличествоФакт;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКоманд

&НаКлиенте
Процедура Заполнить(Команда)
	ЗаполнитьНаСервере();
КонецПроцедуры

#КонецОбласти 

#Область ПрочиеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьНаСервере()
	
	запрос = Новый Запрос;
	
	#Область ТекстЗапроса
	
	запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаФакт.Номенклатура,
	|	ТаблицаФакт.КоличествоФакт
	|ПОМЕСТИТЬ ВТ_ТаблицаФакт
	|ИЗ
	|	&ТаблицаФакт КАК ТаблицаФакт
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.Номенклатура,
	|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) КАК Цена,
	|	СУММА(ВложенныйЗапрос.Количество) КАК Количество,
	|	СУММА(ВложенныйЗапрос.Сумма) КАК Сумма,
	|	СУММА(ВложенныйЗапрос.КоличествоФакт) КАК КоличествоФакт,
	|	СУММА(ВложенныйЗапрос.КоличествоФакт * ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0)) КАК СуммаФакт
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВТ_ТаблицаФакт.Номенклатура КАК Номенклатура,
	|		ВТ_ТаблицаФакт.КоличествоФакт КАК КоличествоФакт,
	|		0 КАК Количество,
	|		0 КАК Сумма
	|	ИЗ
	|		ВТ_ТаблицаФакт КАК ВТ_ТаблицаФакт
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПартииТоваровНаСкладахОстатки.Номенклатура,
	|		0,
	|		ПартииТоваровНаСкладахОстатки.КоличествоОстаток,
	|		ПартииТоваровНаСкладахОстатки.СтоимостьОстаток
	|	ИЗ
	|		РегистрНакопления.ПартииТоваровНаСкладах.Остатки(
	|				&МоментВремени,
	|				Подразделение = &Подразделение
	|					И МОЛ = &Сотрудник) КАК ПартииТоваровНаСкладахОстатки) КАК ВложенныйЗапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|				&МоментВремени,
	|				Подразделение = &Подразделение
	|					И ТипЦен = ЗНАЧЕНИЕ(Справочник.ТипыЦен.Закупка)) КАК ЦеныНоменклатурыСрезПоследних
	|		ПО ВложенныйЗапрос.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Номенклатура,
	|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0)";
	
	#КонецОбласти 
	
	Если Объект.Ссылка.Пустая() Тогда
		МоментВремени = Новый Граница(КонецДня(Объект.Дата), ВидГраницы.Включая);
	Иначе
		МоментВремени = Новый Граница(Объект.Ссылка.МоментВремени(), ВидГраницы.Исключая);
	КонецЕсли;
	
	запрос.УстановитьПараметр("Подразделение", 	Объект.Подразделение);
	запрос.УстановитьПараметр("Сотрудник", 		Объект.Сотрудник);
	запрос.УстановитьПараметр("МоментВремени", 	МоментВремени);
	запрос.УстановитьПараметр("ТаблицаФакт", Объект.Состав.Выгрузить());
	
	Объект.Состав.Загрузить(запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

#КонецОбласти