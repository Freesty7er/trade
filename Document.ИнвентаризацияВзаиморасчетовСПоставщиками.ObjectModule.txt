
#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(отказ, режимПроведения)
	
	// ВЗАИМОРАСЧЕТЫ
	Взаиморасчеты 	= Движения.ВзаиморасчетыСПоставщиками;
	ФинРезультат 	= Движения.ФинансовыйРезультат;
	ПартииТоваров 	= Движения.ПартииТоваровНаСкладах;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ОтделыВМагазинах.Ссылка КАК ЦФО
	|ИЗ
	|	Документ.РасходнаяНакладная КАК РасходнаяНакладная
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОтделыВМагазинах КАК ОтделыВМагазинах
	|		ПО РасходнаяНакладная.Контрагент = ОтделыВМагазинах.Магазин
	|			И (РасходнаяНакладная.Организация = ОтделыВМагазинах.Организация
	|				ИЛИ ОтделыВМагазинах.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))
	|ГДЕ
	|	РасходнаяНакладная.Ссылка = &Ссылка");
	
	
	Для Каждого СтрокаСостава Из СтрокиДокумента Цикл
		
		Движение = Взаиморасчеты.Добавить();
		
		Движение.Период 		= ЭтотОбъект.Дата;
		Движение.Подразделение	= ЭтотОбъект.Подразделение;
		Движение.ЦФО			= строкаСостава.ЦФО;
		Движение.Контрагент		= СтрокаСостава.Контрагент;
		
		// Ввод остатков
		Если ОперацияДокумента = Справочники.ОперацииДокументов.ОстаткиПоПоставщикам Тогда
			
			Движение.ВидДвижения 	= ВидДвиженияНакопления.Приход;
			
			Если СтрокаСостава.Контрагент.ТипВеденияВзаиморасчетов = Перечисления.ТипыВеденияВзаиморасчетов.ПоЗаказамПоставщику Тогда
				Движение.КредитныйДокумент = СтрокаСостава.КредитныйДокумент;
			КонецЕсли;
			
			Движение.Сумма 		= СтрокаСостава.Долг;
			
			Движение.ЦФО 		= СтрокаСостава.ЦФО;
			
			// Допроведем розницу
			Если ЗначениеЗаполнено(СтрокаСостава.ЦФО) Тогда
				
				Движение = ПартииТоваров.Добавить();
				
				Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
				Движение.Период 		= Дата;
				Движение.Подразделение 	= Подразделение;
				Движение.Склад 			= СтрокаСостава.ЦФО.Склад;
				Движение.ЦФО			= СтрокаСостава.ЦФО;
				Движение.Стоимость 		= -1*СтрокаСостава.Долг;
				Движение.ПродСтоимость 	= -1*СтрокаСостава.Долг;
				
			КонецЕсли;
			
		ИначеЕсли ОперацияДокумента = Справочники.ОперацииДокументов.СписаниеЗадолженностиПоставщиков Тогда
			
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			
			Если ЗначениеЗаполнено(СтрокаСостава.КредитныйДокумент) Тогда
				Движение.КредитныйДокумент = СтрокаСостава.КредитныйДокумент;
			Иначе
				
			КонецЕсли;
			Движение.Сумма 			= СтрокаСостава.Долг;
			
			// фин. результат
			Движение = ФинРезультат.Добавить();
			Движение.Период = Дата;
			Движение.Подразделение	= Подразделение;
			Движение.РазделительУчёта	= РазделительУчёта;
			
			Движение.СтатьяДоходов 	= Справочники.СтатьиДоходов.СписаниеКредиторскойЗадолженности;
			Движение.СуммаДоходов	= -1*СтрокаСостава.Долг;
			
			
		КонецЕсли;
		 		
	КонецЦикла;
	
	Взаиморасчеты.Записать();
	ФинРезультат.Записать();
	ПартииТоваров.Записать();
	
КонецПроцедуры

Процедура ПередЗаписью(отказ, режимЗаписи, режимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Подразделение.Пустая() Тогда
		
		ТекстСообщения = НСтр("ru = 'Запись невозможна без заполнения Подразделения.'");
		ПроверкаДанныхКлиентСервер.СообщитьОбОшибке(отказ, текстСообщения, ЭтотОбъект, "Подразделение");
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(объектКопирования)
	
	ЗаполнениеОбъектовСервер.ЗаполнитьДанныеСкопированногоДокумента(ЭтотОбъект, ОбъектКопирования);
	
КонецПроцедуры

#КонецОбласти 