Перем Валюта;
Перем ВидСкидки;
Перем Условие;

&НаСервере
Процедура ИзменитьСоставНабораНаСервере(ПараметрыРасчета)
	
	ОбъектДокумента = РеквизитФормыВЗначение("Объект");
	ОбъектДокумента.СоставНабора.Загрузить(ПараметрыРасчета.СоставНабора);
	ЗначениеВРеквизитФормы(ОбъектДокумента, "Объект");

КонецПроцедуры

&НаКлиенте
Процедура СоставБонусовОткрытие(Команда)
	//СтандартнаяОбработка = Ложь;
	Если Объект.КоличествоБонусов = 0 Тогда
		Сообщить("Укажите количество бонусов");
		Возврат;
	КонецЕсли;

	//СтрокаТабличнойЧасти = Элементы.Бонусы.ТекущиеДанные;

	СтруктураПараметров = Новый Структура();
	//СтруктураПараметров.Вставить("Номенклатура", СтрокаТабличнойЧасти.Номенклатура);
	//СтруктураПараметров.Вставить("Количество", СтрокаТабличнойЧасти.Количество);
	СтруктураПараметров.Вставить("Количество", Объект.КоличествоБонусов);

	//СтруктураПараметров.Вставить("ЕдиницаИзмерения", СтрокаТабличнойЧасти.ЕдиницаИзмерения);
	СтруктураПараметров.Вставить("ДокументОбъект", Объект);
	////СтруктураПараметров.Вставить("ФормаДокумента", ЭтаФорма);
	СтруктураПараметров.Вставить("ИмяТабличнойЧасти", "Бонусы");
	//СтруктураПараметров.Вставить("КлючСтроки", СтрокаТабличнойЧасти.КлючСтроки -1);
	СтруктураПараметров.Вставить("КлючСтроки", 2);

	СтруктураПараметров.Вставить("ЗаголовокФормы", "Укажите состав бонусов");

	                             
	ПараметрыРасчета = ОткрытьФормуМодально("Документ.УстановкаСкидокНоменклатуры.Форма.ФормаУпр", Новый Структура("СтруктураИсходныхПараметров", СтруктураПараметров), ЭтаФорма);
	
	Если ПараметрыРасчета <> Неопределено Тогда
		ОчиститьСообщения();
		ИзменитьСоставНабораНаСервере(ПараметрыРасчета);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СоставАкцииОткрытие(Команда)
	//СтандартнаяОбработка = Ложь;
	
	//СтрокаТабличнойЧасти = Элементы.Бонусы.ТекущиеДанные;

	Если Объект.КоличествоАкция = 0 Тогда
		Сообщить("Укажите количество акции");
		Возврат;
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура();
	//СтруктураПараметров.Вставить("Номенклатура", СтрокаТабличнойЧасти.Номенклатура);
	СтруктураПараметров.Вставить("Количество", Объект.КоличествоАкция);
	//СтруктураПараметров.Вставить("ЕдиницаИзмерения", СтрокаТабличнойЧасти.ЕдиницаИзмерения);
	СтруктураПараметров.Вставить("ДокументОбъект", Объект);
	////СтруктураПараметров.Вставить("ФормаДокумента", ЭтаФорма);
	СтруктураПараметров.Вставить("ИмяТабличнойЧасти", "Бонусы");
	//СтруктураПараметров.Вставить("КлючСтроки", СтрокаТабличнойЧасти.КлючСтроки -1);
	СтруктураПараметров.Вставить("КлючСтроки", 1);

	СтруктураПараметров.Вставить("ЗаголовокФормы", "Укажите состав комплекта, на который дается бонус");

	                             
	ПараметрыРасчета = ОткрытьФормуМодально("Документ.УстановкаСкидокНоменклатуры.Форма.ФормаУпр", Новый Структура("СтруктураИсходныхПараметров", СтруктураПараметров), ЭтаФорма);
	
	Если ПараметрыРасчета <> Неопределено Тогда
		ОчиститьСообщения();
		ИзменитьСоставНабораНаСервере(ПараметрыРасчета);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Параметры.Ключ.Пустая() Тогда // проверить объект на то, что он еще не внесен в ИБ

		//Если НЕ ЗначениеЗаполнено(ПараметрОснование) И ПараметрОбъектКопирования = Неопределено Тогда
			//Элементы.Валюта = Валюта;
			//Элементы.ВидСкидки = ВидыСкидки;
			//Элементы.Условие = Условие;
		//КонецЕсли;

		ИзменитьТипЗначенияУсловия();
		//Объект.ВидОперации = Перечисления.ВидыОперацийУстановкаСкидокНоменклатуры.ПоНоменклатуре;
	КонецЕсли;

	СтруктураКолонок = Новый Структура();

	// Установить колонки, видимостью которых пользователь управлять не может.
	СтруктураКолонок.Вставить("Номенклатура");

	// Установить ограничение - изменять видимоть колонок для таличного поля 
	// "ТаблицаСкидокНаценок".
	//ОбработкаТабличныхЧастей.УстановитьИзменятьВидимостьКолонокТабЧасти(мКолонкиТовары, СтруктураКолонок);

	// Запомнить текущие значения реквизитов формы.
	//мТекущаяДатаДокумента = Дата;

	// Установить видимость колонок "ХарактеристикаНоменклатуры".
	Элементы.СоставНабора.Видимость = Ложь;
	
	УстановитьВидимость();

	// Установка текущей страницы
	Страницы = Новый СписокЗначений;
	Страницы.Добавить("Товары",              "Товары");
	Страницы.Добавить("ЦеновыеГруппы",       "ЦеновыеГруппы");
	Страницы.Добавить("Бонусы",              "Бонусы");
	Страницы.Добавить("ПолучателиСкидки",    "ПолучателиСкидки");
	//РаботаСДиалогами.УстановкаТекущейСтраницы(ЭтотОбъект, ЭлементыФормы.ОсновнаяПанель, Страницы,);

	//// Установить активный реквизит.
	//РаботаСДиалогами.АктивизироватьРеквизитВФорме(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

Процедура УстановитьВидимость()

	ВидОперацииНеБонусы = (Объект.ВидОперации <> Перечисления.ВидыОперацийУстановкаСкидокНоменклатуры.НатуральныеСкидки);
	ВидОперацииНоменклатура = (Объект.ВидОперации = Перечисления.ВидыОперацийУстановкаСкидокНоменклатуры.ПоНоменклатуре);

	Элементы.Товары.Видимость = ВидОперацииНоменклатура И Не Объект.ДляВсейНоменклатуры;
	Элементы.ЦеновыеГруппы.Видимость = (Объект.ВидОперации = Перечисления.ВидыОперацийУстановкаСкидокНоменклатуры.ПоЦеновымГруппам);
	Элементы.ГруппаБонусы.Видимость = Не ВидОперацииНеБонусы;
	Элементы.ГруппаВремяПоДнямНедели.Видимость = Объект.ПоДнямНедели;

	Если ВидОперацииНоменклатура И Объект.ДляВсейНоменклатуры И Не Объект.ПоДнямНедели Тогда
		Элементы.Страницы.Видимость = Ложь;
	Иначе
		Элементы.Страницы.Видимость = Истина;
	КонецЕсли;

	Элементы.ДляВсейНоменклатуры.Видимость = ВидОперацииНоменклатура;

	Если ВидОперацииНоменклатура И Объект.ДляВсейНоменклатуры Тогда
		Элементы.Качество.АвтоОтметкаНезаполненного = Истина;
	Иначе
		Элементы.Качество.АвтоОтметкаНезаполненного = Ложь;
		Элементы.Качество.ОтметкаНезаполненного = Ложь;
	КонецЕсли;

	Элементы.Валюта.Видимость                 = ВидОперацииНеБонусы;
	//Элементы.НадписьВалюта.Видимость          = ВидОперацииНеБонусы;

	//Элементы.ТипСкидкиНаценки.Видимость       = ВидОперацииНеБонусы;
	//Элементы.НадписьТипСкидки.Видимость       = ВидОперацииНеБонусы;

	Элементы.Условие.Видимость                = ВидОперацииНеБонусы;
	//Элементы.НадписьУсловие.Видимость         = ВидОперацииНеБонусы;

	Элементы.ПроцентСкидкиНаценки.Видимость   = ВидОперацииНеБонусы;
	//Элементы.НадписьПроцент.Видимость         = ВидОперацииНеБонусы;

	Элементы.ОграничениеСкидкиНаценки.Видимость      = ВидОперацииНеБонусы;
	//Элементы.НадписьОграничение.Видимость     = ВидОперацииНеБонусы;

	Элементы.Качество.Видимость               = ВидОперацииНеБонусы;
	//Элементы.НадписьКачество.Видимость        = ВидОперацииНеБонусы;

	Если Не ВидОперацииНеБонусы Тогда
		Элементы.Валюта.АвтоВыборНезаполненного = Ложь;
		Элементы.Валюта.ОтметкаНезаполненного = Ложь;
	Иначе
		Элементы.Валюта.АвтоВыборНезаполненного = Истина;
		Если НЕ ЗначениеЗаполнено(Валюта) Тогда
			Элементы.Валюта.ОтметкаНезаполненного = Истина;
		КонецЕсли;
	КонецЕсли;

	Если Объект.Условие = Перечисления.УсловияСкидкиНаценки.БезУсловий Или Не ВидОперацииНеБонусы Тогда
		Элементы.ЗначениеУсловия.Видимость = Ложь;
		//Элементы.НадписьЗначениеУсловия.Видимость = Ложь;
	Иначе
		Элементы.ЗначениеУсловия.Видимость = Истина;
		//Элементы.НадписьЗначениеУсловия.Видимость = Истина;
	КонецЕсли;

	СтрВалюта = ?(НЕ ЗначениеЗаполнено(Валюта), "<>", Валюта);

	//мКолонкиТовары.ОграничениеСкидкиНаценки.ТекстШапки = "Огр. (" + СтрВалюта + ")";

	//Если Элементы.Условие = Перечисления.УсловияСкидкиНаценки.ПоСуммеДокумента Тогда
	//	Элементы.НадписьЗначениеУсловия.Заголовок= "Значение условия (" + СтрВалюта + "):";
	//Иначе
	//	Элементы.НадписьЗначениеУсловия.Заголовок= "Значение условия:";
	//КонецЕсли;

	//Элементы.НадписьОграничение.Заголовок= "Ограничение (" + СтрВалюта + "):";

	//мКолонкиЦеновыеГруппы.ОграничениеСкидкиНаценки.ТекстШапки = "Огр. (" + СтрВалюта + ")";

	Если (Объект.Условие = Перечисления.УсловияСкидкиНаценки.ПоДисконтнойКарте
	 Или Объект.Условие = Перечисления.УсловияСкидкиНаценки.ПоВидуДисконтныхКарт) Тогда
	   //И мУчетнаяПолитика.ИспользоватьСкидкиПоДисконтнойКарте
	   //И мУчетнаяПолитика.ИспользоватьНакопительныеСкидкиПоДисконтнымКартам
	   //И Элементы.ДляВсейНоменклатуры
	   //И мУчетнаяПолитика.СпособИспользованияНакопительныхСкидок = Перечисления.СпособыИспользованияНакопительныхСкидок.СкидкиНакапливаютсяПоДисконтнойКарте Тогда
		//мКолонкиТовары.ПроцентСкидкиНаценки.ТолькоПросмотр = Истина;
		//мКолонкиЦеновыеГруппы.ПроцентСкидкиНаценки.ТолькоПросмотр = Истина;
		Элементы.ПроцентСкидкиНаценки.ТолькоПросмотр = Истина;
	Иначе
		//мКолонкиТовары.ПроцентСкидкиНаценки.ТолькоПросмотр = Ложь;
		//мКолонкиЦеновыеГруппы.ПроцентСкидкиНаценки.ТолькоПросмотр = Ложь;
		Элементы.ПроцентСкидкиНаценки.ТолькоПросмотр = Ложь;
	КонецЕсли;

КонецПроцедуры // УстановитьВидимость()

Процедура ИзменитьТипЗначенияУсловия()

	Если Объект.Условие = Перечисления.УсловияСкидкиНаценки.ПоДисконтнойКарте Тогда
		Объект.ЗначениеУсловия.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.ИнформационныеКарты");
	ИначеЕсли Объект.Условие = Перечисления.УсловияСкидкиНаценки.ПоВидуДисконтныхКарт Тогда
		Объект.ЗначениеУсловия.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.ВидыДисконтныхКарт");
	Иначе
		КвалификаторыЧисла = Новый КвалификаторыЧисла(15, 2, ДопустимыйЗнак.Неотрицательный);
		Элементы.ЗначениеУсловия.ОграничениеТипа = Новый ОписаниеТипов("Число", КвалификаторыЧисла);
	КонецЕсли;

	ЗначениеУсловия = Элементы.ЗначениеУсловия.ОграничениеТипа.ПривестиЗначение(ЗначениеУсловия);

	Если Объект.Условие = Перечисления.УсловияСкидкиНаценки.БезУсловий Тогда
		Объект.ЗначениеУсловия = 0;
	КонецЕсли;

КонецПроцедуры // ИзменитьТипЗначенияУсловия()


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Ключ.Пустая() Тогда // проверить объект на то, что он еще не внесен в ИБ

		//Если НЕ ЗначениеЗаполнено(ПараметрОснование) И ПараметрОбъектКопирования = Неопределено Тогда
			Этаформа.Объект.Валюта = Константы.ВалютаУчета.Получить();
			Этаформа.Объект.ВидСкидки = Перечисления.ВидыСкидок.Розничная;
			Этаформа.Объект.Условие = Перечисления.УсловияСкидкиНаценки.ПоСуммеДокумента;
			Этаформа.Объект.ВидОперации = Перечисления.ВидыОперацийУстановкаСкидокНоменклатуры.ПоНоменклатуре;
		//КонецЕсли;

		//ИзменитьТипЗначенияУсловия();

	КонецЕсли;


КонецПроцедуры


&НаКлиенте
Процедура ВидОперацииПриИзменении(Элемент)
	
	УстановитьВидимость();
	Объект.Товары.Очистить();
	Объект.Бонусы.Очистить();
	Объект.СоставНабора.Очистить();
	Объект.ЦеновыеГруппы.Очистить();
	Объект.КоличествоАкция = 0;
	Объект.КоличествоБонусов = 0;
	//Если Объект.ВидОперации = Перечисления.ВидыОперацийУстановкаСкидокНоменклатуры.ПоНоменклатуре Тогда
	//	ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы["Товары"];
	//ИначеЕсли ВидОперации = Перечисления.ВидыОперацийУстановкаСкидокНоменклатуры.ПоЦеновымГруппам Тогда
	//	ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы["ЦеновыеГруппы"];
	//ИначеЕсли ВидОперации = Перечисления.ВидыОперацийУстановкаСкидокНоменклатуры.НатуральныеСкидки Тогда
	//	ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы["Бонусы"];
	//КонецЕсли;


	//
	//
	//Элементы.Товары.Видимость = ВидОперацииНоменклатура И Не Объект.ДляВсейНоменклатуры;
	//Элементы.ЦеновыеГруппы.Видимость = (Элементы.ВидОперации = Перечисления.ВидыОперацийУстановкаСкидокНоменклатуры.ПоЦеновымГруппам);
	//Элементы.ГруппаБонусы.Видимость = Не ВидОперацииНеБонусы;
	//Элементы.ВремяПоДнямНедели.Видимость = Элементы.ПоДнямНедели;

КонецПроцедуры


&НаКлиенте
Процедура ДляВсейНоменклатурыПриИзменении(Элемент)
	
	УстановитьВидимость();

КонецПроцедуры


&НаКлиенте
Процедура ПоДнямНеделиПриИзменении(Элемент)
	
	УстановитьВидимость();

	Если Объект.ПоДнямНедели Тогда //Элемент.Значение Тогда
		Если Объект.ВремяПоДнямНедели.Количество() = 0 Тогда
			//ЗаполнитьПоДнямНедели(Объект.ВремяПоДнямНедели);

			Объект.ОбщееВремяНачала = '00010101000000';
			Объект.ОбщееВремяОкончания = '00010101235959';
		КонецЕсли;
	КонецЕсли;


КонецПроцедуры

