
#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(данныеЗаполнения, стандартнаяОбработка)
	
	ЗаполнениеОбъектовСервер.ЗаполнитьДанныеНовогоДокумента(ЭтотОбъект, данныеЗаполнения);
	
	Если Подразделение.Пустая() Тогда
		Подразделение = ПользователиСервер.ПолучитьЗначениеНастройки("ОсновноеПодразделение");
	КонецЕсли; 
	
	Если Ответственный.Пустая() Тогда
		Ответственный = ПользователиСервер.ПолучитьЗначениеНастройки("ОсновнойОтветственный");
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(объектКопирования)
	ЗаполнениеОбъектовСервер.ЗаполнитьДанныеСкопированногоДокумента(ЭтотОбъект, объектКопирования);
КонецПроцедуры

Процедура ОбработкаПроведения(отказ, режимПроведения)
	
	Движения.ПартииТоваровНаСкладах.Записывать = Истина;
	
	запрос = Новый Запрос;
	
	#Область ТекстЗапроса
	
	запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	СборкаТоваров.Дата КАК Период,
	|	СборкаТоваров.Подразделение,
	|	СборкаТоваров.Склад,
	|	СборкаТоваров.Номенклатура,
	|	СборкаТоваров.Номенклатура.СчетУчета КАК СчетУчета,
	|	ВалютаУчета.Значение КАК Валюта,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыХраненияЗапасов.НаСкладе) КАК ВидХранения,
	|	СборкаТоваров.Количество,
	|	СборкаТоваров.СуммаДокумента КАК Стоимость,
	|	СборкаТоваров.СуммаДокумента КАК СтоимостьВал,
	|	СборкаТоваров.Номенклатура.СчетУчета КАК КорСчет
	|ИЗ
	|	Документ.СборкаТоваров КАК СборкаТоваров,
	|	Константа.ВалютаУчета КАК ВалютаУчета
	|ГДЕ
	|	СборкаТоваров.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	СборкаТоваровИсходнаяНоменклатура.Ссылка.Дата,
	|	СборкаТоваровИсходнаяНоменклатура.Ссылка.Подразделение,
	|	СборкаТоваровИсходнаяНоменклатура.Склад,
	|	СборкаТоваровИсходнаяНоменклатура.Номенклатура,
	|	СборкаТоваровИсходнаяНоменклатура.Номенклатура.СчетУчета,
	|	ВалютаУчета.Значение,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыХраненияЗапасов.НаСкладе),
	|	СборкаТоваровИсходнаяНоменклатура.Количество,
	|	СборкаТоваровИсходнаяНоменклатура.Сумма,
	|	СборкаТоваровИсходнаяНоменклатура.Сумма,
	|	СборкаТоваровИсходнаяНоменклатура.Номенклатура.СчетУчета
	|ИЗ
	|	Документ.СборкаТоваров.ИсходнаяНоменклатура КАК СборкаТоваровИсходнаяНоменклатура,
	|	Константа.ВалютаУчета КАК ВалютаУчета
	|ГДЕ
	|	СборкаТоваровИсходнаяНоменклатура.Ссылка = &Ссылка";
	
	#КонецОбласти
	
	запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Движения.ПартииТоваровНаСкладах.Загрузить(запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

Процедура ПередЗаписью(отказ, режимЗаписи, режимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		// Обмен данными. Проверки не выполняем.
		Возврат;
	КонецЕсли;
	
	Если Подразделение.Пустая() Тогда
		
		текстСообщения = НСтр("ru = 'Запись невозможна без заполнения Подразделения.'");
		ПроверкаДанныхКлиентСервер.СообщитьОбОшибке(отказ, текстСообщения, ЭтотОбъект, "Подразделение");
		
	КонецЕсли;

	
	Если ПометкаУдаления = Ссылка.ПометкаУдаления Тогда
		
		Если РежимЗаписи <> РежимЗаписиДокумента.ОтменаПроведения Тогда
			
			Если Не Отказ Тогда
				
				СуммаДокумента = ОбщегоНазначенияСервер.ПолучитьСуммуДокумента(ЭтотОбъект, "ИсходнаяНоменклатура");
				
				Цена = СуммаДокумента / Количество;
				
			КонецЕсли; 
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(отказ, проверяемыеРеквизиты)
	
	проверяемыеРеквизиты.Добавить("ТипЦен");
	проверяемыеРеквизиты.Добавить("Номенклатура");
	проверяемыеРеквизиты.Добавить("ИсходнаяНоменклатура.Номенклатура");
	проверяемыеРеквизиты.Добавить("ИсходнаяНоменклатура.Склад");
	
	
КонецПроцедуры


#КонецОбласти