
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СегментыСервер.ПриСозданииНаСервере(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(отказ, текущийОбъект, параметрыЗаписи)

	СегментыСервер.ПередЗаписьюНаСервере(этаФорма, текущийОбъект);

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УправлениеДоступностью();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// Обработчик подсистемы запрета редактирования реквизитов объектов
	//ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытий

&НаКлиенте
Процедура СпособФормированияПриИзменении(элемент)

	Если Объект.СпособФормирования <>
		ПредопределенноеЗначение("Перечисление.СпособыФормированияСегментов.ФормироватьВручную") Тогда
		
		Элементы.ДатаОчистки.ТолькоПросмотр = Истина;
		Объект.ДатаОчистки = '00010101';
		
	Иначе
		
		Элементы.ДатаОчистки.ТолькоПросмотр = Ложь;
		
	КонецЕсли;
	
	Если Объект.СпособФормирования <> 
		ПредопределенноеЗначение("Перечисление.СпособыФормированияСегментов.ПериодическиОбновлять") Тогда
		
		Объект.ПроверятьНаВхождениеПриСозданииНового = Ложь;
		
	КонецЕсли;
	
	УправлениеДоступностью();

КонецПроцедуры

&НаКлиенте
Процедура СпособФормированияНачалоВыбора(элемент, данныеВыбора, стандартнаяОбработка)
	
	Если Не Объект.Ссылка.Пустая() Тогда
		
		стандартнаяОбработка = Ложь;
		
		ПоказатьВопрос(Новый ОписаниеОповещения("СпособФормированияНачалоВыбораЗавершение", ЭтотОбъект), НСтр("ru = 'Текущий состав сегмента будет очищен. Продолжить?'"), РежимДиалогаВопрос.ОКОтмена);
        
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СпособФормированияНачалоВыбораЗавершение(результатВопроса, дополнительныеПараметры) Экспорт
	
	ответ = РезультатВопроса;
	
	Если ответ = КодВозвратаДиалога.ОК Тогда
		
		СегментыВызовСервера.Очистить(Объект.Ссылка);
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиКоманд

&НаКлиенте
Процедура Сформировать(команда)

	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПоказатьОповещениеПользователя(НСтр("ru='Сначала необходимо записать сегмент.'"));
		Возврат;
	КонецЕсли;

	Если Объект.СпособФормирования = ПредопределенноеЗначение("Перечисление.СпособыФормированияСегментов.ФормироватьДинамически") Тогда
		ПоказатьОповещениеПользователя(НСтр("ru='Формирование доступно только для нединамических сегментов.'"));
		Возврат;
	КонецЕсли;
	
	Если Модифицированность Тогда
		
		ПоказатьВопрос(Новый ОписаниеОповещения("СформироватьЗавершение", ЭтотОбъект), 
				НСтр("ru='Перед формированием необходимо записать сегмент. Записать?'"),
				РежимДиалогаВопрос.ДаНет);
    	Возврат;
	КонецЕсли;

	СформироватьФрагмент();
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьЗавершение(результатВопроса, дополнительныеПараметры) Экспорт
	
	Если результатВопроса = КодВозвратаДиалога.Нет Тогда
		Возврат;
	Иначе
		Записать();
	КонецЕсли;
	
	СформироватьФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура МаркетинговыеМероприятия(команда)

	//ОткрытьФорму("Справочник.МаркетинговыеМероприятия.ФормаСписка",
	//	Новый Структура("Отбор",Новый Структура("СегментПартнеров",Объект.Ссылка)),
	//	ЭтаФорма,
	//	КлючУникальности,
	//	Окно);

КонецПроцедуры

&НаКлиенте
Процедура Настройки(команда)

	заголовокФормыНастройкиСхемыКомпоновкиДанных = НСтр("ru = 'Настройки сегмента ""%ИмяСегмента%""'");
	заголовокФормыНастройкиСхемыКомпоновкиДанных = СтрЗаменить(заголовокФормыНастройкиСхемыКомпоновкиДанных, "%ИмяСегмента%", объект.Наименование);
	
	адреса = СегментыВызовСервера.ПолучитьАдресаСхемыКомпоновкиДанныхВоВременномХранилище(
		Объект.Ссылка,
		Объект.ИмяШаблонаСКД,
		АдресСКД, 
		АдресНастроекСКД,
		УникальныйИдентификатор);
	
	результат = Неопределено;

	
	ОткрытьФорму("ОбщаяФорма.УпрощеннаяНастройкаСхемыКомпоновкиДанных",
		Новый Структура(
			"АдресСхемыКомпоновкиДанных,
			|АдресНастроекКомпоновкиДанных,
			|ИсточникШаблонов,
			|Заголовок,
			|НеПомещатьНастройкиВСхемуКомпоновкиДанных,
			|НеНастраиватьУсловноеОформление,
			|НеНастраиватьПорядок,
			|НеНастраиватьВыбор,
			|УникальныйИдентификатор,
			|ИмяШаблонаСКД,
			|ВозвращатьИмяТекущегоШаблонаСКД",
			Адреса.СхемаКомпоновкиДанных,
			Адреса.НастройкиКомпоновкиДанных,
			Объект.Ссылка,
			ЗаголовокФормыНастройкиСхемыКомпоновкиДанных,
			Истина,
			Истина,
			Истина,
			Истина,
			УникальныйИдентификатор,
			Объект.ИмяШаблонаСКД,
			Истина),,,,, Новый ОписаниеОповещения("НастройкиЗавершение", ЭтотОбъект, Новый Структура("Адреса", Адреса)), РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);

КонецПроцедуры

&НаКлиенте
Процедура НастройкиЗавершение(результат, дополнительныеПараметры) Экспорт
	
	адреса = дополнительныеПараметры.Адреса;
	
	
	Если Не результат = Неопределено Тогда
		
		Объект.ИмяШаблонаСКД = результат.ИмяТекущегоШаблонаСКД;
		
		изменения = СегментыВызовСервера.ПрименитьИзмененияКСхемеКомпоновкиДанных(
				Объект.Ссылка,
				Объект.ИмяШаблонаСКД, 
				Адреса.СхемаКомпоновкиДанных,
				Результат.АдресХранилищаНастройкиКомпоновщика,
				УникальныйИдентификатор);
		
		Объект.ИмяШаблонаСКД = изменения.ИмяШаблонаСКД;
		ПредставлениеШаблонаСКД = изменения.ПредставлениеШаблонаСКД;
		АдресСКД = изменения.АдресСКД;
		АдресНастроекСКД = изменения.АдресНастроекСКД;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура НастроитьРасписание(команда)
	
	диалогРасписания = Новый ДиалогРасписанияРегламентногоЗадания(Расписание);
	
	диалогРасписания.Показать(Новый ОписаниеОповещения("НастроитьРасписаниеЗавершение", ЭтотОбъект, Новый Структура("диалогРасписания", диалогРасписания)));
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьРасписаниеЗавершение(расписание1, дополнительныеПараметры) Экспорт
	
	диалогРасписания = ДополнительныеПараметры.диалогРасписания;
	
	
	Если Расписание1 Тогда
		
		модифицированность = Истина;
		расписание         = диалогРасписания.Расписание;
		расписаниеСтрокой  = Строка(Расписание);
		
	КонецЕсли;

КонецПроцедуры

// Команда подсистемы "Запрет редактирования реквизитов"
&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
	Если НЕ Объект.Ссылка.Пустая() Тогда
		
		Результат = Неопределено;

		
		//ОткрытьФорму("Справочник.СегментыПартнеров.Форма.РазблокированиеРеквизитов",,,,,, Новый ОписаниеОповещения("Подключаемый_РазрешитьРедактированиеРеквизитовОбъектаЗавершение", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъектаЗавершение(Результат1, ДополнительныеПараметры) Экспорт
	
	Результат = Результат1;
	
	Если ТипЗнч(Результат) = Тип("Массив") И Результат.Количество() > 0 Тогда
		
		//ЗапретРедактированияРеквизитовОбъектовКлиент.УстановитьДоступностьЭлементовФормы(ЭтаФорма, Результат);
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УправлениеДоступностью()
	
	Элементы.СтраницаРасписание.Доступность =
		(Объект.СпособФормирования = ПредопределенноеЗначение("Перечисление.СпособыФормированияСегментов.ПериодическиОбновлять"));
	Элементы.ПроверятьНаВхождениеПриСозданииНового.Доступность =
		(Объект.СпособФормирования = ПредопределенноеЗначение("Перечисление.СпособыФормированияСегментов.ПериодическиОбновлять"));
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьФрагмент()
	
	СегментыВызовСервера.Сформировать(Объект.Ссылка);
	
	ПоказатьОповещениеПользователя(	НСтр("ru='Формирование сегмента партнеров'"),,	НСтр("ru='Сегмент сформирован.'"));

КонецПроцедуры

#КонецОбласти 