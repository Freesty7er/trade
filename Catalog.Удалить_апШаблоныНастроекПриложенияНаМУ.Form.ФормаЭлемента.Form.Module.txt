
&НаКлиенте
Процедура ДеревоНастроекПриАктивизацииЯчейки(Элемент)
	
	ТекДанные = Элемент.ТекущиеДанные;
	
	Если Не ТекДанные = Неопределено Тогда
		
		ИмяКлюча = ТекДанные.Ключ;
		
		ПолеФормы = Элемент.ПодчиненныеЭлементы.ДеревоНастроекЗначение;
		
		ПолеФормы.КнопкаРегулирования = Ложь;
		
		ЗначУмолчание = ТекДанные.ЗначениеПоУмолчанию;
		
		ПолеФормы.КнопкаСпискаВыбора  = Ложь;
		
		Если ПолеФормы.СписокВыбора.Количество() <> 0 Тогда
			ПолеФормы.КнопкаСпискаВыбора    = Истина;
			ПолеФормы.КнопкаВыбора 		    = Ложь;
			ПолеФормы.КнопкаОчистки 		= Ложь;				
			ПолеФормы.КнопкаОткрытия	 	= Ложь;
		ИначеЕсли ТипЗнч(ЗначУмолчание) = Тип("СписокЗначений") Тогда			
			ПолеФормы.КнопкаСпискаВыбора  = Ложь;
			ПолеФормы.КнопкаОчистки 	  = Ложь;
			ПолеФормы.КнопкаВыбора		  = Истина;				
			ПолеФормы.КнопкаОткрытия	  = Ложь;							
		ИначеЕсли ТипЗнч(ЗначУмолчание) = Тип("Строка") Тогда			
			ПолеФормы.КнопкаВыбора	 	    = Ложь;
			ПолеФормы.КнопкаОчистки 		= Истина;
			ПолеФормы.КнопкаОткрытия	 	= Ложь;			
		ИначеЕсли ТипЗнч(ЗначУмолчание)= Тип("Число") Тогда						
			ПолеФормы.КнопкаВыбора 		 	= Истина;
			ПолеФормы.КнопкаОчистки 		= Истина;
			ПолеФормы.КнопкаОткрытия	 	= Ложь;
			ПолеФормы.МинимальноеЗначение   = 0;	 			
		ИначеЕсли ТипЗнч(ЗначУмолчание)= Тип("Булево") Тогда
			ПолеФормы.КнопкаСпискаВыбора  	= Ложь;
			ПолеФормы.КнопкаВыбора 			= Истина;
		    ПолеФормы.КнопкаОчистки 		= Ложь;
			ПолеФормы.КнопкаОткрытия	 	= Ложь;
		ИначеЕсли ТипЗнч(ЗначУмолчание)= Тип("Дата") Тогда
		Иначе // Ссылочный тип данных
			ПолеФормы.КнопкаСпискаВыбора 	= Ложь;
			ПолеФормы.КнопкаВыбора	 		= Истина;
			ПолеФормы.КнопкаОчистки 		= Истина;
			ПолеФормы.КнопкаОткрытия	 	= Истина;			
		КонецЕсли; 	
		
		ПолеФормы.ТолькоПросмотр = ТекДанные.ТолькоПросмотр;		
		
		//Если ИмяКлюча = "ПарольНастроек" Тогда
		//	ПолеФормы.РежимПароля = Истина;
		//Иначе
		//	ПолеФормы.РежимПароля = Ложь;
		//КонецЕсли;  
						
		Расшифровка = СокрЛП(ТекДанные.Подсказка);
				
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоНастроекПередНачаломИзменения(Элемент, Отказ)
	
	// Создание описателя типов для таблицы значений
	Массив = Новый Массив;
	Массив.Добавить(ТипЗнч(Элемент.ТекущиеДанные.ЗначениеПоУмолчанию));
	ОписаниеТипов = Новый ОписаниеТипов(Массив);
	
	Элемент.ТекущийЭлемент.ОграничениеТипа = ОписаниеТипов;
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьНачальныеНастройки()
	ОбъектСправочник = РеквизитФормыВЗначение("Объект"); 	
	
	РезультатХранилища = ОбъектСправочник.Настройки.Получить();
	
	Если Не РезультатХранилища = Неопределено Тогда
		ЗначениеВРеквизитФормы(РезультатХранилища, "ДеревоНастроекАгента");
	КонецЕсли;	 	
		
	КаталогКартинок = "";
			
КонецПроцедуры //ИнициализироватьНачальныеНастройки

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ИнициализироватьНачальныеНастройки();
	
	ФормированиеДерева();
КонецПроцедуры

&НаСервере 
Функция ОпределитьНужноеЗначение(КлючНастройки)
	
	ТекНастройка = Неопределено;
	
	Если Не ДеревоНастроекАгента = Неопределено Тогда
		ЗначДерево = ДанныеФормыВЗначение(ДеревоНастроекАгента, Тип("ДеревоЗначений"));
		СтрокаДерева = ЗначДерево.Строки.Найти(КлючНастройки, "Ключ", Истина);
		Если Не СтрокаДерева = Неопределено Тогда
			ТекНастройка = СтрокаДерева.Значение;
		КонецЕсли;	
	КонецЕсли;
	
	Возврат ТекНастройка;
	
КонецФункции //ОпределитьТекНужноеЗначение

&НаСервере
// Процедура добавляет настройку в таблицу все настроек для КПК
//
// Параметры:
//  лДерево				 - текущая ветка дерева
//  Ключ   				 - ключ настройки
//  Настройка 			 - название настройки
//  Путь 				 - путь в реестре для настройки
//  Подсказка 			 - подсказка, котоорая будет показывать в окне подсказок
//  ЗначениеПоУмолчанию  - значение по умолчанию для настройки, если она еще не установлена в КПК
//  ДвФлаги				 - двоичное число, из которого следует получить настройки
//  Бит				     - номер бита, который требуется получить из двоичного числа
//
Процедура ДобавитьНастройкуВТаблицу(лДерево, Идентификатор, Ключ, Настройка, Подсказка, ЗначениеПоУмолчанию, ЭтоГруппа = Ложь, ЗависимаяНастройка = "", 
									ИнвертироватьНастройку = Ложь, ТолькоПросмотр = Ложь, СписокВыбора = Неопределено, СчитатьИзНастроек = Истина)
	
	Если Не лДерево = Неопределено Тогда
		НовСтр 					   = лДерево.Добавить();
		НовСтр.Ключ 	 		   = Ключ;  	
		НовСтр.Настройка    	   = Настройка;  
		НовСтр.Подсказка           = Подсказка;  
		НовСтр.ЗначениеПоУмолчанию = ЗначениеПоУмолчанию;		
		НовСтр.Идентификатор 	   = Идентификатор;		
		НовСтр.ТолькоПросмотр      = ТолькоПросмотр;		
		Если ЭтоГруппа Тогда
			НовСтр.ИндексКартинки = 1;			
		Иначе
			НовСтр.ИндексКартинки = 0;			
		КонецЕсли; 	
		Если СписокВыбора <> Неопределено Тогда  	
			НовСтр.Список = СписокВыбора;
		КонецЕсли;	
	КонецЕсли;
	
	Если СчитатьИзНастроек Тогда
		НужноеЗначение = ОпределитьНужноеЗначение(Ключ);
		Если НужноеЗначение = Неопределено Тогда
			НужноеЗначение = ЗначениеПоУмолчанию;
		КонецЕсли;
	Иначе
		НужноеЗначение = ЗначениеПоУмолчанию;
	КонецЕсли;
	
	Если Не лДерево = Неопределено Тогда
		НовСтр.Значение = НужноеЗначение;		
	КонецЕсли;
	
	ЗначДеревоНастроекАгента = ДанныеФормыВЗначение(ДеревоНастроекАгента, Тип("ДеревоЗначений"));
	
	НайденнаяСтрока  = ЗначДеревоНастроекАгента.Строки.Найти(Ключ, "Ключ", Истина);		
	Если НайденнаяСтрока = Неопределено Тогда 
		НайденнаяСтрока = ЗначДеревоНастроекАгента.Строки.Добавить();
	КонецЕсли;	
	НайденнаяСтрока.Ключ      			 = Ключ;	
	НайденнаяСтрока.Настройка 			 = Настройка;
	НайденнаяСтрока.ЗначениеПоУмолчанию  = ЗначениеПоУмолчанию;	
	НайденнаяСтрока.Значение 		     = НужноеЗначение;
	НайденнаяСтрока.ЗависимаяНастройка   = ЗависимаяНастройка;
	НайденнаяСтрока.Инверсия  			 = ИнвертироватьНастройку;
	НайденнаяСтрока.Идентификатор 		 = Идентификатор;		
	НайденнаяСтрока.ТолькоПросмотр 		 = ТолькоПросмотр;		
	Если ЭтоГруппа Тогда
		НайденнаяСтрока.ИндексКартинки = 1;			
	Иначе
		НайденнаяСтрока.ИндексКартинки = 0;			
	КонецЕсли; 	
	
	ЗначениеВРеквизитФормы(ЗначДеревоНастроекАгента, "ДеревоНастроекАгента");
	
КонецПроцедуры //ДобавитьНастройкуВТаблицу()

&НаСервере 
// Процедура формирует дерево настроек мобильного приложения
//
Функция ФормированиеДерева()
		
	тзДеревоНастроек = ДанныеФормыВЗначение(ДеревоНастроек, Тип("ДеревоЗначений"));
	 	
	// ГРУППА ОБЩИЕ НАСТРОЙКИ	
	ДобавитьНастройкуВТаблицу(тзДеревоНастроек.Строки, "", "Общие", "Общие", "Общие настройки Агент+", "", Истина,,,Истина);
	
	ТекРодитель = тзДеревоНастроек.Строки.Найти("Общие", "Ключ"); 
	
	//ИдАгента = Объект.Агент.УникальныйИдентификатор();	
	//ИдКПК    = СокрЛП(Объект.Агент.МобильныйКомпьютер.СерийныйНомер);
	
	//ДобавитьНастройкуВТаблицу(ТекРодитель.Строки, "79c698db-3c55-465e-acfe-4741acdd5655", "ИдентификаторАгента",  "Идентификатор",	 			 "Идентификатор агента", 		    					ИдАгента,,,,Истина,, Ложь);		
	//ДобавитьНастройкуВТаблицу(ТекРодитель.Строки, "a2e1cc68-0624-45a6-8057-efd35259b9fe", "ИмяАгента",    		  "Агент", 		   				 "Наименование торгового агента", 						Объект.Агент,,,,Ложь,, Ложь);
	//ДобавитьНастройкуВТаблицу(ТекРодитель.Строки, "90c4c934-85a6-449e-a519-d5ae44da667b", "ИдентификаторКПК",     "Идентификатор КПК", 			 "Идентификатор мобильного устройства", 				ИдКПК,,,,Истина,, Ложь);
	ДобавитьНастройкуВТаблицу(ТекРодитель.Строки, "ddedce5e-7a69-4858-bc89-f48e3e44a8ef", "ПарольНастроек",   	  "Пароль доступа к настройкам", "Пароль доступа к настройкам в мобильном приложении",  "");
	ДобавитьНастройкуВТаблицу(ТекРодитель.Строки, "344436bc-3e1b-42d7-b453-496d61eae2d8", "КаталогКартинок",   	  "Каталог картинок",			 "Каталог хранения картинок и фотографий. Следует менять только в том случае, " + 
																																			   	 "если нужно хранить картинки, не в папке по умолчанию, а, например, на карте памяти. " + 
																																				 "Пример: /sdcard/AgentPlusPictures/", КаталогКартинок);	
	
	ДобавитьНастройкуВТаблицу(ТекРодитель.Строки, "72889bff-cc95-4c2e-9c4e-0d28e2efbf7c", "ТорговляСКолес", 		  "Торговля с колес",  		   "Торговля с колес", Ложь);
	ДобавитьНастройкуВТаблицу(ТекРодитель.Строки, "b1945151-4055-4bc4-a9a0-9e1d39babe99", "ИспользоватьПечать", 	  "Использовать печать",	   "Использовать печать документов в мобильном устройстве", Ложь);
	ДобавитьНастройкуВТаблицу(ТекРодитель.Строки, "ed0274e1-3b90-4db9-951f-3037260b80ac", "ИспользоватьСканирование", "Использовать сканирование", "Использовать сканирование штрих-кодов номенклатуры в мобильном устройстве", Ложь);
	
	// СПРАВОЧНИКИ  	
	ДобавитьНастройкуВТаблицу(тзДеревоНастроек.Строки, "", "Справочники", "Справочники", "Настройки для справочников", "", Истина,,,Истина);	
	РодительСпр = тзДеревоНастроек.Строки.Найти("Справочники", "Ключ"); 
	Если РодительСпр <> Неопределено Тогда 		
		// Каталог товаров	
		ДобавитьНастройкуВТаблицу(РодительСпр.Строки, "", "КаталогТоваров", "Каталог товаров", "Настройки для справочника товаров", "", Истина,,,Истина);	
		ТекРодитель = РодительСпр.Строки.Найти("КаталогТоваров", "Ключ");   
		Если ТекРодитель <> Неопределено Тогда 
			ДобавитьНастройкуВТаблицу(ТекРодитель.Строки, "d902c64a-9a7a-40d1-8067-e4bb6b309534", "ОтображениеКодов", "Отображать код в колонке", "Отображать код/артикул в форме подбора в отдельной колонке", Ложь);
			ДобавитьНастройкуВТаблицу(ТекРодитель.Строки, "f24da797-1374-410d-a8e2-28645772b81c", "РежимСортировки", "Режим сортировки номенклатуры", "Наименование атрибута, по которому производится сортировка товаров в окне подбора товара или справочнике ""Номенклатура"". Возможные значения: Код, Наименование, Остаток, ПорядокВФайлеВыгрузки", "Наименование");
		КонецЕсли;		
		
		// Клиенты и торговые точки  	
		ДобавитьНастройкуВТаблицу(РодительСпр.Строки, "", "КлиентыТорговыеТочки", "Настройки клиентов", "Настройки для справочника клиентов", "", Истина,,,Истина);	
		ТекРодитель = РодительСпр.Строки.Найти("КлиентыТорговыеТочки");   
		Если ТекРодитель <> Неопределено Тогда 	
			ДобавитьНастройкуВТаблицу(ТекРодитель.Строки, "73355324-f463-428a-91d2-2868dd35a168", "СозданиеКлиентов", 		 	"Разрешить создание клиентов", 		 			"Разрешить создание новых партнеров в мобильном приложении", Ложь);
			ДобавитьНастройкуВТаблицу(ТекРодитель.Строки, "5616d1e9-bfa3-40fc-baba-852d16b5e774", "РедактированиеКлиентов",  	"Разрешить редактирование клиентов", 		 	"Разрешить редактирование партнеров в мобильном приложении", Ложь);			
			ДобавитьНастройкуВТаблицу(ТекРодитель.Строки, "abc5b73a-f477-406b-89c5-e9aab3b4f1e1", "СозданиеДоговоров",	 	 	"Разрешить создание договоров", 	   			"Разрешить создание новых договоров в мобильном приложении", Ложь);
			ДобавитьНастройкуВТаблицу(ТекРодитель.Строки, "36767a2e-4df5-43b5-9813-893bf6f65a7f", "РедактированиеДоговоров",    "Разрешить редактирование договоров", 			"Разрешить редактирование договоров в мобильном приложении", Ложь);						
			ДобавитьНастройкуВТаблицу(ТекРодитель.Строки, "4c6b29d4-3d61-43c7-a063-a63823e55069", "АдресКонтрагентаВДвеСтроки", "Отображать адрес партнера в две строки", 		"Отображать адрес партнеров в ячейке вместе с наименование", Ложь);
			ДобавитьНастройкуВТаблицу(ТекРодитель.Строки, "195bccd6-f8ea-481e-a411-1d33a52cfe49", "ОтключитьФункционалЗвонков", "Отключить функционал звонков", 				"Отключает возможность набора номера из контекстного меню по нажатию на номер телефона и отключает видимость вкладки ""Звонки"" в справочниках", Ложь);
		КонецЕсли;
	КонецЕсли;
	// СПРАВОЧНИКИ ОКОНЧАНИЕ
	/////////////// 
	
	// Заявки
	
	//// ДОКУМЕНТЫ
	
	ДобавитьНастройкуВТаблицу(тзДеревоНастроек.Строки, "", "Документы", "Документы", "Настройки для документов", "", Истина,,,Истина);		
	РодительДок = тзДеревоНастроек.Строки.Найти("Документы", "Ключ");   	
	Если РодительДок <> Неопределено Тогда 
		ДобавитьНастройкуВТаблицу(РодительДок.Строки, "61a474b1-21d0-4047-b2d5-7213a7294050", "СписокЗакладокЖурнала",       "Список закладок журнала", 	"Список видимых закладок журнала документов в приложении", СписокЗакладокЖурнала);		
		// Заявки	
		ДобавитьНастройкуВТаблицу(РодительДок.Строки, "", "Заявка", "Заявка", "Настройки для документа ""Заявка""", "", Истина,,,Истина);
		ТекРодитель = РодительДок.Строки.Найти("Заявка", "Ключ"); 
		Если ТекРодитель <> Неопределено Тогда 
			ДобавитьНастройкуВТаблицу(ТекРодитель.Строки, "690b5736-e1b9-41ef-a132-807acad31687", "РазрешитьРедактироватьЦены",      "Разрешить редактирование цены", 	"Разрешить редактирование цен в табличной части документов", Ложь);
			ДобавитьНастройкуВТаблицу(ТекРодитель.Строки, "4a6b2c4c-445b-4985-a509-10fb1a2d57ce", "РазрешитьИзменятьСкидку", 		 "Разрешить изменять скидку", 	 	"Разрешить изменение скидки в документе", Ложь);			
			ДобавитьНастройкуВТаблицу(ТекРодитель.Строки, "072ec906-bd0b-4b75-afa8-bece1434f1eb", "НеИзменятьОстатки", 				 "Не изменять остатки", 	 	    "При проведении/отмене проведения документа не изменять остатки товаров в КПК", Ложь);
			ДобавитьНастройкуВТаблицу(ТекРодитель.Строки, "711587ed-1589-4e69-a7f7-09ade3fb5888", "ЗапретитьОтрицательныеОстатки",   "Запретить отрицательные остатки", "Запретить отрицательные остатки при проведении заявок в КПК", Ложь);
			ДобавитьНастройкуВТаблицу(ТекРодитель.Строки, "b0fddb94-caf7-4003-b2fd-df15bd2f1f1b", "ОтсрочкаДоставки",    	  		 "Отсрочка доставки",	 			"Количество дней отсрочки доставки заказа", 0);			
		КонецЕсли;
		
		// ПКО	
		ДобавитьНастройкуВТаблицу(РодительДок.Строки, "", "ПКО", "Кассовые ордеры", "Настройки для документов ""Кассовый ордер""", "", Истина,,,Истина);
		ТекРодитель = РодительДок.Строки.Найти("ПКО", "Ключ"); 
		Если ТекРодитель <> Неопределено Тогда 
			ДобавитьНастройкуВТаблицу(ТекРодитель.Строки, "ccd3f25e-a29b-419f-b8a2-d58e380efae2", "УказыватьДокументОплаты", "Указывать документ оплаты", "Запрет создания ПКО без указания документа оплаты", 	Ложь);
			ДобавитьНастройкуВТаблицу(ТекРодитель.Строки, "ef7c73d2-d745-4e04-a5f1-afcbbcb72f05", "ПроверятьСуммуОплаты",    "Проверять сумму оплаты", "Сверять сумму оплаты с суммой оплачиваемого документа. Если сумма " +
																																					   "оплаты превысит сумму документа оплаты, то ПКО записан не будет", Ложь);
		КонецЕсли;
		
		// Мерчендайзинг
		ДобавитьНастройкуВТаблицу(РодительДок.Строки, "", "Мерчендайзинг", "Мерчендайзинг", "Настройки для документа ""Мерчендайзинг""", "", Истина,,,Истина);
		ТекРодитель = РодительДок.Строки.Найти("Мерчендайзинг", "Ключ"); 
		Если ТекРодитель <> Неопределено Тогда 	                                                                                                               	
			ДобавитьНастройкуВТаблицу(ТекРодитель.Строки, "ec1c050f-9183-4cf8-9a40-8546c8617ebb", "ЗапрашиватьКоличество",	   "Запрашивать количество", 	 			"Запрашивать при подборе товара количество", Ложь);
			ДобавитьНастройкуВТаблицу(ТекРодитель.Строки, "aeddb719-eb7a-493e-b80e-ee2d63e76fe5", "ЗапрашиватьЦену",  	  	   "Запрашивать цену", 	  	   				"Запрашивать при подборе товара цену", Ложь);			
			ДобавитьНастройкуВТаблицу(ТекРодитель.Строки, "68524bcf-b992-4896-8a91-44ee31498831", "ИзменятьРежимПодбора",      "Изменять режим подбора", 				"Разрешить изменять режим подбора", Ложь);
			ДобавитьНастройкуВТаблицу(ТекРодитель.Строки, "d2dd4509-e164-4e6c-a0b2-c46b5ca0397d", "РедактируемыйМерчендайзин", "Редактируемый мерчендайзинг", 			"При подборе товаров в документы, ссылающиеся на документ ""Мерчендайзинг"", колонка ""Мерчендайзинг""" + 
																																										"в окне подбора становится редактируемой. Т.е. подбор проводится одновременно в два документа", Ложь);			
			ДобавитьНастройкуВТаблицу(ТекРодитель.Строки, "a86959b3-ed83-44d8-b457-df8dfea9efdd", "Автомерчендайизинг",		   "Создавать мерчендайзинг автоматически", "Создавать автоматически документ мерчендайзинга на основании других документов", Ложь);
		КонецЕсли;
		
		// Задания
		ДобавитьНастройкуВТаблицу(РодительДок.Строки, "", "Задание", "Задание", "Настройки для документа ""Задание""", "", Истина,,,Истина);
		ТекРодитель = РодительДок.Строки.Найти("Задание", "Ключ"); 
		Если ТекРодитель <> Неопределено Тогда 	                                                                                                               	
			ДобавитьНастройкуВТаблицу(ТекРодитель.Строки, "4280ae75-b17c-48c2-9140-4fc09853a4ad", "СозданиеЗаданий",	   		"Создание ""Заданий""", 	 				"Разрешить создавать документ ""Задание""", Ложь);
		КонецЕсли;
	
		// Общие настройки для всех документов
		ДобавитьНастройкуВТаблицу(РодительДок.Строки, "", "НастройкиОбщие", "Общие настройки документов", "Общие настройки для всех документов", "", Истина,,,Истина);	
		ТекРодитель = РодительДок.Строки.Найти("НастройкиОбщие", "Ключ"); 
		Если ТекРодитель <> Неопределено Тогда                              			
			ДобавитьНастройкуВТаблицу(ТекРодитель.Строки, "dc63708b-9257-48dc-9f16-d9846ac7d5fe", "ПроверятьВыборФирмы",		 "Проверять выбор организации",  			"Не записывать документы, у которых не выбрана организация", Ложь);                   	
			ДобавитьНастройкуВТаблицу(ТекРодитель.Строки, "b8396958-7d13-4633-a6c3-c8d639cbf9e6", "ПроверятьВыборКлиента",  	 "Проверять выбор партнера",  			    "Не записывать документы, у которых не выбран партнер", 	 Ложь);               
			Если Константы.апВыгружатьКонтрагентов.Получить() Тогда 
				ДобавитьНастройкуВТаблицу(ТекРодитель.Строки, "f984e263-b838-489e-a1d4-f775db7ede98", "ПроверятьВыборТТ",  			 "Проверять выбор контрагента",  	    	"Не записывать документы, у которых не выбран контрагент", Ложь);		
			КонецЕсли;
			ДобавитьНастройкуВТаблицу(ТекРодитель.Строки, "56649629-21e4-4116-aec6-e794f12c62fe", "ПроверятьВыборДоговора", 	 "Проверять выбор договора",  	   		    "Не записывать документы, у которых не выбран договор", 	 Ложь);				
			ДобавитьНастройкуВТаблицу(ТекРодитель.Строки, "8deb5086-fb67-436e-a5f7-5118ce0dc09e", "РедактироватьПодтвДокументы", "Редактировать подтвержденные документы",  "Разрешить изменять документы подтвержденные из ЦБД", 	 Ложь);				
			ДобавитьНастройкуВТаблицу(ТекРодитель.Строки, "16d90b81-6ba0-4e72-a471-4350213b934e", "КомментарииКФото",  		 	 "Запрашивать комментарий к фотографиям",   "Запрашивать ввод комментария к фотографии документа, сделанного в МУ", Истина);
			ДобавитьНастройкуВТаблицу(ТекРодитель.Строки, "faf41508-ab25-4e1b-9bbd-f80634a3d264", "РедактироватьДатуДок",  		 "Разрешить изменение даты документов",     "Разрешить изменение даты документов", Ложь);		
			ДобавитьНастройкуВТаблицу(ТекРодитель.Строки, "6d4c184b-810d-4c23-ba6e-fb7e03b48812", "ЗапросПересчетаТипаЦены", 	 "Запрашивать необходимость пересчета цен", "Запрашивать необходимость пересчета цен в табличной части документа при изменении типа цены в заголовочной части документа", Истина);
			ДобавитьНастройкуВТаблицу(ТекРодитель.Строки, "0de4a49f-691b-4910-95bf-6f25a281d9e1", "ПоказыватьКолонкуВеса", 		 "Показывать колонку веса", 				"Показывать колонку веса в журнале документов", Ложь);		
		КонецЕсли;		
		
		// Общие настройки для документов продажи
		ДобавитьНастройкуВТаблицу(РодительДок.Строки, "", "НастройкиПродажи", "Настройки для документов продаж", "Общие настройки для документов продаж", "", Истина,,,Истина);	
		ТекРодитель = РодительДок.Строки.Найти("НастройкиПродажи", "Ключ"); 
		Если ТекРодитель <> Неопределено Тогда 
			ДобавитьНастройкуВТаблицу(ТекРодитель.Строки, "c64dac8a-2fbc-40bf-bf49-143398aaac9a", "РазрешитьИзменятьРежимПодбора",  "Разрешить изменять режим подбора", 			"Разрешить изменять режим подбора в документах продаж",		     Ложь, 0, "SelGoodsMode", 0);	
			ДобавитьНастройкуВТаблицу(ТекРодитель.Строки, "32cd846c-cafa-4006-bc05-ef2cd135e2ea", "ЗапрашиватьКолМерч",  			"Запрашивать количество мерчендайзинга",  		"Запрашивать количество мерчендайзинга в окне подбора товаров " + 
																									  																				"(только если документ продажи ссылается на документ мерчендайзинга)", Ложь);																																		
			ДобавитьНастройкуВТаблицу(ТекРодитель.Строки, "138f9a6c-7f96-4136-9fbc-0663476bc094", "КолМерчВОдномОкне", 				"Количество мерчендайзинга в одном окне",    	"В окне ввода количества товара запрашивать количество мерчендайзинга", Ложь);		
			ДобавитьНастройкуВТаблицу(ТекРодитель.Строки, "0deef076-ff1f-4e4d-acb5-8344be0281a1", "НеИзменятьТипыЦенВДок",  		"Запретить изменение типа цены в документе",  	"Запретить изменение типа цены в документе", Ложь);
			ДобавитьНастройкуВТаблицу(ТекРодитель.Строки, "5c0be27d-7b90-4e9c-89fd-1d1e5c42c944", "ИспОграничениеСкидки", 	 		"Использовать ограничение скидки",			  	"Использовать ограничение скидки",   Ложь);
			ДобавитьНастройкуВТаблицу(ТекРодитель.Строки, "018dd98c-d617-4d35-b5c0-efdabf6b37a2", "СкрыватьСписокСкладов", 	  		"Скрывать список складов при вводе количества", "Скрывать таблицу с остатками в разрезе складов в окне ввода количества товара при подборе номенклатуры в заказ. " + 
																							   																				  		"Доступно только при использовании многоскладского учета.", Ложь); 
																																												
			ДобавитьНастройкуВТаблицу(ТекРодитель.Строки, "5dc7aea9-e9da-4aa4-babb-df5a43af1ad5", "ПоказыватьИсходнуюЦену",  	    "Показывать исходную цену", 					"Показывать исходную цену номенклатуры в табличной части документов продаж, " + 
																									  														 		 				"если используется режим работы с минимально допустимым типом цены", 	     Ложь);						
			ДобавитьНастройкуВТаблицу(ТекРодитель.Строки, "4838f24a-ffaa-48f3-98f8-7863125944c8", "УказыватьСкидкиВТЧ",  			"Указывать скидки в табличной части",  			"Указывать скидки в табличной части документов продаж", Ложь);
			
			Если Константы.апРежимВыгрузкиКодов.Получить() <> Перечисления.апРежимыВыгрузкиКодов.НеВыгружать Тогда
				ДобавитьНастройкуВТаблицу(ТекРодитель.Строки, "b8ee5418-9597-42fb-a738-1574975ec6f6", "ОтображатьКодВТЧасти", 		"Отображать код/артикул в табличной части",		"Отображать код/артикул в табличной части", Ложь);
			КонецЕсли;
			
			ДобавитьНастройкуВТаблицу(ТекРодитель.Строки, "8886e1e1-fcda-4ea0-85f8-df3d3dd8a5e3", "ИспользоватьВидОплаты", 			"Использовать виды оплаты", 					"Использовать виды оплаты", Ложь);
			
			ДобавитьНастройкуВТаблицу(ТекРодитель.Строки, "b917af50-af2b-43c1-a111-cc8822b180c2", "ИспользоватьТипыЦенВТЧ", 		"Использовать типы цен в табличных частях", 	"Использовать типы цен в табличных частях", Ложь);			
			ДобавитьНастройкуВТаблицу(ТекРодитель.Строки, "e41a7026-551c-44f9-997f-51a8b68b88ac", "НеЖдатьГПСКоординатыДокумента", 	"Не ждать GPS-координаты документа", 			"Не ждать GPS-координаты документа", Ложь);
		КонецЕсли;	
		
	КонецЕсли;	
	
	// МАРШРУТЫ
	ДобавитьНастройкуВТаблицу(тзДеревоНастроек.Строки, "", "Маршруты", "Маршруты", "Настройки работы с маршрутами", "", Истина,,,Истина);	
	ТекРодитель = тзДеревоНастроек.Строки.Найти("Маршруты", "Ключ"); 
	Если ТекРодитель <> Неопределено Тогда	
		ДобавитьНастройкуВТаблицу(ТекРодитель.Строки, "99eeeef3-015a-4727-8166-65f2dcceab29", "ИспользоватьМаршруты", "Использовать маршруты",                      "Включить закладку ""Маршруты"" в окне выбора клиентов", Ложь);
		ДобавитьНастройкуВТаблицу(ТекРодитель.Строки, "8e0a70a1-476c-4c7b-a8a7-0c9ce334fc68", "ПриоритетМаршрутов",   "При выборе клиентов приоритет по маршрутам", "При выборе клиентов приоритет по маршрутам", 	     Ложь);
	КонецЕсли;
	
	// НАСТРОЙКИ ДЛЯ GPS
	ДобавитьНастройкуВТаблицу(тзДеревоНастроек.Строки, "", "GPS", "GPS", "Настройки для работы с GPS", "", Истина,,,Истина);	
	РодительГПС = тзДеревоНастроек.Строки.Найти("GPS", "Ключ"); 
	Если РодительГПС <> Неопределено Тогда	
		// Общие настройки GPS 	
		ДобавитьНастройкуВТаблицу(РодительГПС.Строки, "", "ОбщиНастройкиГПС", "Общие настройки GPS", "Общие настройки для работы с GPS", "", Истина,,,Истина);	
		ТекРодитель = РодительГПС.Строки.Найти("ОбщиНастройкиГПС", "Ключ"); 
		Если ТекРодитель <> Неопределено Тогда	
			ДобавитьНастройкуВТаблицу(ТекРодитель.Строки, "e8dca437-fa0d-4f92-b7b8-4a7a162638c5", "ИспользоватьГПС", "Использовать GPS",  "Использовать GPS", Ложь);			
		КонецЕсли;	
		// Настройки для трекинга 	
		ДобавитьНастройкуВТаблицу(РодительГПС.Строки, "", "НастройкиТрекинга", "Настройки трекинга", "Настройки для трекинга", "", Истина,,,Истина);	
		ТекРодитель = РодительГПС.Строки.Найти("НастройкиТрекинга", "Ключ"); 
		Если ТекРодитель <> Неопределено Тогда		
			ДобавитьНастройкуВТаблицу(ТекРодитель.Строки, "6e7183cc-abf6-4b18-af75-f4d851551fd4", "ЗаписьТрека",      		  "Запись трека",           		"Записывать трек перемещения", Ложь);			
			ДобавитьНастройкуВТаблицу(ТекРодитель.Строки, "6517da49-a145-43a7-8730-a3e9978e437b", "ФоноваяПередача", 		  "Фоновая передача",     	 		"Фоновая передача координат через службу ""Агент Плюс СОД""", Ложь);	
			ДобавитьНастройкуВТаблицу(ТекРодитель.Строки, "54e2a0b0-4f94-499d-875a-9d2ee7634da9", "ИнтервалПередачи", 		  "Интервал передачи",  	 		"Интервал при фоновой передаче, в секундах", 300);  	
			ДобавитьНастройкуВТаблицу(ТекРодитель.Строки, "", 	      					 		  "Расписание", 		      "Расписание",     		 		"Расписание работы режима записи трека в мобильном устройстве", Справочники.апНастройкиТрекинга.ПустаяСсылка());
			ДобавитьНастройкуВТаблицу(ТекРодитель.Строки, "dd7cde5e-3b09-4fa5-809b-529e8bbfb929", "ЗаписыватьСкорость", 	  "Записывать скорость",     		"Записывать скорость в файл трека", Ложь);
			
			ДобавитьНастройкуВТаблицу(ТекРодитель.Строки, "c6b9563f-947a-46c2-82dd-d375e103317d", "СинхронизироватьВремяГПС", "Синхронизировать время по GPS", 	"Синхронизировать системное время в мобильном устройстве с полученными GPS-данными", Ложь);                                                                         				
		КонецЕсли;		
	КонецЕсли;
	 	
	ЗначениеВРеквизитФормы(тзДеревоНастроек, "ДеревоНастроек");
		
	Возврат Истина; 
	
КонецФункции // ФормированиеДерева()

&НаКлиенте
Процедура КомандаРазвернуть(Команда)
	Для Каждого СтрокаДерева Из ДеревоНастроек.ПолучитьЭлементы() Цикл 
		Элементы.ДеревоНастроек.Развернуть(СтрокаДерева.ПолучитьИдентификатор(), Истина);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура КомандаСвернуть(Команда)
	Для Каждого СтрокаДерева Из ДеревоНастроек.ПолучитьЭлементы() Цикл 
		Элементы.ДеревоНастроек.Свернуть(СтрокаДерева.ПолучитьИдентификатор());
	КонецЦикла;
КонецПроцедуры
                       
&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	тзДеревоНастроек = ДанныеФормыВЗначение(ДеревоНастроек, Тип("ДеревоЗначений"));		
	
	ТекущийОбъект.Настройки = Новый ХранилищеЗначения(тзДеревоНастроек); 
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ОбновитьСписокЗакладокЖурнала();
КонецПроцедуры

&НаСервере
Процедура ОбновитьСписокЗакладокЖурнала()
	
	СписокЗакладокЖурнала.Добавить("Заказы",	  	"Заказы");
	СписокЗакладокЖурнала.Добавить("Реализация",	"Реализация");
	СписокЗакладокЖурнала.Добавить("Долги",		  	"Долги");
	СписокЗакладокЖурнала.Добавить("Касса",		  	"Касса");
	СписокЗакладокЖурнала.Добавить("Мерчендайзинг", "Мерчендайзинг");
	СписокЗакладокЖурнала.Добавить("Посещение", 	"Посещения");
	СписокЗакладокЖурнала.Добавить("Перемещение", 	"Перемещения");
	СписокЗакладокЖурнала.Добавить("Поступление", 	"Поступления");
	СписокЗакладокЖурнала.Добавить("Задание", 		"Задания");
	
КонецПроцедуры 

&НаКлиенте
Процедура ДеревоНастроекЗначениеПриИзменении(Элемент)
	ЗначениеПоУмолчанию = Элементы.ДеревоНастроек.ТекущиеДанные.ЗначениеПоУмолчанию;
	Ключ				= Элементы.ДеревоНастроек.ТекущиеДанные.Ключ;
	Значение			= Элементы.ДеревоНастроек.ТекущиеДанные.Значение;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоНастроекЗначениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ЗначениеПоУмолчанию = Элементы.ДеревоНастроек.ТекущиеДанные.ЗначениеПоУмолчанию;
	Ключ				= Элементы.ДеревоНастроек.ТекущиеДанные.Ключ;
	Значение			= Элементы.ДеревоНастроек.ТекущиеДанные.Значение;
	
	Если ТипЗнч(ЗначениеПоУмолчанию) = Тип("СписокЗначений") Тогда
		
		Если Ключ = "СписокЗакладокЖурнала" Тогда
			
			СтандартнаяОбработка = Ложь;
			
			СписокВыбЗакладок = Элементы.ДеревоНастроек.ТекущиеДанные.Значение;
			
			Для Каждого СтрокаСписка Из ЗначениеПоУмолчанию Цикл
				Если Не СписокВыбЗакладок.НайтиПоЗначению(СтрокаСписка.Значение) = Неопределено Тогда
					СтрокаСписка.Пометка = Истина; 
				КонецЕсли;
			КонецЦикла;
			
			Если ЗначениеПоУмолчанию.ОтметитьЭлементы("Видимые закладки") Тогда 
				СписокЗакладок.Очистить();
				Для Каждого Элемент из ЗначениеПоУмолчанию Цикл
					Если Элемент.Пометка Тогда					
						СписокЗакладок.Добавить(Элемент.Значение);
					КонецЕсли;
				КонецЦикла;   			
			КонецЕсли;
			
			Если СписокЗакладок.Количество() > 0 Тогда
				Элементы.ДеревоНастроек.ТекущиеДанные.Значение = СписокЗакладок;
			КонецЕсли;					
		КонецЕсли;		
	КонецЕсли; //Если ТипЗнч(ЗначениеПоУмолчанию) = Тип("СписокЗначений") Тогда
КонецПроцедуры

&НаКлиенте
Процедура ДеревоНастроекЗначениеНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	Ключ	 = Элементы.ДеревоНастроек.ТекущиеДанные.Ключ;
	Значение = Элементы.ДеревоНастроек.ТекущиеДанные.Значение;
	Список	 = Элементы.ДеревоНастроек.ТекущиеДанные.Список;
КонецПроцедуры