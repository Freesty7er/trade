
#Область КомандыФормы

&НаКлиенте
Процедура КомандаЗаполнить(команда)
	КомандаЗаполнитьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаполнитьОстатки(команда)
	КомандаЗаполнитьОстаткиНаСервере();
КонецПроцедуры

#КонецОбласти

#Область ДополнительныеПроцедурыИФункции

&НаСервере
Процедура КомандаЗаполнитьНаСервере()

	запрос = Новый Запрос;
	запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	#Область ТекстЗапроса
	
	запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаОстатков.ЦФО,
	|	ТаблицаОстатков.ФактОстатокСтоимость,
	|	ТаблицаОстатков.ФактОстатокПродСтоимость
	|ПОМЕСТИТЬ ВТ_ТаблицаОстатков
	|ИЗ
	|	&ТаблицаФактическихОстатков КАК ТаблицаОстатков
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОтделыВМагазинах.Ссылка КАК ОтделВМагазине,
	|	ОтделыВМагазинах.Магазин КАК Контрагент
	|ПОМЕСТИТЬ ВТ_ОтделыВМагазинах
	|ИЗ
	|	Справочник.ОтделыВМагазинах КАК ОтделыВМагазинах
	|ГДЕ
	|	ОтделыВМагазинах.Подразделение = &Подразделение
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Контрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПартииТоваровНаСкладахОстатки.ЦФО КАК ЦФО,
	|	0 КАК Инкассация,
	|	СУММА(ПартииТоваровНаСкладахОстатки.СтоимостьОстаток) КАК ОстатокСтоимость,
	|	СУММА(ПартииТоваровНаСкладахОстатки.ПродСтоимостьОстаток) КАК ОстатокПродСтоимость,
	|	0 КАК ОплатаБонусами,
	|	0 КАК Скидка,
	|	0 КАК ФактОстатокСтоимость,
	|	0 КАК ФактОстатокПродСтоимость,
	|	0 КАК МаржинальныйДоход
	|ПОМЕСТИТЬ ВТ_ИсходныеДанные
	|ИЗ
	|	РегистрНакопления.ПартииТоваровНаСкладах.Остатки(
	|			&МоментВремени,
	|			Подразделение = &Подразделение
	|				И СчетУчета <> ЗНАЧЕНИЕ(ПланСчетов.Внутренний.Топливо)) КАК ПартииТоваровНаСкладахОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ПартииТоваровНаСкладахОстатки.ЦФО
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РозничнаяВыручкаОстатки.ЦФО,
	|	-РозничнаяВыручкаОстатки.СуммаОстаток,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0
	|ИЗ
	|	РегистрНакопления.РозничнаяВыручка.Остатки(&МоментВремени, Подразделение = &Подразделение) КАК РозничнаяВыручкаОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Р_ПОСКассы.Ссылка.ОтделВМагазине,
	|	СУММА(0),
	|	СУММА(0),
	|	СУММА(0),
	|	СУММА(Р_ПродажиПоБонуснымКартам.СуммаБонусовСписано),
	|	0,
	|	0,
	|	0,
	|	0
	|ИЗ
	|	РегистрНакопления.Р_ПродажиПоБонуснымКартам КАК Р_ПродажиПоБонуснымКартам
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Р_ПОС.Кассы КАК Р_ПОСКассы
	|		ПО Р_ПродажиПоБонуснымКартам.ККР = Р_ПОСКассы.ККР
	|ГДЕ
	|	Р_ПродажиПоБонуснымКартам.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И Р_ПродажиПоБонуснымКартам.Подразделение = &Подразделение
	|
	|СГРУППИРОВАТЬ ПО
	|	Р_ПОСКассы.Ссылка.ОтделВМагазине
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Р_ПОСКассы.Ссылка.ОтделВМагазине,
	|	СУММА(0),
	|	СУММА(0),
	|	СУММА(0),
	|	СУММА(0),
	|	СУММА((ВЫРАЗИТЬ(ЧекККМТовары.Количество * ЧекККМТовары.Цена КАК ЧИСЛО(10, 2))) - ЧекККМТовары.Сумма),
	|	0,
	|	0,
	|	0
	|ИЗ
	|	Документ.ЧекККМ.Товары КАК ЧекККМТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Р_ПОС.Кассы КАК Р_ПОСКассы
	|		ПО ЧекККМТовары.Ссылка.Р_ПОС = Р_ПОСКассы.Ссылка
	|ГДЕ
	|	ЧекККМТовары.Ссылка.Проведен = ИСТИНА
	|	И ЧекККМТовары.Ссылка.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ЧекККМТовары.Ссылка.Подразделение = &Подразделение
	|	И ЧекККМТовары.ПроцентСкидкиНаценки <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	Р_ПОСКассы.Ссылка.ОтделВМагазине
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ТаблицаОстатков.ЦФО,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	ВТ_ТаблицаОстатков.ФактОстатокСтоимость,
	|	ВТ_ТаблицаОстатков.ФактОстатокПродСтоимость,
	|	0
	|ИЗ
	|	ВТ_ТаблицаОстатков КАК ВТ_ТаблицаОстатков
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПродажиОбороты.ЦФО,
	|	СУММА(0),
	|	СУММА(0),
	|	СУММА(0),
	|	СУММА(0),
	|	СУММА(0),
	|	СУММА(0),
	|	СУММА(0),
	|	СУММА(ПродажиОбороты.ДоходОборот)
	|ИЗ
	|	РегистрНакопления.Продажи.Обороты(&ДатаНачала, &МоментВремени, , Подразделение = &Подразделение) КАК ПродажиОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ПродажиОбороты.ЦФО
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ЦФО
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ИсходныеДанные.ЦФО,
	|	СУММА(ВТ_ИсходныеДанные.Инкассация) КАК Инкассация,
	|	СУММА(ВТ_ИсходныеДанные.ОстатокСтоимость) КАК ОстатокСтоимость,
	|	СУММА(ВТ_ИсходныеДанные.ОстатокПродСтоимость) КАК ОстатокПродСтоимость,
	|	СУММА(ВТ_ИсходныеДанные.ОплатаБонусами) КАК ОплатаБонусами,
	|	СУММА(ВТ_ИсходныеДанные.Скидка) КАК Скидка,
	|	СУММА(ВТ_ИсходныеДанные.ФактОстатокСтоимость) КАК ФактОстатокСтоимость,
	|	СУММА(ВТ_ИсходныеДанные.ФактОстатокПродСтоимость) КАК ФактОстатокПродСтоимость,
	|	СУММА(ВТ_ИсходныеДанные.МаржинальныйДоход) КАК Недостачи
	|ИЗ
	|	ВТ_ИсходныеДанные КАК ВТ_ИсходныеДанные
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ИсходныеДанные.ЦФО
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТ_ИсходныеДанные.ЦФО.Наименование";
	
	#КонецОбласти
	
	запрос.УстановитьПараметр("Отправитель", Объект.Отправитель);
	запрос.УстановитьПараметр("Подразделение", Объект.Подразделение);
	запрос.УстановитьПараметр("ДатаНачала", НачалоМесяца(Объект.Дата));
	запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(Объект.Дата));
	запрос.УстановитьПараметр("МоментВремени", Новый Граница(Объект.Дата, ВидГраницы.Включая));
	запрос.УстановитьПараметр("ТаблицаФактическихОстатков", Объект.ФактическиеОстатки.Выгрузить());
	
	результатЗапроса = запрос.Выполнить();
	
	Если Не результатЗапроса.Пустой() Тогда
		Объект.Состав.Очистить();
	Иначе
		сообщениеПользователю = Новый СообщениеПользователю;
		сообщениеПользователю.Текст = "Отсутствуют данные для заполнения!";
		сообщениеПользователю.Сообщить();
	КонецЕсли;
	
	выборка = результатЗапроса.Выбрать();
	Пока выборка.Следующий() Цикл
		
		новаяСтрокаСостава = Объект.Состав.Добавить();
		
		ЗаполнитьЗначенияСвойств(новаяСтрокаСостава, выборка);
		
		инкассацияСтоимость = выборка.Инкассация + выборка.ОплатаБонусами - выборка.Недостачи;
		
		Если Не инкассацияСтоимость = 0 Тогда
			новаяСтрокаСостава.СписаниеРеализованнаяСтоимость = Макс(Мин(инкассацияСтоимость, выборка.ОстатокСтоимость), 0);
		КонецЕсли;
		
		Если Не выборка.ФактОстатокСтоимость = 0 Тогда
			новаяСтрокаСостава.СписаниеОтклонениеОтОстаткаСтоимость = (новаяСтрокаСостава.ОстатокСтоимость - новаяСтрокаСостава.СписаниеРеализованнаяСтоимость) - выборка.ФактОстатокСтоимость;
		КонецЕсли;
		
		Если Не выборка.ФактОстатокПродСтоимость = 0 Тогда
			новаяСтрокаСостава.СписаниеОтклонениеОтОстаткаПродСтоимость = новаяСтрокаСостава.ОстатокПродСтоимость - выборка.ФактОстатокПродСтоимость;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура КомандаЗаполнитьОстаткиНаСервере()

	запрос = Новый Запрос;
	запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	#Область ТекстЗапроса
	
	запрос.Текст =
	"ВЫБРАТЬ
	|	ТоварыВРозницеОстатки.ОтделМагазина КАК ЦФО,
	|	СУММА(ТоварыВРозницеОстатки.СуммаОстаток) КАК ФактОстатокСтоимость,
	|	СУММА(ТоварыВРозницеОстатки.СуммаОстаток + ТоварыВРозницеОстатки.НаценкаОстаток) КАК ФактОстатокПродСтоимость
	|ИЗ
	|	РегистрНакопления.ТоварыВРознице.Остатки(&КонецПериода, Подразделение = &Подразделение) КАК ТоварыВРозницеОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыВРозницеОстатки.ОтделМагазина
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТоварыВРозницеОстатки.ОтделМагазина.Наименование";
	
	#КонецОбласти
	
	запрос.УстановитьПараметр("Подразделение", Объект.Подразделение);
	запрос.УстановитьПараметр("КонецПериода", Новый Граница(Объект.Дата, ВидГраницы.Включая));
	
	результатЗапроса = запрос.Выполнить();
	
	Объект.ФактическиеОстатки.Загрузить(результатЗапроса.Выгрузить());

КонецПроцедуры

#КонецОбласти