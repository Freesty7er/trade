#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Элементы.Права.Видимость = Истина;
		
		
		УдалитьЭлементОтбораСписка(ПраваДоступаПОС, "Оператор");
		УстановитьЭлементОтбораСписка(ПраваДоступаПОС, "Оператор", Объект.Ссылка);
		
	Иначе
		Элементы.Права.Видимость = Ложь;
	КонецЕсли
	
КонецПроцедуры
	
#КонецОбласти

#Область ОбработчикиСобытийЭлеменовФормы

&НаКлиенте
Процедура ОтборПОСПриИзменении(Элемент)
	
	//Если ЗначениеЗаполнено(ОтборПОС) Тогда
		
	УправлениеНебольшойФирмойКлиент.ИзменитьЭлементОтбораСписка(ПраваДоступаПОС, "Оператор", Объект.Ссылка, Истина);
	УправлениеНебольшойФирмойКлиент.ИзменитьЭлементОтбораСписка(ПраваДоступаПОС, "ПОС", ОтборПОС, Истина);
		
	//КонецЕсли;
	
КонецПроцедуры
	
#КонецОбласти 

#Область ОбработчикиКоманд

&НаКлиенте
Процедура КомандаЗаполнитьПраваДоступа(Команда)
	
	ЗаполнитьПраваДоступаСервер();
	
	Элементы.ПраваДоступаПОС.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОчиститьПраваДоступа(Команда)
	
	ОчиститьПраваДоступаСервер();
	
	Элементы.ПраваДоступаПОС.Обновить();
	
КонецПроцедуры

#КонецОбласти 

#Область ДополнительныеПроцедурыИФункции

&НаСервере
Процедура ОчиститьПраваДоступаСервер()
	
	Если НЕ ЗначениеЗаполнено(ОтборПОС) ИЛИ НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Возврат;
	КонецЕсли;
	
	НаборЗаписей = РегистрыСведений.Р_НастройкиПравДоступаОператоров.СоздатьНаборЗаписей();
	НаборЗаписей.Записывать = Истина;
	
	НаборЗаписей.Отбор.Оператор.Установить(Объект.Ссылка);
	НаборЗаписей.Отбор.ПОС.Установить(ОтборПОС);
	НаборЗаписей.Отбор.ТипПО.Установить(Перечисления.Р_ТипыПОПОС.ResPOS_Market);
	НаборЗаписей.Прочитать();
	
	Если НаборЗаписей.Количество() > 0 Тогда
		НаборЗаписей.Очистить();
	КонецЕсли;
	
	НаборЗаписей.Записать();

	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПраваДоступаСервер()
	
	Если НЕ ЗначениеЗаполнено(ОтборПОС) ИЛИ НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Возврат;
	КонецЕсли;
	
	наборЗаписей = РегистрыСведений.Р_НастройкиПравДоступаОператоров.СоздатьНаборЗаписей();
	наборЗаписей.Записывать = Истина;
		
	наборЗаписей.Отбор.Оператор.Установить(Объект.Ссылка);
	наборЗаписей.Отбор.ПОС.Установить(ОтборПОС);
	наборЗаписей.Отбор.ТипПО.Установить(Перечисления.Р_ТипыПОПОС.ResPOS_Market);
	наборЗаписей.Прочитать();
	
	Если наборЗаписей.Количество() > 0 Тогда
		наборЗаписей.Очистить();
	КонецЕсли;
	
	наборЗаписей.Записать();
	
	запрос = Новый Запрос;
	
	#Область ТекстЗапроса
	
	запрос.Текст =
	"ВЫБРАТЬ
	|	Р_ВидыПравДоступаОператоров.Ссылка КАК Настройка,
	|	&Оператор,
	|	Р_ВидыПравДоступаОператоров.ПоУмолчанию КАК Значение,
	|	&ПОС,
	|	&ТипПО
	|ИЗ
	|	Справочник.Р_ВидыПравДоступаОператоров КАК Р_ВидыПравДоступаОператоров
	|ГДЕ
	|	НЕ Р_ВидыПравДоступаОператоров.ПометкаУдаления
	|	И (Р_ВидыПравДоступаОператоров.ТипПО = &ТипПО
	|			ИЛИ Р_ВидыПравДоступаОператоров.ТипПО = ЗНАЧЕНИЕ(Перечисление.Р_ТипыПОПОС.ПустаяСсылка)
	|				И НЕ Р_ВидыПравДоступаОператоров.ТипПО В (&ТипыПОАЗС))";
	
	#КонецОбласти
	
	
	запрос.УстановитьПараметр("Оператор", Объект.Ссылка);
	запрос.УстановитьПараметр("ПОС", ОтборПОС);
	запрос.УстановитьПараметр("ТипПО", Перечисления.Р_ТипыПОПОС.ResPOS_Market);
	
	типыПОАЗС = Новый СписокЗначений;
	типыПОАЗС.Добавить(Перечисления.Р_ТипыПОПОС.ResPOS_Petrol);
	типыПОАЗС.Добавить(Перечисления.Р_ТипыПОПОС.БлокАРМ2);
	типыПОАЗС.Добавить(Перечисления.Р_ТипыПОПОС.ТерминалАЗС_01М);
	
	запрос.УстановитьПараметр("ТипыПОАЗС", типыПОАЗС);
	
	наборЗаписей.Загрузить(запрос.Выполнить().Выгрузить());
	наборЗаписей.Записать();
	
КонецПроцедуры

//Устанавливает элемент отбор динамического списка
//
//Параметры:
//Список			- обрабатываемый динамический список,
//ИмяПоля			- имя поля компоновки, отбор по которому нужно установить,
//ВидСравнения		- вид сравнения отбора, по умолчанию - Равно,
//ПравоеЗначение 	- значение отбора
//
Процедура УстановитьЭлементОтбораСписка(Список, ИмяПоля, ПравоеЗначение, ВидСравнения = Неопределено)
	
	ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение    = Новый ПолеКомпоновкиДанных(ИмяПоля);
	ЭлементОтбора.ВидСравнения     = ?(ВидСравнения = Неопределено, ВидСравненияКомпоновкиДанных.Равно, ВидСравнения);
	ЭлементОтбора.Использование    = Истина;
	ЭлементОтбора.ПравоеЗначение   = ПравоеЗначение;
	ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	
КонецПроцедуры // УстановитьЭлементОтбораСписка()

Процедура УдалитьЭлементОтбораСписка(Список, ИмяПоля)
	
	ЭлементыОтбора = Список.Отбор.Элементы;
	ПолеКомпоновки = Новый ПолеКомпоновкиДанных(ИмяПоля);
	Для Каждого ЭлементОтбора Из ЭлементыОтбора Цикл
		Если ТипЗнч(ЭлементОтбора) = Тип("ЭлементОтбораКомпоновкиДанных")
			И ЭлементОтбора.ЛевоеЗначение = ПолеКомпоновки Тогда
			ЭлементыОтбора.Удалить(ЭлементОтбора);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры // УдалитьЭлементОтбораСписка()

#КонецОбласти 




