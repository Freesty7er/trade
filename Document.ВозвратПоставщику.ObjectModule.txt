
#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(данныеЗаполнения, стандартнаяОбработка)
	
	ТипЦен = Справочники.ТипыЦен.Закупка;

	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		
		Если ДанныеЗаполнения.Свойство("Контрагент") Тогда
			ЭтотОбъект.Контрагент 	= ДанныеЗаполнения.Контрагент;
			ЭтотОбъект.ТипЦен 	= ДанныеЗаполнения.Контрагент.ТипЦен;
		КонецЕсли;
		
		Если ДанныеЗаполнения.Свойство("Подразделение") Тогда
			ЭтотОбъект.Подразделение = ДанныеЗаполнения.Подразделение;
		КонецЕсли;
		
		Возврат;
		
	ИначеЕсли	ДанныеЗаполнения = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	//ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
	ДокументОснование = ДанныеЗаполнения;
	
	//ЭтотОбъект.Контрагент 	= ДанныеЗаполнения.Контрагент;
	ЭтотОбъект.Организация 	= ДанныеЗаполнения.Организация;
	ЭтотОбъект.Подразделение 	= ДанныеЗаполнения.Подразделение;
	
	
	
	//ЭтотОбъект.ТипЦен 		= ДанныеЗаполнения.Контрагент.ТипЦен;
	
	//ЭтотОбъект.Наборщик 	= ПараметрыСеанса.Наборщик;
	//ЭтотОбъект.Кладовщик 	= ПараметрыСеанса.Кладовщик;
	
	
	Для Каждого СтрокаСостава Из ДанныеЗаполнения.Запасы Цикл
		
		Если СтрокаСостава.Номенклатура = Справочники.Номенклатура.ПустаяСсылка() Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = Запасы.Добавить();
		//ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаСостава);
		НоваяСтрока.Номенклатура 		=  СтрокаСостава.Номенклатура;
		НоваяСтрока.ЕдиницаИзмерения 	= НоваяСтрока.Номенклатура.ЕдиницаИзмерения;
		
		НоваяСтрока.Количество		 	= СтрокаСостава.Количество;
		
	
		
		//СтруктураПараметров = Новый Структура("Номенклатура, ТипЦен, Подразделение, ДатаСреза", НоваяСтрока.Номенклатура, ЭтотОбъект.ТипЦен, ЭтотОбъект.Подразделение, ЭтотОбъект.Дата);
		
		//НоваяСтрока.Цена 				= ЦенообразованиеСервер.ВернутьЦенуНоменклатуры(СтруктураПараметров);
		
	КонецЦикла;
	
	#Область изменения_20170630_Карпачев_А_Ю
	
	запрос = Новый Запрос;
	
	#Область ТекстЗапроса
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВозвратОтПокупателяИмущество.Номенклатура,
	|	ВозвратОтПокупателяИмущество.Количество,
	|	ВозвратОтПокупателяИмущество.Цена,
	|	ВозвратОтПокупателяИмущество.Сумма,
	|	ВозвратОтПокупателяИмущество.МОЛ,
	|	ВозвратОтПокупателяИмущество.ЦФО
	|ИЗ
	|	Документ.ВозвратОтПокупателя.Имущество КАК ВозвратОтПокупателяИмущество
	|ГДЕ
	|	ВозвратОтПокупателяИмущество.Ссылка = &Ссылка";
	#КонецОбласти
	
	запрос.УстановитьПараметр("Ссылка", ДокументОснование.Ссылка);
	
	Имущество.Загрузить(запрос.Выполнить().Выгрузить());
	
	#КонецОбласти
	
КонецПроцедуры

Процедура ОбработкаПроведения(отказ, режимПроведения)
	
	// Инициализация дополнительных свойств для проведения документа.
	УправлениеПроведениемСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей.
	УправлениеПроведениемСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);

	
	результатЗапроса = Документы.ВозвратПоставщику.СформироватьТаблицыДляПроведения(Ссылка, ДополнительныеСвойства);
	
	Движения["ВзаиморасчетыСПоставщиками"].Загрузить(результатЗапроса[0].Выгрузить());
	Движения["ПартииТоваровНаСкладах"].Загрузить(результатЗапроса[1].Выгрузить());
	Движения["ТоварыВРознице"].Загрузить(результатЗапроса[2].Выгрузить());
	Движения["Имущество"].Загрузить(результатЗапроса[3].Выгрузить());
	Движения["ЗаказыПоставщикам"].Загрузить(результатЗапроса[4].Выгрузить());
	
	ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц.Закрыть();

	
	#Область ПоследовательностьЗапасы
	
	Если Не отказ Тогда
		
		запрос = Новый Запрос;
		
		#Область ТекстЗапроса
		
		запрос.Текст =
		"ВЫБРАТЬ
		|	СоставДокумента.Ссылка.Подразделение,
		|	СоставДокумента.Номенклатура.Родитель.Склад КАК МестоХранения,
		|	СоставДокумента.Номенклатура.Родитель.СчетУчета КАК СчетУчета
		|ИЗ
		|	Документ.ВозвратПоставщику.Запасы КАК СоставДокумента
		|ГДЕ
		|	СоставДокумента.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	СоставДокумента.Номенклатура.Родитель.СчетУчета,
		|	СоставДокумента.Ссылка.Подразделение,
		|	СоставДокумента.Номенклатура.Родитель.Склад";
			
		#КонецОбласти 
		
		запрос.УстановитьПараметр("Ссылка", Ссылка);
		
		результатЗапроса = запрос.Выполнить();
		
		ПринадлежностьПоследовательностям.Запасы.Загрузить(результатЗапроса.Выгрузить());
		
		отбор = Новый Структура ("Подразделение, МестоХранения, СчетУчета");
		
		выборка = результатЗапроса.Выбрать();
		Пока выборка.Следующий() Цикл
			
			ЗаполнитьЗначенияСвойств(отбор, выборка);
			
			Последовательности.Запасы.УстановитьГраницу(МоментВремени(), отбор);
			
		КонецЦикла;
		
	КонецЕсли;
	
	#КонецОбласти 
	
КонецПроцедуры

Процедура ПередЗаписью(отказ, режимЗаписи, режимПроведения)
	
	ПринадлежностьПоследовательностям.Запасы.Очистить();
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Подразделение.Пустая() Тогда
		
		ТекстСообщения = НСтр("ru = 'Запись невозможна без заполнения Подразделения.'");
		ПроверкаДанныхКлиентСервер.СообщитьОбОшибке(отказ, текстСообщения, ЭтотОбъект, "Подразделение");
		
	КонецЕсли;
	
	СуммаСкидки = ОбщегоНазначенияСервер.ПолучитьСуммуДокумента(ЭтотОбъект, "Запасы") * Скидка/100;
	
	
	СуммаДокумента = ОбщегоНазначенияСервер.ПолучитьСуммуДокумента(ЭтотОбъект, "Запасы,Имущество") - СуммаСкидки;
	
КонецПроцедуры

Процедура ПриКопировании(объектКопирования)
	
	ЗаполнениеОбъектовСервер.ЗаполнитьДанныеСкопированногоДокумента(ЭтотОбъект, ОбъектКопирования);
	
КонецПроцедуры

#КонецОбласти 
