
#Область ОбработчикиСобытий

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Ключ.Пустая() Тогда
		ЗаполнитьКоллекцииОбъектов(Параметры.ЗначениеКопирования.Пустая());
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	ЗаполнитьКоллекцииОбъектов(Ложь);
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	деревоОбъектыВыгрузки = РеквизитФормыВЗначение("ОбъектыВыгрузки");
	деревоОбъектыЗагрузки = РеквизитФормыВЗначение("ОбъектыЗагрузки");

	Если деревоОбъектыВыгрузки.Строки.Найти(Истина, "Пометка", Истина) = Неопределено
		И деревоОбъектыЗагрузки.Строки.Найти(Истина, "Пометка", Истина) = Неопределено Тогда
	
		ПроверкаДанныхКлиентСервер.СообщитьОбОшибке(Отказ, НСтр("ru = 'Необходимо выбрать как минимум один объект выгрузки или зарузки.'"), ЭтотОбъект);
	
	КонецЕсли; 

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.ОбъектыВыгрузки.Очистить();
	ТекущийОбъект.ОбъектыЗагрузки.Очистить();
	СохранитьСписокОбъектов(ОбъектыВыгрузки, ТекущийОбъект.ОбъектыВыгрузки);
	СохранитьСписокОбъектов(ОбъектыЗагрузки, ТекущийОбъект.ОбъектыЗагрузки);
	
КонецПроцедуры

#КонецОбласти

#Область ДействияКоманд

&НаКлиенте
Процедура УстановитьВсеПометкиОбъектыВыгрузки(Команда)
	ИнтерфейсКлиентСервер.ИзменитьПометкиКоллекцииЗначений(ОбъектыВыгрузки, Истина)
КонецПроцедуры

&НаКлиенте
Процедура СнятьВсеПометкиОбъектыВыгрузки(Команда)
	ИнтерфейсКлиентСервер.ИзменитьПометкиКоллекцииЗначений(ОбъектыВыгрузки, Ложь)
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВсеПометкиОбъектыЗагрузки(Команда)
	ИнтерфейсКлиентСервер.ИзменитьПометкиКоллекцииЗначений(ОбъектыЗагрузки, Истина)
КонецПроцедуры

&НаКлиенте
Процедура СнятьВсеПометкиОбъектыЗагрузки(Команда)
	ИнтерфейсКлиентСервер.ИзменитьПометкиКоллекцииЗначений(ОбъектыЗагрузки, Ложь)
КонецПроцедуры

#КонецОбласти

#Область ДополнительныеПроцедурыИФункции

// Выполняет заполнение коллекций объектов выгрузки и загрузки.
//
// Параметры:
//  пометкиПоУмолчанию  - Булево - Истина: пометки в списках будут заполнены значениями
//                 по умолчанию; Ложь - пометки будут заполнены ранее заполненными значениями.
//
&НаСервере
Процедура ЗаполнитьКоллекцииОбъектов(пометкиПоУмолчанию)

	ЗаполнитьОбъектыВыгрузки(?(пометкиПоУмолчанию, Неопределено, Объект.ОбъектыВыгрузки));
	ЗаполнитьОбъектыЗагрузки(?(пометкиПоУмолчанию, Неопределено, Объект.ОбъектыЗагрузки));

КонецПроцедуры // ЗаполнитьКоллекцииОбъектов()

// Заполняет коллекцию объектов выгрузки.
//
// Параметры:
//  табличнаяЧасть  - ДанныеФормыКоллекция - Табличная часть, из которой будут получены
//                 сведения о ранее выбранных объектах выгрузки.
//
&НаСервере
Процедура ЗаполнитьОбъектыВыгрузки(табличнаяЧасть)
	
	ОбъектыВыгрузки.ПолучитьЭлементы().Очистить();
	
	ДобавитьНовуюСтрокуОбъектовВыгрузкиЗагрузки(ОбъектыВыгрузки, "Настройки", табличнаяЧасть);
	ДобавитьНовуюСтрокуОбъектовВыгрузкиЗагрузки(ОбъектыВыгрузки, "СтатусыДокументов", табличнаяЧасть, Истина);
	ДобавитьНовуюСтрокуОбъектовВыгрузкиЗагрузки(ОбъектыВыгрузки, "ВопросыАнкет", табличнаяЧасть);
	ДобавитьНовуюСтрокуОбъектовВыгрузкиЗагрузки(ОбъектыВыгрузки, "ФайлыКартинок", табличнаяЧасть);
	
	// Товары.
	новаяСтрока = ДобавитьНовуюСтрокуОбъектовВыгрузкиЗагрузки(ОбъектыВыгрузки, "Товары", табличнаяЧасть);
	ДобавитьНовуюСтрокуОбъектовВыгрузкиЗагрузки(новаяСтрока, "Цены", табличнаяЧасть, Истина);
	ДобавитьНовуюСтрокуОбъектовВыгрузкиЗагрузки(новаяСтрока, "Остатки", табличнаяЧасть, Истина);
	ДобавитьНовуюСтрокуОбъектовВыгрузкиЗагрузки(новаяСтрока, "КартинкиТоваров", табличнаяЧасть);
	ДобавитьНовуюСтрокуОбъектовВыгрузкиЗагрузки(новаяСтрока, "СтандартыПрисутствия", табличнаяЧасть);
	
	// Клиенты.
	новаяСтрока = ДобавитьНовуюСтрокуОбъектовВыгрузкиЗагрузки(ОбъектыВыгрузки, "Клиенты", табличнаяЧасть, Истина);
	ДобавитьНовуюСтрокуОбъектовВыгрузкиЗагрузки(новаяСтрока, "Долги", табличнаяЧасть, Истина);
	ДобавитьНовуюСтрокуОбъектовВыгрузкиЗагрузки(новаяСтрока, "Маршруты", табличнаяЧасть);
	ДобавитьНовуюСтрокуОбъектовВыгрузкиЗагрузки(новаяСтрока, "КартинкиКлиентов", табличнаяЧасть);
	
	ДобавитьНовуюСтрокуОбъектовВыгрузкиЗагрузки(ОбъектыВыгрузки, "Склады", табличнаяЧасть);
	ДобавитьНовуюСтрокуОбъектовВыгрузкиЗагрузки(ОбъектыВыгрузки, "Организации", табличнаяЧасть);
	ДобавитьНовуюСтрокуОбъектовВыгрузкиЗагрузки(ОбъектыВыгрузки, "Планы", табличнаяЧасть);
	ДобавитьНовуюСтрокуОбъектовВыгрузкиЗагрузки(ОбъектыВыгрузки, "ФактическиеПродажи", табличнаяЧасть);
	ДобавитьНовуюСтрокуОбъектовВыгрузкиЗагрузки(ОбъектыВыгрузки, "ФактическаяИсторияПродаж", табличнаяЧасть);
	
	// Обратная выгрузка документов.
	новаяСтрока = ДобавитьНовуюСтрокуОбъектовВыгрузкиЗагрузки(ОбъектыВыгрузки, "ОбратнаяВыгрузкаДокументов", табличнаяЧасть);
	ДобавитьНовуюСтрокуОбъектовВыгрузкиЗагрузки(новаяСтрока, "Поступления", табличнаяЧасть);
	ДобавитьНовуюСтрокуОбъектовВыгрузкиЗагрузки(новаяСтрока, "Перемещения", табличнаяЧасть);
	ДобавитьНовуюСтрокуОбъектовВыгрузкиЗагрузки(новаяСтрока, "Реализации", табличнаяЧасть, Истина);
	ДобавитьНовуюСтрокуОбъектовВыгрузкиЗагрузки(новаяСтрока, "Анкеты", табличнаяЧасть, Истина);

КонецПроцедуры // ЗаполнитьОбъектыВыгрузки()

// Заполняет коллекцию объектов загрузки.
//
// Параметры:
//  табличнаяЧасть  - ДанныеФормыКоллекция - Табличная часть, из которой будут получены
//                 сведения о ранее выбранных объектах загрузки.
//
&НаСервере
Процедура ЗаполнитьОбъектыЗагрузки(табличнаяЧасть)

	ОбъектыЗагрузки.ПолучитьЭлементы().Очистить();
	
	ДобавитьНовуюСтрокуОбъектовВыгрузкиЗагрузки(ОбъектыЗагрузки, "Заявка", табличнаяЧасть, Истина);
	ДобавитьНовуюСтрокуОбъектовВыгрузкиЗагрузки(ОбъектыЗагрузки, "ПКО", табличнаяЧасть, Истина);
	ДобавитьНовуюСтрокуОбъектовВыгрузкиЗагрузки(ОбъектыЗагрузки, "ВозвратОтПокупателя", табличнаяЧасть, Истина);
	ДобавитьНовуюСтрокуОбъектовВыгрузкиЗагрузки(ОбъектыЗагрузки, "Анкета", табличнаяЧасть, Истина);
	ДобавитьНовуюСтрокуОбъектовВыгрузкиЗагрузки(ОбъектыЗагрузки, "Мерчандайзинг", табличнаяЧасть, Истина);
	ДобавитьНовуюСтрокуОбъектовВыгрузкиЗагрузки(ОбъектыЗагрузки, "КоординатыКлиентов", табличнаяЧасть);
	ДобавитьНовуюСтрокуОбъектовВыгрузкиЗагрузки(ОбъектыЗагрузки, "ФотоОрганизаций", табличнаяЧасть);
	ДобавитьНовуюСтрокуОбъектовВыгрузкиЗагрузки(ОбъектыЗагрузки, "ФотоТорговыхТочек", табличнаяЧасть);
	ДобавитьНовуюСтрокуОбъектовВыгрузкиЗагрузки(ОбъектыЗагрузки, "ЖурналРаботыАгента", табличнаяЧасть);

КонецПроцедуры // ЗаполнитьОбъектыЗагрузки()

// Вспомогательная функция для добавления новой строки в коллекцию объектов выгрузки или
// загрузки.
//
// Параметры:
//  коллекцияДанных  - ДанныеФормыДерево - Коллекция, в которую добавляется новая строка.
//  видОбъекта - Строка - Имя вида добавляемого объекта. Должно совпадать с одним из значений
//                 перечисления "ПанАгентВидыОбъектовОбмена".
//  табличнаяЧасть  - ДанныеФормыКоллекция - Табличная часть, из которой будут получены
//                 сведения о ранее выбранных объектах выгрузки или загрузки.
//  пометкаПоУмолчанию  - Булево - Истина - определяет установить пометку в новой строке
//                 если табличная часть для считывания ранее сохранённых данных не указана;
//                 Ложь - пометка по умолчанию устанавливаться не будет.
//
// Возвращаемое значение:
//   ДанныеФормыЭлементДерева   - Добавленная строка коллекии объектов.
//
&НаСервереБезКонтекста
Функция ДобавитьНовуюСтрокуОбъектовВыгрузкиЗагрузки(коллекцияДанных, видОбъекта, табличнаяЧасть = Неопределено, пометкаПоУмолчанию = Ложь)
	
	объект = Перечисления.ПанАгентВидыОбъектовОбмена[видОбъекта];

	новаяСтрока = коллекцияДанных.ПолучитьЭлементы().Добавить();
	новаяСтрока.Объект = объект;
	
	Если табличнаяЧасть = Неопределено Тогда
		
		// Пометка по умолчанию.
		Если пометкаПоУмолчанию Тогда
			новаяСтрока.Пометка = Истина;
		КонецЕсли;
	
	Иначе
		
		// Пометка из ранее сохранённых данных.
		строки = табличнаяЧасть.НайтиСтроки(Новый Структура("Объект", объект));
		Если строки.Количество() > 0 Тогда
			новаяСтрока.Пометка = Истина;
		КонецЕсли; 
	
	КонецЕсли; 
	
	Возврат новаяСтрока;

КонецФункции // ДобавитьНовуюСтрокуОбъектовВыгрузкиЗагрузки()

// Помещает данные из коллекции объектов в табличную часть элемента справочника.
//
// Параметры:
//  коллекцияДанных  - ДанныеФормыДерево - Коллекция, из которой выбираются данные.
//  табличнаяЧасть  - ДанныеФормыКоллекция - Табличная часть, в которую будут помещены
//                 сведения о выбранных объектах выгрузки или загрузки.
//
&НаСервереБезКонтекста
Процедура СохранитьСписокОбъектов(коллекцияДанных, табличнаяЧасть)

	Для каждого строкаКоллекции Из коллекцияДанных.ПолучитьЭлементы() Цикл
	
		Если строкаКоллекции.Пометка Тогда
			табличнаяЧасть.Добавить().Объект = строкаКоллекции.Объект;
		КонецЕсли; 
		
		СохранитьСписокОбъектов(строкаКоллекции, табличнаяЧасть);
	
	КонецЦикла;

КонецПроцедуры // СохранитьСписокОбъектов()

#КонецОбласти