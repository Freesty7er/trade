
// Выполняет подготовительные операции перед печатью объектов, такие как проверка возможности печати,
// получение списка документов для протокола печати и т.п. После всех проверок возвращает наборы
// объектов: проверенные объекты, пропущенные объекты, документы для протокола печати.
//
// Параметры
//  ОбъектыПечати  - Массив, Произвольная ссылка - Ссылка на объект или массив ссылок на
//                 объекты, печатные формы которых необходимо сформировать. Если передаётся
//                 массив, то все объекты должны быть одного типа.
//  ИмяМакета  - Строка - Имя макета объекта, на основании которого будут формироваться
//                 печатные формы.
//
// Возвращаемое значение:
//   ФиксированнаяСтруктура   - Наборы объектов для печати. Содержит следующие наборы:
//                 ПроверенныеОбъекты  - Массив - Набор проверенных объектов.
//                 ПропущенныеОбъекты  - Массив - Набор объектов, не прошедших проверку.
//                 ДокументыДляПротоколаПечати  - Соответствие - Набор документов для протокола печати. Этот набор
//                 		может отсутствовать.
//
Функция ВыполнитьПодготовительныеОперацииПередПечатью(ОбъектыПечати, ИмяМакета) Экспорт

	Если ТипЗнч(ОбъектыПечати) = Тип("Массив") Тогда
		
		Если ОбъектыПечати.Количество() = 0 Тогда
			Возврат Неопределено;	// Пустой массив печатать не будем.
		Иначе
			мОбъектыПечати = ОбъектыПечати;
		КонецЕсли; 
		
	Иначе
		
		мОбъектыПечати = Новый Массив(1);
		мОбъектыПечати[0] = ОбъектыПечати;
		
	КонецЕсли; 
	
	УстановитьПривилегированныйРежим(Истина);
	
	НаборыОбъектовДляПечати = ПроверитьВозможностьПечатиОбъектов(мОбъектыПечати);
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат Новый ФиксированнаяСтруктура(НаборыОбъектовДляПечати);

КонецФункции // ВыполнитьПодготовительныеОперацииПередПечатью()

// Выполняет проверку возможности печати объектов, например а отсутствие пометки удаления, проведённости у документов и т.п.
//
// Параметры
//  мОбъектыПечати  - Массив - Набор ссылок объектов для проверки.
//
// Возвращаемое значение:
//   Структура   - Наборы объектов для печати. Содержит следующие наборы:
//                 ПроверенныеОбъекты  - Массив - Набор проверенных объектов.
//                 ПропущенныеОбъекты  - Массив - Набор объектов, не прошедших проверку.
//
Функция ПроверитьВозможностьПечатиОбъектов(мОбъектыПечати)

	мПроверенныеОбъекты = Новый Массив;
	мПропущенныеОбъекты = Новый Массив;	
	
	ТипОбъектаПечати = ТипЗнч(мОбъектыПечати[0]);
	ЭтоДокументы = Документы.ТипВсеСсылки().СодержитТип(ТипОбъектаПечати);
	
	// Проверка объектов печати на корректность их данных.
	Для каждого ОбъектПечати Из мОбъектыПечати Цикл
		
		// Проверка на одинаковость типов всех объектов печати.
		Если ТипОбъектаПечати <> ТипЗнч(ОбъектПечати) Тогда
		
			УправлениеПечатьюКлиентСервер.ДобавитьВСписокПропущенныхОбъектовПечати(мПропущенныеОбъекты, ОбъектПечати, НСтр("ru = 'Запрещена одновременная печать объектов различных типов.'"));
			Продолжить;
		
		КонецЕсли; 
		
		// Проверка на отсутствие пометки удаления.
		Если ОбъектПечати.ПометкаУдаления Тогда
		
			УправлениеПечатьюКлиентСервер.ДобавитьВСписокПропущенныхОбъектовПечати(мПропущенныеОбъекты, ОбъектПечати, НСтр("ru = 'Запрещена печать помеченных на удаление объектов.'"));
			Продолжить;
		
		КонецЕсли; 
		
		// Проверки для документов.
		Если ЭтоДокументы Тогда
			
			// Перед печатью документы должны быть проведены.
			Если ОбъектПечати.Метаданные().Проведение = Метаданные.СвойстваОбъектов.Проведение.Разрешить И Не ОбъектПечати.Проведен Тогда
				
				УправлениеПечатьюКлиентСервер.ДобавитьВСписокПропущенныхОбъектовПечати(мПропущенныеОбъекты, ОбъектПечати, НСтр("ru = 'Запрещена печать непроведённых документов.'"));
				Продолжить;
			
			КонецЕсли; 
		
		КонецЕсли; 
		
		мПроверенныеОбъекты.Добавить(ОбъектПечати);
	
	КонецЦикла; 
	
	Возврат Новый Структура("ПроверенныеОбъекты,ПропущенныеОбъекты", мПроверенныеОбъекты, мПропущенныеОбъекты);

КонецФункции // ПроверитьВозможностьПечатиОбъектов()

// Выполняет формирование печатных форм переданных объектов.
//
// Параметры
//  соПараметрыОбъектовПечати  - Соответствие - Набор ссылок на объекты, печатные формы которых необходимо сформировать.
//                 В качестве ключа используется ссылка на объект, а в качестве значения - параметры повторной печати.
//                 Все объекты должны быть одного типа.
//  ИмяМакета  - Строка - Имя макета объекта, на основании которого будут формироваться печатные формы.
//  сзКоллекцияПечатныхФорм  - СписокЗначений - В этот список добаляются имена областей табличного документа для
//                 последующей навигации по экземплярам печатных форм различных объектов печати.
//  мПропущенныеОбъекты  - Массив - Набор пропущенных по результатам проверки объектов.
//  ДокументРезультат  - ТабличныйДокумент, ТекстовыйДокумент - Документ, в который будет выполнен вывод результирующей
//                 печатной формы.
//  стДополнительныеПараметры  - Структура - Дополнительные параметры для формирования печатных форм.
//
Процедура СформироватьПечатныеФормы(соПараметрыОбъектовПечати, ИмяМакета, сзКоллекцияПечатныхФорм, мПропущенныеОбъекты, ДокументРезультат, стДополнительныеПараметры) Экспорт

	// Определим параметры переданных объектов печати. Так как все объекты должны быть одного типа, то
	// сделаем это по первому элементу.
	ОбъектПечати = УправлениеПечатьюСервер.ПолучитьОбразецОбъектаПечати(соПараметрыОбъектовПечати);
	ИмяОбъектаПечати = ОбъектПечати.Метаданные().Имя;
	ТипОбъектаПечати = ТипЗнч(ОбъектПечати);
	
	// Определим менеджер объектов печати.
	Если Документы.ТипВсеСсылки().СодержитТип(ТипОбъектаПечати) Тогда
		МенеджерОбъекта = Документы[ИмяОбъектаПечати];
	ИначеЕсли Справочники.ТипВсеСсылки().СодержитТип(ТипОбъектаПечати) Тогда
		МенеджерОбъекта = Справочники[ИмяОбъектаПечати];
	КонецЕсли; 
	
	УстановитьПривилегированныйРежим(Истина);
	
	// Модуль менеджера объекта должен экспортировать процедуру Печать().
	МенеджерОбъекта.Печать(соПараметрыОбъектовПечати, ИмяМакета, сзКоллекцияПечатныхФорм, мПропущенныеОбъекты, ДокументРезультат, стДополнительныеПараметры);
	
	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	// Здесь можно выполнить дополнительную обработку сформированного табличного документа.

КонецПроцедуры // СформироватьПечатныеФормы()

// Выполняет завершающие операции при формировании печатных форм.
//
// Параметры
//  сзКоллекцияПечатныхФорм  - СписокЗначений - В этот список добаляются имена областей табличного документа
//                 для последующей навигации по экземплярам печатных форм различных объектов печати.
//  ДокументРезультат  - ТабличныйДокумент, ТекстовыйДокумент - Документ, в который выводится результирующая
//                 печатная формы.
//  ПредставлениеОбъекта  - Строка - Строковое представление объекта печати.
//  НачалоЭкземпляра  - Число - Позиция в результирующем документе, с которой начинается вывод печатой формы
//                 текущего объекта.
//
Процедура ЗакончитьФормированиеПечатнойФормы(сзКоллекцияПечатныхФорм, ДокументРезультат, ПредставлениеОбъекта, НачалоЭкземпляра) Экспорт

	Если ТипЗнч(ДокументРезультат) = Тип("ТабличныйДокумент") Тогда
	
		ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
		
		// Добавим документ в коллекцию печатных форм.
		ИмяОбласти = "Объект_" + сзКоллекцияПечатныхФорм.Количество() + 1;
		ДокументРезультат.Область(НачалоЭкземпляра,, ДокументРезультат.ВысотаТаблицы).Имя = ИмяОбласти;
		сзКоллекцияПечатныхФорм.Добавить(ИмяОбласти, ПредставлениеОбъекта);
	
	Иначе
		
		ДокументРезультат.ДобавитьСтроку("");	// В качестве своеобразного разделителя добавим пустую строку.
		
		// Добавим документ в коллекцию печатных форм.
		сзКоллекцияПечатныхФорм.Добавить(Новый Структура("НачальнаяСтрока,КонечнаяСтрока", НачалоЭкземпляра, ДокументРезультат.КоличествоСтрок()), ПредставлениеОбъекта);
		
	КонецЕсли; 

КонецПроцедуры // ЗакончитьФормированиеПечатнойФормы()

// Выполняет завершающие операции при формировании печатных форм документов.
//
// Параметры
//  коллекцияПечатныхФорм  - СписокЗначений - В этот список добаляются имена областей табличного документа
//                 для последующей навигации по экземплярам печатных форм различных объектов печати.
//  документРезультат  - ТабличныйДокумент, ТекстовыйДокумент - Документ, в который выводится результирующая
//                 печатная формы.
//  началоЭкземпляра  - Число - Позиция в результирующем документе, с которой начинается вывод печатой формы
//                 текущего объекта.
//  номерДокумента  - Число, Строка - Номер печатаемого документа.
//  датаДокумента  - Дата - Дата печатаемого документа.
//
Процедура ЗакончитьФормированиеПечатнойФормыДокумента(коллекцияПечатныхФорм, документРезультат, началоЭкземпляра, номерДокумента, датаДокумента) Экспорт

	представлениеОбъекта = СтрШаблон(НСтр("ru = '%1 от %2'"), номерДокумента, датаДокумента);
	ЗакончитьФормированиеПечатнойФормы(коллекцияПечатныхФорм, документРезультат, представлениеОбъекта, НачалоЭкземпляра);

КонецПроцедуры // ЗакончитьФормированиеПечатнойФормы()

// Возвращает массив ссылок объектов печати, полученный из набора параметров объектов печати.
//
// Параметры
//  соПараметрыОбъектовПечати  - Соответствие - Набор параметров объектов для формирования печатных форм.
//                 В качестве ключа используются ссылки на объекты, а в качестве значений - дополнительные
//                 параметры печати.
//
// Возвращаемое значение:
//   Массив   - Набор ссылок объектов печати.
//
Функция ПолучитьМассивОбъектовПечати(соПараметрыОбъектовПечати) Экспорт

	мОбъектыПечати = Новый Массив;
	Для каждого ПараметрыОбъектаПечати Из соПараметрыОбъектовПечати Цикл
		мОбъектыПечати.Добавить(ПараметрыОбъектаПечати.Ключ);
	КонецЦикла; 
	
	Возврат мОбъектыПечати;

КонецФункции // ПолучитьМассивОбъектовПечати()

// Возвращает первый объект из набора параметров объектов печати. Такой объект может использоваться, например,
// в качестве образца для определения различных параметров печати.
//
// Параметры
//  соПараметрыОбъектовПечати  - Соответствие - Набор параметров объектов для формирования печатных форм.
//                 В качестве ключа используются ссылки на объекты, а в качестве значений - дополнительные
//                 параметры печати.
//
// Возвращаемое значение:
//   Ссылка   - Любой ссылочный тип, который может быть распечатан.
//
Функция ПолучитьОбразецОбъектаПечати(соПараметрыОбъектовПечати) Экспорт

	Для каждого СтрокаПараметрыОбъектовПечати Из соПараметрыОбъектовПечати Цикл
		Возврат СтрокаПараметрыОбъектовПечати.Ключ;
	КонецЦикла; 

КонецФункции // ПолучитьОбразецОбъектаПечати()

// Оформляет строки списка в выводимом табличном документе с чередованием цветов.
//
// Параметры
//  ОбластьЯчеек  - ТабличныйДокумент - Выводима область документа, представляющая
//                 собой строку списка.
//  НомерСтроки  - Число - Номер выводимой строки списка.
//
Процедура ОформитьСтрокуВыводимогоСписка(ОбластьЯчеек, НомерСтроки) Экспорт

	ОбластьЯчеек.Область(ОбластьЯчеек.ВысотаТаблицы - 1, 1, ОбластьЯчеек.ВысотаТаблицы, ОбластьЯчеек.ШиринаТаблицы).ЦветФона = ?(Не НомерСтроки % 2, ЦветаСтиля.АльтернативныйЦветФонаПоля, Новый Цвет);

КонецПроцедуры // ОформитьСтрокуВыводимогоСписка()
