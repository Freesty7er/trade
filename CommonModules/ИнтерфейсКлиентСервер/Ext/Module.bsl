
#Область ОбщегоНазначения

// Изменяет все пометки указанной коллекции значений в соответствии с выбранным типом пометки.
//
// Параметры
//  КоллекцияЗначений  - Произвольный - Любая коллекция, в которой может быть реквизит типа Булево.
//  Пометка  - Булево - Значение пометки, которое необходимо установить для всех строк коллекции
//                 значений.
//  ИмяКолонки  - Строка - Имя колонки, которая содержит значения флажков ячейки коллекции значений.
//                 По умолчанию используется значение "Пометка";
//
Процедура ИзменитьПометкиКоллекцииЗначений(КоллекцияЗначений, Пометка, ИмяКолонки = "Пометка") Экспорт
	
	КоллекцияЗначенийТип = ТипЗнч(КоллекцияЗначений);
	ЗначениеОбработано = Ложь;
	
	#Если Сервер Или ВнешнееСоединение Тогда
		
		Если КоллекцияЗначенийТип = Тип("ТаблицаЗначений") Тогда 
			
			// ТаблицаЗначений.
			КоллекцияЗначений.ЗаполнитьЗначения(Пометка, ИмяКолонки);
			ЗначениеОбработано = Истина;
			
		ИначеЕсли КоллекцияЗначенийТип = Тип("ДеревоЗначений") Или КоллекцияЗначенийТип = Тип("СтрокаДереваЗначений") Тогда 
			
			// ДеревоЗначений или СтрокаДереваЗначений.
			Для каждого СтрокаКоллекцияЗначений Из КоллекцияЗначений.Строки Цикл
				
				Если СтрокаКоллекцияЗначений.Строки.Количество() > 0 Тогда
					ИзменитьПометкиКоллекцииЗначений(СтрокаКоллекцияЗначений, Пометка, ИмяКолонки);
				КонецЕсли; 
				
				СтрокаКоллекцияЗначений[ИмяКолонки] = Пометка;
				
			КонецЦикла; 
			
			ЗначениеОбработано = Истина;
			
		КонецЕсли;
		
	#КонецЕсли
	
	Если Не ЗначениеОбработано Тогда
	
		Если КоллекцияЗначенийТип = Тип("ДанныеФормыДерево") Или КоллекцияЗначенийТип = Тип("ДанныеФормыЭлементДерева") Тогда
			
			// ДанныеФормыДерево или ДанныеФормыЭлементДерева.
			ЭлементыДерева = КоллекцияЗначений.ПолучитьЭлементы();
			
			Для каждого СтрокаЭлементыДерева Из ЭлементыДерева Цикл
				
				ИзменитьПометкиКоллекцииЗначений(СтрокаЭлементыДерева, Пометка, ИмяКолонки);
				СтрокаЭлементыДерева[ИмяКолонки] = Пометка;
				
			КонецЦикла; 
			
		ИначеЕсли КоллекцияЗначенийТип = Тип("СписокЗначений") Тогда 
			
			// СписокЗначений.
			КоллекцияЗначений.ЗаполнитьПометки(Пометка);
			
		Иначе
			
			// Любая другая коллекция с "плоской" структурой.
			Для каждого СтрокаКоллекцияЗначений Из КоллекцияЗначений Цикл
				СтрокаКоллекцияЗначений[ИмяКолонки] = Пометка;
			КонецЦикла; 
			
		КонецЕсли; 
	
	КонецЕсли; 

КонецПроцедуры // ИзменитьПометкиКоллекцииЗначений()

// Формирует представление отбора, скомпонованное из переданных элементов.
//
// Параметры
//  соПараметрыПредставленияОтбора  - Соответствие - Набор элементов для компоновки представления отбора. В
//                 ключе передаётся строковое представление элемента отбора, а в значении соответствия -
//                 значение элемента отбора.
//
// Возвращаемое значение:
//   Строка   - Скомпонованное представление отбора.
//
Функция СформироватьПредставлениеПараметровОтбора(соПараметрыПредставленияОтбора) Экспорт
	
	ПредставлениеПараметровОтбора = "";
	Для каждого ЭлементПредставленияОтбора Из соПараметрыПредставленияОтбора Цикл
		
		Если Не ПустаяСтрока(ПредставлениеПараметровОтбора) Тогда
			ПредставлениеПараметровОтбора = ПредставлениеПараметровОтбора + " и ";
		КонецЕсли; 
		
		ПредставлениеПараметровОтбора = ПредставлениеПараметровОтбора + ЭлементПредставленияОтбора.Ключ + " = """ + ЭлементПредставленияОтбора.Значение + """";
		
	КонецЦикла; 
	
	Возврат ПредставлениеПараметровОтбора;

КонецФункции // СформироватьПредставлениеПараметровОтбора()

// В зависимости от переданных параметров устанавливает свойства элемента формы "Наименование". Имеет смысл
// для объектов, у которых предусмотрена возможность автоматического формирования наименования на основании
// данных объекта.
//
// Параметры
//  Элементы  - ВсеЭлементыФормы - Коллекция всех элементов управляемой формы.
//  Наименование  - Строка - Наименование объекта.
//  АвтоматическиФормироватьНаименование  - Булево - Необходимость автоматического формирования наименования.
//
Процедура УстановитьСвойстваНаименованияПриАвтоматическомФормировании(элементы, наименование, автоматическиФормироватьНаименование) Экспорт

	элементы.Наименование.ТолькоПросмотр = автоматическиФормироватьНаименование;
	элементы.Наименование.АвтоОтметкаНезаполненного = Не автоматическиФормироватьНаименование;
	элементы.Наименование.ОтметкаНезаполненного = Не автоматическиФормироватьНаименование И ПустаяСтрока(наименование);

КонецПроцедуры // УстановитьСвойстваНаименованияПриАвтоматическомФормировании()

#КонецОбласти 
