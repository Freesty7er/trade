Процедура ПроверитьОтклонениеПриОтгрузке(отказ, объект, имяТабличнойЧасти = "Запасы") Экспорт
	
	параметрыУчетаПодразделения = РегистрыСведений.ПараметрыУчетаПоПодразделениям.ПолучитьПараметрыУчетаПоПодразделению(объект.Дата, объект.Подразделение, Новый Структура("ВыполнятьПроверкуКратностиОтклоненияПриОтгрузке"));
	Если Не параметрыУчетаПодразделения.ВыполнятьПроверкуКратностиОтклоненияПриОтгрузке Тогда
		Возврат;
	КонецЕсли;
	
	табличнаяЧасть = объект[имяТабличнойЧасти];
	
	представлениеТабличнойЧасти = Метаданные.НайтиПоТипу(ТипЗнч(табличнаяЧасть)).Представление();
	
	Если табличнаяЧасть.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	запрос = Новый Запрос;
	
	#Область ТекстЗапроса
	
	запрос.Текст =
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.НомерСтроки,
	|	-ТабличнаяЧасть.КоличествоОтклонение КАК КоличествоОтклонение,
	|	ВЫРАЗИТЬ(ТабличнаяЧасть.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура
	|ПОМЕСТИТЬ ТабличнаяЧастьОбъекта
	|ИЗ
	|	&ТабличнаяЧасть КАК ТабличнаяЧасть
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧастьОбъекта.НомерСтроки,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧастьОбъекта.Номенклатура.БПАГКратностьУпаковки <= ТабличнаяЧастьОбъекта.КоличествоОтклонение
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПроверкаОтклонения,
	|	ЕСТЬNULL(ПараметрыУчетаПоВидамНоменклатурыСрезПоследних.ВыполнятьПроверкуКратностиОтклоненияПриОтгрузке, ЛОЖЬ) КАК ВыполнятьПроверку
	|ИЗ
	|	ТабличнаяЧастьОбъекта КАК ТабличнаяЧастьОбъекта
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыУчетаПоВидамНоменклатуры.СрезПоследних(&ДатаСреза, ) КАК ПараметрыУчетаПоВидамНоменклатурыСрезПоследних
	|		ПО ТабличнаяЧастьОбъекта.Номенклатура.КД_Вид = ПараметрыУчетаПоВидамНоменклатурыСрезПоследних.ВидНоменклатуры
	|ГДЕ
	|	ТабличнаяЧастьОбъекта.КоличествоОтклонение > 0
	|	И ВЫБОР
	|			КОГДА ТабличнаяЧастьОбъекта.Номенклатура.БПАГКратностьУпаковки <= ТабличнаяЧастьОбъекта.КоличествоОтклонение
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|	И ЕСТЬNULL(ПараметрыУчетаПоВидамНоменклатурыСрезПоследних.ВыполнятьПроверкуКратностиОтклоненияПриОтгрузке, ЛОЖЬ)";
	
	#КонецОбласти
	
	
	запрос.УстановитьПараметр("ТабличнаяЧасть", табличнаяЧасть);
	запрос.УстановитьПараметр("ДатаСреза", объект.Дата);
	
	результатЗапроса = запрос.Выполнить();
	
	Если результатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	отказ = Истина;
	
	// Формируем список номеров строк.
	списокСтрок = "";
	
	выборка = результатЗапроса.Выбрать();
	Пока выборка.Следующий() Цикл
		
		// Если в списке уже есть номера строк, добавим запятую.
		Если Не ПустаяСтрока(списокСтрок) Тогда
			списокСтрок = списокСтрок + ", ";
		КонецЕсли;
		
		списокСтрок = списокСтрок + выборка.НомерСтроки;
		
	КонецЦикла;
	
	текстСообщения = "Обнаружена перетарка в строках.
	|Строки списка ""[ПредставлениеТабличнойЧасти]"": [СписокСтрок].";
	
	ТекстСообщения = СтрЗаменить(ТекстСообщения, "[ПредставлениеТабличнойЧасти]", представлениеТабличнойЧасти);
	ТекстСообщения = СтрЗаменить(ТекстСообщения, "[СписокСтрок]", списокСтрок);
	
	ПроверкаДанныхКлиентСервер.СообщитьОбОшибке(Истина, текстСообщения, объект, имяТабличнойЧасти);
	
	
КонецПроцедуры