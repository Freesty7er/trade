//	ПолучитьОтветHTTP()
Функция ПолучитьОтветHTTP(ТекстЗапроса,МетодСервиса,МетодСервисаОтвет)
	Сервер = "rinkai.eu";
    Ресурс = "/riro/WebService2Interface";
	
	ПроксиСервер = Новый ИнтернетПрокси;
	//ПроксиСервер.Пользователь = Константы.ПроксиПользователь.Получить();
	//ПроксиСервер.Пароль       = Константы.ПроксиПароль.Получить();
	
	ПроксиСервер.Пользователь = "";
	ПроксиСервер.Пароль       = ""; 
    HTTP =  Новый HTTPСоединение(Сервер,,,,ПроксиСервер,120);
	
	Если HTTP = Неопределено Тогда
		Сообщить("Не удалось установить HTTP соединение!");
		Возврат "";
	КонецЕсли;	

 
	ТекстЗапроса = "<soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:web=""http://webservice.riro.rinkai/"">
				|   <soapenv:Header/>
				|   <soapenv:Body> 
				|      <web:"+МетодСервиса+">
				|      "+ТекстЗапроса+"
				|      </web:"+МетодСервиса+">
				|   </soapenv:Body>
				|</soapenv:Envelope>";
    
		
	ЗаголовокHTTP = Новый Соответствие();
    ЗаголовокHTTP.Вставить("Content-type", "text/xml;charset=UTF-8");
	ЗаголовокHTTP.Вставить("SOAPAction"  , "");

	
	HTTPЗапрос = Новый HTTPЗапрос(Ресурс,ЗаголовокHTTP);
	HTTPЗапрос.УстановитьТелоИзСтроки(ТекстЗапроса,"UTF-8");
	
	
    HTTPОтвет = HTTP.ОтправитьДляОбработки(HTTPЗапрос);
	
	Если HTTPОтвет = Неопределено Тогда
		Сообщить("Не удалось получить ответ!");
		Возврат "";
	КонецЕсли;
	
    Запрос    = HTTPОтвет.ПолучитьТелоКакСтроку();
	
	Запрос = Сред(Запрос,Найти(Запрос,"<return>"));
	Запрос = Сред(Запрос,1,Найти(Запрос,"</return>")-1) + "</return>";
	Запрос = 
	"<"+МетодСервисаОтвет+" xmlns=""http://webservice.riro.rinkai/"" xmlns:xs=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
	|"+Запрос+"
    |</"+МетодСервисаОтвет+">";
	
	
	Возврат Запрос; 
КонецФункции

//	ПолучитьВремяИзСекунд()
Функция ПолучитьВремяИзСекунд(Время)
  Минуты  = Цел(Время/60);
  Секунды = Время - Минуты*60;
  Часы    = Цел(Минуты/60);
  МинутыОстаток = Минуты - Часы*60;
  
  СтрокаСекунды = Формат(Секунды,"ЧЦ=2;ЧГ=;ЧВН=;ЧН=");
  СтрокаМинуты  = Формат(МинутыОстаток,"ЧЦ=2;ЧГ=;ЧВН=;ЧН=");
  СтрокаЧасы    = Формат(Часы,"ЧЦ=2;ЧГ=;ЧВН=;ЧН=");
    
  Возврат Дата("00010101"+СтрокаЧасы+СтрокаМинуты+СтрокаЧасы);
КонецФункции

//	ЗагрузитьЗаказыWS()
Процедура ЗагрузитьЗаказыWS(Знач ДокументОбъект) Экспорт
	
	
	МетодСервиса      = "GetPlans2";
	МетодСервисаОтвет = "GetPlans2Response";
	ТекстЗапроса      = ПолучитьТекстЗапросаДляПланов(МетодСервиса);
	
	Если ТекстЗапроса = "" Тогда Возврат КонецЕсли;
	
	Результат = ПолучитьОтветHTTP(ТекстЗапроса,МетодСервиса,МетодСервисаОтвет);
	Если Результат = "" Тогда Возврат КонецЕсли;
	
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.УстановитьСтроку(Результат);
	ОбъектXDTO = ФабрикаXDTO.ПрочитатьXML(ЧтениеXML,ФабрикаXDTO.Тип("http://webservice.riro.rinkai/", МетодСервисаОтвет));
	
			
	Если ОбъектXDTO.return.CallResult = 0 Тогда
		Сообщить("Данные успешно получены!");
	Иначе
		Сообщить("Ошибка получения данных. Код ошибки "+Строка(ОбъектXDTO.return.CallResult));
		Возврат;
	КонецЕсли;	

    Загрузка_RinkaiWS(ОбъектXDTO, ДокументОбъект);
	
	//Если УдалятьПланыПослеЗагрузки Тогда
	//	УдалитьПланыИзВременнойТаблицыWS();
	//КонецЕсли;
	
КонецПроцедуры	// ЗагрузитьЗаказыWS()

//	ПолучитьТекстЗапросаДляПланов()
Функция ПолучитьТекстЗапросаДляПланов(МетодСервиса)
	
	wsKey = "fain0n0";
	
	ТипОбъекта = ФабрикаXDTO.Тип("http://webservice.riro.rinkai/", МетодСервиса);
	
	ОбъектXDTO                    = ФабрикаXDTO.Создать(ТипОбъекта);
	ОбъектXDTO.wsKey              = wsKey;
	//depotUserDefinedId            = ПолучитьИндентификаторСклада();
	depotUserDefinedId            = "FNO";
	
	Если depotUserDefinedId = "" Тогда
		Возврат "";
	КонецЕсли;	
	
	ОбъектXDTO.depotUserDefinedId = depotUserDefinedId;
	
	
	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.УстановитьСтроку(); // запись в строку
	
	ФабрикаXDTO.ЗаписатьXML(ЗаписьXML, ОбъектXDTO);
	
	ДанныеXML = ЗаписьXML.Закрыть(); // документ готов!
	
	ТекстовыйДокумент = Новый ТекстовыйДокумент;
	ТекстовыйДокумент.УстановитьТекст(ДанныеXML);
	
	//Удаляем первыю и последнюю строку, теги с определение метода
	ТекстовыйДокумент.УдалитьСтроку(1);
	ТекстовыйДокумент.УдалитьСтроку(ТекстовыйДокумент.КоличествоСтрок());
	
	Возврат ТекстовыйДокумент.ПолучитьТекст(); 		
	
КонецФункции

//	Загрузка_RinkaiWS()
Процедура Загрузка_RinkaiWS(ОбъектXDTO, ДокументОбъект)
	
	//ТаблицаЗагрузки  = СформироватьТаблицуЗагрузки();
	ДокументОбъект.Маршруты.Очистить();
	ДокументОбъект.Остановки.Очистить();
	ДокументОбъект.Планы.Очистить();
	
	//Отобразим доступные планы
	//ФормаПланов = ЭтотОбъект.ПолучитьФорму("ФормаПланов",);
	
	
	//ТаблицаПланов = СформироватьТаблицуПланов();
	ПорядковыйНомерПлана = 1;
	Для Каждого План Из ОбъектXDTO.Return.Plans Цикл
		
		Если НЕ(Найти(План.Description, "@") = 0) Тогда
			Продолжить;
		КонецЕсли;
		
		ДатаСозданияПлана = Дата(Формат(План.CreationDate,"ЧГ="));
		СкладПланирования = План.DepotUserDefinedId;
		
		Если НачалоДня(ДатаСозданияПлана) = НачалоДня(ДокументОбъект.Дата) Тогда	// добавить проверку склада планирования
			
			СтрокаПлана                     = ДокументОбъект.Планы.Добавить();
			
			СтрокаПлана.Номер               = ПорядковыйНомерПлана-1;
			СтрокаПлана.НомерПлана          = План.PlanId;
			СтрокаПлана.Склад               = СкладПланирования;
			СтрокаПлана.План                = План.Description;
			СтрокаПлана.ДатаСоздания        = ДатаСозданияПлана;
			СтрокаПлана.ВремяСоздания       = Дата("00010101"+?(СтрДлина(Формат(План.CreationTime,"ЧГ="))<6,"0"+Формат(План.CreationTime,"ЧГ="),Формат(План.CreationTime,"ЧГ=")));
			СтрокаПлана.ЦенаПлана           = План.Costs;
			СтрокаПлана.Километры           = План.Km;
			СтрокаПлана.ЗатраченноеВремя    = План.Time;
			СтрокаПлана.КоличествоМаршрутов = План.NoOfRoutes;
			
		КонецЕсли;
		
		ПорядковыйНомерПлана = ПорядковыйНомерПлана + 1;
		
	КонецЦикла;
	
	//НужныйПлан =  ОбъектXDTO.Return.Plans[Результат.Номер-1];
	//Для Индекс = 1 По КолвоПланов - 1 Цикл
	Для Каждого СтрокаПлана Из ДокументОбъект.Планы Цикл;
		
		НужныйПлан =  ОбъектXDTO.Return.Plans[СтрокаПлана.Номер];
		
		ЗаполнитьТаблицуЗагрузки(НужныйПлан.Routes, ДокументОбъект);
		
		
		//Дополним таблицу данными из 1С
		//НачалоПериода = НачалоНедели(КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("Период").Значение.ДатаНачала);
		//КонецПериода = КонецНедели(КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("Период").Значение.ДатаОкончания);
		НачалоПериода = НачалоДня(ДокументОбъект.Дата);
		КонецПериода = КонецДня(ДокументОбъект.Дата);
		
		//МассивНомеровЗаказов = ДокументОбъект.Остановки.ВыгрузитьКолонку("НомерЗаказа");
		//ОбщегоНазначенияКлиентСервер.УдалитьПовторяющиесяЭлементыМассива(МассивНомеровЗаказов);
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	кпкЗаявка.Ссылка,
		|	кпкЗаявка.Номер
		|ИЗ
		|	Документ.кпкЗаявка КАК кпкЗаявка
		|ГДЕ
		|//	кпкЗаявка.Номер В(&Массив)
		|//	И 
		|кпкЗаявка.ДатаДоставки МЕЖДУ &НачалоПериода И &КонецПериода
		|";
		
		Запрос.УстановитьПараметр("НачалоПериода",НачалоПериода);
		Запрос.УстановитьПараметр("КонецПериода",КонецПериода);
		//Запрос.УстановитьПараметр("Массив",МассивНомеровЗаказов);
		
		//Выборка = Запрос.Выполнить().Выгрузить();
		
		Для Каждого СтрокаЗагрузки Из ДокументОбъект.Остановки Цикл
			
			НомерЗаказа = Формат(Число(СтрокаЗагрузки.НомерЗаказа), "ЧЦ=11; ЧДЦ=; ЧВН=; ЧГ=");
			
			ДокументЗаказ = Документы.КпкЗаявка.НайтиПоНомеру(НомерЗаказа, ДокументОбъект.Дата);
			
			//Если Выборка.Найти(НомерЗаказа,"Номер") <> Неопределено Тогда
			Если ДокументЗаказ <> Неопределено Тогда
				
				//СтрокаЗагрузки.Заказ              = Выборка.Найти(СтрокаЗагрузки.НомерЗаказа).Ссылка;
				СтрокаЗагрузки.Заявка              = ДокументЗаказ;
				СтрокаЗагрузки.НаименованиеТТ     = СтрокаЗагрузки.Заявка.Контрагент.Наименование;
				СтрокаЗагрузки.НомерТорговойТочки = СтрокаЗагрузки.Заявка.Контрагент.Код;
				СтрокаЗагрузки.ТорговаяТочка      = СтрокаЗагрузки.Заявка.Контрагент;
				СтрокаЗагрузки.Улица              = СтрокаЗагрузки.Заявка.Контрагент.АдресДоставкиУлица.Наименование;
				СтрокаЗагрузки.ДатаЗаказа         = СтрокаЗагрузки.Заявка.Дата; 
				//СтрокаЗагрузки.ВесЗаказа          = СтрокаЗагрузки.Заказ.Запасы.Итог("Количество");
				СтрокаЗагрузки.КомментарийЗаказа  = СтрокаЗагрузки.Заявка.Комментарий;
				СтрокаЗагрузки.ВременноеОкноНачало  = ?(ЗначениеЗаполнено(СтрокаЗагрузки.Заявка.Контрагент.РИНКАЙ_ВременноеОкноС_1),СтрокаЗагрузки.Заявка.Контрагент.РИНКАЙ_ВременноеОкноС_1,Дата(1,1,1,8,0,0));
				СтрокаЗагрузки.ВременноеОкноКонец   = ?(ЗначениеЗаполнено(СтрокаЗагрузки.Заявка.Контрагент.РИНКАЙ_ВременноеОкноДо_1),СтрокаЗагрузки.Заявка.Контрагент.РИНКАЙ_ВременноеОкноДо_1,Дата(1,1,1,20,0,0));
				СтрокаЗагрузки.ВременноеОкноНачало2 = СтрокаЗагрузки.Заявка.Контрагент.РИНКАЙ_ВременноеОкноС_2;
				СтрокаЗагрузки.ВременноеОкноКонец2  = СтрокаЗагрузки.Заявка.Контрагент.РИНКАЙ_ВременноеОкноДо_1;
				СтрокаЗагрузки.МаршрутРазвоза		= Справочники.МаршрутыРазвоза.НайтиПоКоду(СтрокаЗагрузки.НомерАвтомобиля);
			Иначе
				Сообщить("Заказ с номером "+НомерЗаказа+" не найден в базе 1С!");
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;
	
	f=1;
	//ЗаполнитьДеревоRinkai();
	
КонецПроцедуры


//	ЗаполнитьТаблицуЗагрузки()
Процедура ЗаполнитьТаблицуЗагрузки(Маршруты, ДокументОбъект)
	
	НомерМаршрута = 1;
	
	сообщить("Заполнение таблицы загрузки...");
	
	Для Каждого Маршрут Из Маршруты Цикл
		
		СтрокаМаршруты = ДокументОбъект.Маршруты.Добавить();
		СтрокаМаршруты.ВремяВыезда = ПолучитьВремяИзСекунд(Маршрут.DepartureTime);
		СтрокаМаршруты.ВремяЗаезда = ПолучитьВремяИзСекунд(Маршрут.ArrivalTime);
		СтрокаМаршруты.МаршрутРазвоза = Справочники.МаршрутыРазвоза.НайтиПоКоду(Маршрут.VehicleUserDefinedId);
		
		
		Для Каждого Остановка Из Маршрут.Stops Цикл
			
			СтрокаТаблицы = ДокументОбъект.Остановки.Добавить();
			
			СтрокаТаблицы.ВерсияCSV                  = "WebService"; 
			СтрокаТаблицы.НомерМаршрута              = НомерМаршрута;
			СтрокаТаблицы.ИндентификаторМаршрута     = НомерМаршрута;
			СтрокаТаблицы.ДатаМаршрута               = Дата(Формат(Маршрут.Date,"ЧГ="));
			СтрокаТаблицы.НомерАвтомобиля            = Маршрут.VehicleUserDefinedId;
			СтрокаТаблицы.НомернойЗнак               = Маршрут.VehicleUserDefinedId;
			СтрокаТаблицы.КомментарийАвтомобиля      = Маршрут.Comment;
			СтрокаТаблицы.СтоимостьМаршрута          = Маршрут.Costs;
			СтрокаТаблицы.Километраж                 = Маршрут.Km;
			СтрокаТаблицы.Отправление                = ПолучитьВремяИзСекунд(Маршрут.DepartureTime);
			СтрокаТаблицы.Прибытие                   = ПолучитьВремяИзСекунд(Маршрут.ArrivalTime);
			СтрокаТаблицы.ПродолжительностьВождения  = ПолучитьВремяИзСекунд(Маршрут.ArrivalTime - Маршрут.DepartureTime);
			СтрокаТаблицы.КоличествоОстановок        = Маршрут.NoOfStops;
			СтрокаТаблицы.Грузоподъемность           = 0;
			СтрокаТаблицы.ОбъемАвтомобиля            = 0;
			СтрокаТаблицы.ДопПараметрАвтомобиля      = 0;
			СтрокаТаблицы.Вес                        = 0;
			СтрокаТаблицы.Объем                      = 0;
			СтрокаТаблицы.ДопПараметр                = 0;
			СтрокаТаблицы.ВесВозврат                 = 0;
			СтрокаТаблицы.ОбъемВозврат               = 0;
			СтрокаТаблицы.ДопПараметрВозврат         = 0;
			СтрокаТаблицы.НачалоМаршрута             = ПолучитьВремяИзСекунд(Маршрут.StartTime);
			СтрокаТаблицы.КонецМаршрута              = ПолучитьВремяИзСекунд(Маршрут.EndTime);
			СтрокаТаблицы.ПродолжительностьЗагрузки  = 0;
			СтрокаТаблицы.ПродолжительностьРазгрузки = 0;
			СтрокаТаблицы.СтопЗаказ                  = 0;
			СтрокаТаблицы.НомерТорговойТочки         = 0;
			СтрокаТаблицы.ДатаЗаказа                 = Дата(1,1,1);
			СтрокаТаблицы.НаименованиеТТ             = "";
			СтрокаТаблицы.Улица                      = "";
			СтрокаТаблицы.Дом                        = "";
			СтрокаТаблицы.Индекс                     = "";
			СтрокаТаблицы.Город                      = "";                               
			СтрокаТаблицы.Страна                     = "";
			СтрокаТаблицы.КомментарийТТ              = "";
			СтрокаТаблицы.Долгота                    = Остановка.GeoX;
			СтрокаТаблицы.Широта                     = Остановка.GeoY;
			СтрокаТаблицы.НомерЗаказа                = Строка(Число(Остановка.OrderUserDefinedId));
			СтрокаТаблицы.КомментарийЗаказа          = "";
			СтрокаТаблицы.РасстояниеОтПредТочки      = Остановка.Km;
			СтрокаТаблицы.ВремяПрибытия              = ПолучитьВремяИзСекунд(Остановка.ArrivalTime);
			СтрокаТаблицы.ВремяОтъезда               = ПолучитьВремяИзСекунд(Остановка.DepartureTime);
			СтрокаТаблицы.ВременноеОкноНачало        = 0;
			СтрокаТаблицы.ВременноеОкноКонец         = 0;
			СтрокаТаблицы.ВременноеОкноНачало2       = 0;
			СтрокаТаблицы.ВременноеОкноКонец2        = 0;
			СтрокаТаблицы.ВесЗаказа                  = 0;
			СтрокаТаблицы.ОбъемЗаказа                = 0;
			СтрокаТаблицы.ДопПараметрЗаказ           = 0;
			СтрокаТаблицы.ВесВозвратЗаказа           = 0;
			СтрокаТаблицы.ОбъемВозвратЗаказ          = 0;
			СтрокаТаблицы.ДопПараметрВозвратЗаказа   = 0;
		КонецЦикла;
		
		НомерМаршрута = НомерМаршрута + 1;
		
	КонецЦикла;		
	
КонецПроцедуры
