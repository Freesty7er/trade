//	----------------------------------------------------------------------------
//	ПолучитьПараметрыОтдела()
//		СтруктураПараметров = Структура("Организация, Контрагент")
//
Функция ПолучитьПараметрыОтдела(СтруктураПараметров) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ОтделыВМагазинах.Ссылка,
	|	ОтделыВМагазинах.Подразделение,
	|	ОтделыВМагазинах.ДенежныйСчет,
	|	ОтделыВМагазинах.Склад
	|ИЗ
	|	Справочник.ОтделыВМагазинах КАК ОтделыВМагазинах
	|ГДЕ
	|	ОтделыВМагазинах.Магазин = &Контрагент
	|	И ВЫБОР
	|			КОГДА &ЕстьОрганизация
	|				ТОГДА ОтделыВМагазинах.Организация = &Организация
	|						ИЛИ ОтделыВМагазинах.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ");
	
	
	Запрос.УстановитьПараметр("Организация", СтруктураПараметров.Организация);
	Запрос.УстановитьПараметр("ЕстьОрганизация", ЗначениеЗаполнено(СтруктураПараметров.Организация));
	Запрос.УстановитьПараметр("Контрагент", СтруктураПараметров.Контрагент);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		СтруктураПараметров.Вставить("Подразделение", 	Неопределено);
		СтруктураПараметров.Вставить("Склад", 			Неопределено);
		СтруктураПараметров.Вставить("ДенежныйСчет", 	Неопределено);
		СтруктураПараметров.Вставить("ОтделМагазина", 	Неопределено);
	Иначе
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		
		СтруктураПараметров.Вставить("Подразделение", 	Выборка.Подразделение);
		СтруктураПараметров.Вставить("Склад", 			Выборка.Склад);
		СтруктураПараметров.Вставить("ДенежныйСчет", 	Выборка.ДенежныйСчет);
		СтруктураПараметров.Вставить("ОтделМагазина", 	Выборка.Ссылка);
		
	КонецЕсли;
	
	Возврат (СтруктураПараметров)
	
КонецФункции	// ПолучитьПараметрыОтдела()


//	----------------------------------------------------------------------------
//	ПолучитьРеализованнуюНаценку()
//		СтруктураПараметров = Структура("Подразделение, ОтделМагазина, Дата, СуммаРеализации")
//
Функция ПолучитьРеализованнуюНаценку(СтруктураПараметров) Экспорт
	
	РеализованнаяНаценка = 0;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ПартииТоваровНаСкладахОстатки.СтоимостьОстаток КАК Стоимость,
	|	ПартииТоваровНаСкладахОстатки.ПродСтоимостьОстаток КАК ПродСтоимость
	|ИЗ
	|	РегистрНакопления.ПартииТоваровНаСкладах.Остатки(
	|			&ДатаОстатков,
	|			Подразделение = &Подразделение
	|				И ЦФО = &ЦФО) КАК ПартииТоваровНаСкладахОстатки");
	
	Запрос.УстановитьПараметр("ДатаОстатков", 	Новый Граница(СтруктураПараметров.Дата, ВидГраницы.Включая) );
	Запрос.УстановитьПараметр("Подразделение", 	СтруктураПараметров.Подразделение);
	Запрос.УстановитьПараметр("ЦФО", 			СтруктураПараметров.ОтделМагазина);
	
	//сообщить(СтруктураПараметров.Дата);
	//сообщить(СтруктураПараметров.Подразделение);
	//сообщить(СтруктураПараметров.ОтделМагазина);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		
		//сообщить(Выборка.Стоимость);
		//сообщить(Выборка.ПродСтоимость);
		
		Если НЕ (Выборка.ПродСтоимость = 0) И НЕ(Выборка.Стоимость > Выборка.ПродСтоимость) Тогда
			
			РеализованнаяНаценка = Окр(СтруктураПараметров.СуммаРеализации *(1 - Выборка.Стоимость / Выборка.ПродСтоимость), 2,РежимОкругления.Окр15как20);
			
		КонецЕсли;
		
		Если РеализованнаяНаценка <= 0 Тогда
			//РеализованнаяНаценка = 0;
			РеализованнаяНаценка = Окр(СтруктураПараметров.СуммаРеализации * 0.164, 2,РежимОкругления.Окр15как20);;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат (РеализованнаяНаценка);
	
КонецФункции