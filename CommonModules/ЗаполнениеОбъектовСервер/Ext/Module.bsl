
#Область Справочники

Процедура ЗаполнитьДанныеНовогоСправочника(справочник, данныеЗаполнения) Экспорт

	данныеЗаполненияТипЗнч = ТипЗнч(данныеЗаполнения);
	
	Если данныеЗаполненияТипЗнч = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(справочник, данныеЗаполнения);
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьДанныеНовогоСправочника()

Процедура ЗаполнитьДанныеСкопированногоСправочника(справочник, объектКопирования) Экспорт

	
	// СДЕЛАТЬ: После задействования общих реквизитов "Автор" и "Редактор" во всех документа
	// блоки Если можно удалить и очищать эти реквизиты без проверки.
	справочникМетаданные = справочник.Метаданные();
	Если (справочникМетаданные.Реквизиты.Найти("Автор") <> Неопределено
		Или Метаданные.ОбщиеРеквизиты.Автор.Состав.Найти(справочникМетаданные).Использование = Метаданные.СвойстваОбъектов.ИспользованиеОбщегоРеквизита.Использовать) Тогда 
		
		справочник.Автор = Неопределено;
	
	КонецЕсли; 
	
	Если (справочникМетаданные.Реквизиты.Найти("Редактор") <> Неопределено
		Или Метаданные.ОбщиеРеквизиты.Редактор.Состав.Найти(справочникМетаданные).Использование = Метаданные.СвойстваОбъектов.ИспользованиеОбщегоРеквизита.Использовать) Тогда 
		
		справочник.Редактор = Неопределено;
	
	КонецЕсли; 

КонецПроцедуры // ЗаполнитьДанныеСкопированногоСправочника()

#КонецОбласти

#Область Документы

// Заполняет необходимые реквизиты документа при интерактивном создании нового. Дата документа будет
// установлена как текущая дата сеанса. Также будет заполнены реквизиты, заполняемые из данных
// заполнения по переданным данным заполнения.
//
// Параметры
//  документ  - ДокументОбъект.<Имя документа> - Документ, реквизиты которого необходимо заполнить.
//  данныеЗаполнения  - Произвольный - Значение, которое используется как основание для заполнения.
//
Процедура ЗаполнитьДанныеНовогоДокумента(документ, данныеЗаполнения) Экспорт

	ДанныеЗаполненияТипЗнч = ТипЗнч(данныеЗаполнения);
	
	Если Не ЗначениеЗаполнено(документ.Дата) Или данныеЗаполнения = Неопределено Или ДанныеЗаполненияТипЗнч = Тип("Структура") Тогда
		документ.Дата = ТекущаяДатаСеанса();
	КонецЕсли; 
	
	Если ДанныеЗаполненияТипЗнч = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(документ, данныеЗаполнения);
	КонецЕсли;
	
	документМетаданные = документ.Метаданные();
	Если (документМетаданные.Реквизиты.Найти("Автор") <> Неопределено
		Или Метаданные.ОбщиеРеквизиты.Автор.Состав.Найти(документМетаданные).Использование = Метаданные.СвойстваОбъектов.ИспользованиеОбщегоРеквизита.Использовать) Тогда
		
		документ.Автор = ПараметрыСеанса.ТекущийПользователь;
		
	КонецЕсли;
	
	Если (документМетаданные.Реквизиты.Найти("Ответственный") <> Неопределено
		Или Метаданные.ОбщиеРеквизиты.Ответственный.Состав.Найти(документМетаданные).Использование = Метаданные.СвойстваОбъектов.ИспользованиеОбщегоРеквизита.Использовать) Тогда 
		
		документ.Ответственный = ПользователиСервер.ПолучитьЗначениеНастройки("ОсновнойОтветственный");
		
	КонецЕсли;

КонецПроцедуры // ЗаполнитьДанныеНовогоДокумента()

// Заполняет необходимые реквизиты документа при интерактивном копировании. Дата документа
// будет установлена как текущая дата сеанса.
//
// Параметры
//  документ  - ДокументОбъект.<Имя документа> - Документ, реквизиты которого необходимо заполнить.
//  объектКопирования  - ДокументСсылка.<Имя документа> - Документ, копия которого создаётся.
//
Процедура ЗаполнитьДанныеСкопированногоДокумента(документ, объектКопирования) Экспорт

	документ.Дата = ТекущаяДатаСеанса();
	
	Если документ.Метаданные().Реквизиты.Найти("ДокументОснование") <> Неопределено Тогда
		документ.ДокументОснование = Неопределено;
	КонецЕсли; 
	
	Если документ.Метаданные().Реквизиты.Найти("ДокОсн") <> Неопределено Тогда
		документ.ДокОсн = Неопределено;
	КонецЕсли;
	
	Если документ.Метаданные().Реквизиты.Найти("ОтметкаБухгалтераОПроверке") <> Неопределено Тогда
		документ.ОтметкаБухгалтераОПроверке = Ложь;
	КонецЕсли;
	
	// СДЕЛАТЬ: После задействования общих реквизитов "Автор" и "Редактор" во всех документа
	// блоки Если можно удалить и очищать эти реквизиты без проверки.
	документМетаданные = документ.Метаданные();
	Если (документМетаданные.Реквизиты.Найти("Автор") <> Неопределено
		Или Метаданные.ОбщиеРеквизиты.Автор.Состав.Найти(документМетаданные).Использование = Метаданные.СвойстваОбъектов.ИспользованиеОбщегоРеквизита.Использовать) Тогда 
		
		документ.Автор = ПараметрыСеанса.ТекущийПользователь;
	
	КонецЕсли; 
	
	//Если (документМетаданные.Реквизиты.Найти("Редактор") <> Неопределено
	//Или Метаданные.ОбщиеРеквизиты.Редактор.Состав.Содержит(документМетаданные)) Тогда
	Если (документМетаданные.Реквизиты.Найти("Редактор") <> Неопределено
		Или Метаданные.ОбщиеРеквизиты.Редактор.Состав.Найти(документМетаданные).Использование = Метаданные.СвойстваОбъектов.ИспользованиеОбщегоРеквизита.Использовать) Тогда 
		
		документ.Редактор = Неопределено;
	
	КонецЕсли;
	
	Если (документМетаданные.Реквизиты.Найти("Ответственный") <> Неопределено
		Или Метаданные.ОбщиеРеквизиты.Ответственный.Состав.Найти(документМетаданные).Использование = Метаданные.СвойстваОбъектов.ИспользованиеОбщегоРеквизита.Использовать) Тогда 
		
		документ.Ответственный = ПользователиСервер.ПолучитьЗначениеНастройки("ОсновнойОтветственный");
	
	КонецЕсли;

КонецПроцедуры // ЗаполнитьДанныеСкопированногоДокумента()

// Заполняет реквизиты документа при вводе на основании по совпадающим именам реквизитов. Не заполняются базовые
// реквизиты и свойства документа, такие как Номер, Дата, ПометкаУдаления, Проведен, Ссылка. Также в заполняемый
// документ не копируется значение реквизита Комментарий.
//
// Параметры
//  текущийДокумент  - ДокументОбъект.<Имя документа> - Документ, реквизиты которого необходимо
//                 заполнить.
//  документОснование  - ДокументСсылка.<Имя документа> - Документ, на основании которого
//                 заполняется текущий документ.
//  исключитьРеквизиты  - Строка, Массив, СписокЗначений - Перечень имён реквизитов, которые не должны
//                 быть заполнены при заполнении документа.
//
Процедура ЗаполнитьРеквизитыДокументаПриВводеНаОсновании(текущийДокумент, документОснование, исключитьРеквизиты = Неопределено) Экспорт

	исключаяСвойства = Новый Массив;
	Если исключитьРеквизиты <> Неопределено Тогда
		
		Если ТипЗнч(исключитьРеквизиты) = Тип("Строка") Тогда
			исключаяСвойства = СтрРазделить(исключитьРеквизиты, ",");
		ИначеЕсли ТипЗнч(исключитьРеквизиты) = Тип("Массив") Тогда
			исключаяСвойства = исключитьРеквизиты;
		ИначеЕсли ТипЗнч(исключитьРеквизиты) = Тип("СписокЗначений") Тогда
			исключаяСвойства = исключитьРеквизиты.ВыгрузитьЗначения();
		Иначе
			ВызватьИсключение НСтр("ru = 'Не поддерживаемый тип списка исключаемых реквизитов.'");
		КонецЕсли;
		
	КонецЕсли;
	
	текущийДокументМетаданные = текущийДокумент.Метаданные();
	
	Если текущийДокументМетаданные.Реквизиты.Найти("Комментарий") <> Неопределено
		Или Метаданные.ОбщиеРеквизиты.Комментарий.Состав.Содержит(текущийДокументМетаданные) Тогда
		
		исключаяСвойства.Добавить("Комментарий");
	
	КонецЕсли;
	
	Если документОснование.Метаданные().Реквизиты.Найти("СозданАвтоматически") <> Неопределено Тогда
		
		исключаяСвойства.Добавить("СозданАвтоматически");
	
	КонецЕсли;
	
	// СДЕЛАТЬ: После задействования общих реквизитов "Автор" и "Редактор" во всех документа
	// блоки Если можно удалить, а имена реквизитов добавить в список исключаемых реквизитов
	// для метода ЗаполнитьЗначенияСвойств().
	Если (документОснование.Метаданные().Реквизиты.Найти("Автор") <> Неопределено 
		Или Метаданные.ОбщиеРеквизиты.Автор.Состав.Содержит(документОснование.Метаданные())) Тогда
		
		исключаяСвойства.Добавить("Автор");
	
	КонецЕсли; 
	
	Если (документОснование.Метаданные().Реквизиты.Найти("Редактор") <> Неопределено 
		Или Метаданные.ОбщиеРеквизиты.Редактор.Состав.Содержит(документОснование.Метаданные())) Тогда
		
		исключаяСвойства.Добавить("Редактор");
	
	КонецЕсли;
	
	Если (документОснование.Метаданные().Реквизиты.Найти("Ответственный") <> Неопределено 
		Или Метаданные.ОбщиеРеквизиты.Ответственный.Состав.Содержит(документОснование.Метаданные())) Тогда
		
		исключаяСвойства.Добавить("Ответственный");
	
	КонецЕсли; 

	
	ЗаполнитьЗначенияСвойств(текущийДокумент, документОснование,, СтрСоединить(исключаяСвойства, ",") + ", Номер,Дата,ПометкаУдаления,Проведен,Ссылка");
	
	Если текущийДокументМетаданные.Реквизиты.Найти("ДокументОснование") <> Неопределено Тогда
		текущийДокумент.ДокументОснование = документОснование;
	КонецЕсли; 
	
КонецПроцедуры // ЗаполнитьРеквизитыДокументаПриВводеНаОсновании()

#КонецОбласти 

#Область Задачи

// Заполняет необходимые реквизиты задачи при интерактивном создании нового. Дата документа будет
// установлена как текущая дата сеанса. Также будет заполнены реквизиты, заполняемые из данных
// заполнения по переданным данным заполнения.
//
// Параметры
//  задача  - ЗадачаОбъект.<Имя документа> - Задача, реквизиты которой необходимо заполнить.
//  данныеЗаполнения  - Произвольный - Значение, которое используется как основание для заполнения.
//
Процедура ЗаполнитьДанныеНовойЗадачи(задача, данныеЗаполнения) Экспорт

	данныеЗаполненияТипЗнч = ТипЗнч(данныеЗаполнения);
	
	Если Не ЗначениеЗаполнено(задача.Дата)
		Или данныеЗаполнения = Неопределено
		Или данныеЗаполненияТипЗнч = Тип("Структура") Тогда
		
		задача.Дата = ТекущаяДатаСеанса();
	КонецЕсли; 
	Если данныеЗаполненияТипЗнч = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(задача, данныеЗаполнения);
	КонецЕсли; 

КонецПроцедуры // ЗаполнитьДанныеНовойЗадачи()

#КонецОбласти