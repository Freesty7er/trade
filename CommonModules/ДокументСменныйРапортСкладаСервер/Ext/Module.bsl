
Процедура ПересчетТабличнойЧастиДокумента(объект, имяТабличнойЧасти) Экспорт
	
	коллекцияСтрок = объект[имяТабличнойЧасти];
	
	дополнительныеСвойства = Новый Структура("Объект", объект);
	
	колличествоСтрокТабличнойЧасти = коллекцияСтрок.Количество();
	
	Если колличествоСтрокТабличнойЧасти = 0 Тогда
		Возврат;
	КонецЕсли;
	
	осталосьРаспределитьВес = объект.ОбщийВес;
	
	весПоСтроке = окр(осталосьРаспределитьВес / колличествоСтрокТабличнойЧасти, 3, РежимОкругления.Окр15как20);
	
	
	// получим тарифы
	наборСотрудников = ОбработкаТабличныхЧастейКлиентСервер.ВыгрузитьКолонку(объект[имяТабличнойЧасти], "Сотрудник");
	тарифыПоСотрудникам = ПолучитьТарифыПоСотрудникам(наборСотрудников, Новый Структура("Объект", объект));
	
	// сначала посчитаем строки с ограничением по весу
	Для номерСтрокиКоллекции = 1 По коллекцияСтрок.Количество() Цикл
		
		максимальныйОплачиваемыйВес = тарифыПоСотрудникам.Получить(коллекцияСтрок[номерСтрокиКоллекции-1].Сотрудник).МаксимальныйВес;
		
		Если максимальныйОплачиваемыйВес = 0 Тогда
			коллекцияСтрок[номерСтрокиКоллекции-1].Вес = 0;
			Продолжить;
		КонецЕсли;
		
		Если максимальныйОплачиваемыйВес < весПоСтроке Тогда
			коллекцияСтрок[номерСтрокиКоллекции-1].Вес = максимальныйОплачиваемыйВес;
		Иначе
			коллекцияСтрок[номерСтрокиКоллекции-1].Вес = весПоСтроке;
		КонецЕсли;
		
		// уменьшим базу для расчета веса по строке: без ограничений
		осталосьРаспределитьВес = осталосьРаспределитьВес - коллекцияСтрок[номерСтрокиКоллекции-1].Вес;
		
		// уменьшим кол-во строк без ограничений
		колличествоСтрокТабличнойЧасти = колличествоСтрокТабличнойЧасти - 1;
		
		Если колличествоСтрокТабличнойЧасти = 0 Тогда
			// это последняя строка, докинем остаток от деления
			коллекцияСтрок[номерСтрокиКоллекции-1].Вес = коллекцияСтрок[номерСтрокиКоллекции-1].Вес + осталосьРаспределитьВес;
			осталосьРаспределитьВес = 0;
		КонецЕсли;
		
	КонецЦикла;
	
	Для номерСтрокиКоллекции = 1 По коллекцияСтрок.Количество() Цикл
		
		// пропускаем строки с установленным макс. весом
		Если коллекцияСтрок[номерСтрокиКоллекции-1].Вес = 0 Тогда
			
			коллекцияСтрок[номерСтрокиКоллекции-1].Вес = окр(осталосьРаспределитьВес / колличествоСтрокТабличнойЧасти, 3, РежимОкругления.Окр15как20);;	
			
			колличествоСтрокТабличнойЧасти = колличествоСтрокТабличнойЧасти - 1;
			осталосьРаспределитьВес = осталосьРаспределитьВес - коллекцияСтрок[номерСтрокиКоллекции-1].Вес;
			
		КонецЕсли;
		
		ДокументСменныйРапортСкладаКлиентСервер.РассчитатьДанныеСтроки(коллекцияСтрок[номерСтрокиКоллекции-1], тарифыПоСотрудникам);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработатьДанныеСтрокПриИзменении(данные, дополнительныеСвойства) Экспорт

	коллекцияСтрок = ОбработкаТабличныхЧастейСервер.ПолучитьКоллекциюОбрабатываемыхСтрок(данные, дополнительныеСвойства);
	
	// получим тарифы
	наборСотрудников = ОбработкаТабличныхЧастейКлиентСервер.ВыгрузитьКолонку(дополнительныеСвойства.Объект[дополнительныеСвойства.ИмяТабличнойЧасти], "Сотрудник");
	тарифыПоСотрудникам = ПолучитьТарифыПоСотрудникам(наборСотрудников, дополнительныеСвойства);
	
	Для каждого данныеСтроки Из коллекцияСтрок Цикл
		ДокументСменныйРапортСкладаКлиентСервер.РассчитатьДанныеСтроки(данныеСтроки, тарифыПоСотрудникам);
	КонецЦикла; 

КонецПроцедуры // ОбработатьДанныеСтрокПриИзменении()

Функция ПолучитьТарифыПоСотрудникам(наборСотрудников, дополнительныеСвойства)
	
	соответствиеТарифов = Новый Соответствие;
		
	запрос = Новый Запрос;
	
	#Область ТекстЗапроса
	
	запрос.Текст =
	"ВЫБРАТЬ
	|	Сотрудники.Ссылка КАК Сотрудник,
	|	НазначенияСотрудниковСрезПоследних.Подразделение,
	|	НазначенияСотрудниковСрезПоследних.Должность,
	|	НазначенияСотрудниковСрезПоследних.КатегорияНачисленияЗарплаты,
	|	НазначенияСотрудниковСрезПоследних.Класс,
	|	НазначенияСотрудниковСрезПоследних.Статус,
	|	ТарифыНачисленияЗарплатыСрезПоследних.KPI,
	|	ЕСТЬNULL(ТарифыНачисленияЗарплатыСрезПоследних.Тариф, 0) КАК Тариф,
	|	ЕСТЬNULL(ТарифыНачисленияЗарплатыСрезПоследних.МаксимальныйВес, 0) КАК МаксимальныйВес
	|ИЗ
	|	Справочник.Сотрудники КАК Сотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НазначенияСотрудников.СрезПоследних(&ДатаСреза, Подразделение = &Подразделение) КАК НазначенияСотрудниковСрезПоследних
	|		ПО Сотрудники.Ссылка = НазначенияСотрудниковСрезПоследних.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТарифыНачисленияЗарплаты.СрезПоследних(&ДатаСреза, Подразделение = &Подразделение) КАК ТарифыНачисленияЗарплатыСрезПоследних
	|		ПО (НазначенияСотрудниковСрезПоследних.Должность = ТарифыНачисленияЗарплатыСрезПоследних.Должность)
	|			И (НазначенияСотрудниковСрезПоследних.Класс = ТарифыНачисленияЗарплатыСрезПоследних.Класс)
	|			И (&Смена = ТарифыНачисленияЗарплатыСрезПоследних.Смена)
	|ГДЕ
	|	Сотрудники.Ссылка В(&Сотрудники)";
	
	#КонецОбласти
	
	запрос.УстановитьПараметр("ДатаСреза", дополнительныеСвойства.Объект.Дата);
	запрос.УстановитьПараметр("Подразделение", дополнительныеСвойства.Объект.Подразделение);
	запрос.УстановитьПараметр("Смена", дополнительныеСвойства.Объект.ВидСмены);
	запрос.УстановитьПараметр("Сотрудники", наборСотрудников);
	
	результатЗапроса = запрос.Выполнить();
	
	выборка = результатЗапроса.Выбрать();
	Пока выборка.Следующий() Цикл
		
		структураТарифа = Новый Структура("Тариф, МаксимальныйВес", 0, 0);
		ЗаполнитьЗначенияСвойств(структураТарифа, выборка);
		
		соответствиеТарифов.Вставить(выборка.Сотрудник, структураТарифа);
		
	КонецЦикла;
	
	Возврат соответствиеТарифов;
	
КонецФункции