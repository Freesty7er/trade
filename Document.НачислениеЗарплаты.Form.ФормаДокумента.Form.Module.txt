&НаСервереБезКонтекста
Функция ПолучитьСменыПоВидуВремени(СтруктураДанные)
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	ТабельСостав.ИтДН КАК ДневныеСмены,
	               |	ТабельСостав.ИтНЧ КАК НочныеСмены,
	               |	ТабельСостав.ИтБМК КАК СменыБМК,
	               |	ТабельСостав.ИтСыр КАК СменыСыр
	               |ИЗ
	               |	Документ.Табель.Состав КАК ТабельСостав
	               |ГДЕ
	               |	ТабельСостав.Ссылка.Проведен = ИСТИНА
	               |	И ТабельСостав.Сотрудник = &Сотрудник
	               |	И ТабельСостав.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Сотрудник", СтруктураДанные.Сотрудник);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(СтруктураДанные.ПериодРегистрации));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(СтруктураДанные.ПериодРегистрации));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		СтруктураДанные.Вставить("ДневныеСмены", 0);
		СтруктураДанные.Вставить("НочныеСмены", 0);
		СтруктураДанные.Вставить("СменыБМК", 0);
		СтруктураДанные.Вставить("СменыСыр", 0);
		
	Иначе
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		
		СтруктураДанные.Вставить("ДневныеСмены", Выборка.ДневныеСмены);
		СтруктураДанные.Вставить("НочныеСмены", Выборка.НочныеСмены);
		СтруктураДанные.Вставить("СменыБМК", Выборка.СменыБМК);
		СтруктураДанные.Вставить("СменыСыр", Выборка.СменыСыр);
	КонецЕсли;
	
	Возврат (СтруктураДанные);
	
КонецФункции

&НаСервере
Функция ПолучитьЗаносДенегПоНаправлению(Направление, Менеджер)
	
	Результат = 0;
	
	// c 01/12/2013 - только "Сыр Львов" ... можно переделать с выбором "Ассортимета" в Виде расчета
	Сыр = Новый СписокЗначений;
	//Сыр.Добавить(Справочники.Номенклатура.НайтиПоКоду("000001027"));
	//Сыр.Добавить(Справочники.Номенклатура.НайтиПоКоду("000002749"));
	Сыр.Добавить(Справочники.Номенклатура.НайтиПоКоду("000000185"));
	
	//Сыр.Добавить(Справочники.Номенклатура.НайтиПоКоду("000000005"));
	//Сыр.Добавить(Справочники.Номенклатура.НайтиПоКоду("000002604"));
	//Сыр.Добавить(Справочники.Номенклатура.НайтиПоКоду("000002879"));
	//Сыр.Добавить(Справочники.Номенклатура.НайтиПоКоду("000001911"));
	//Сыр.Добавить(Справочники.Номенклатура.НайтиПоКоду("000001165"));
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Продажи.Менеджер КАК Менеджер,
	|	ВзаиморасчетыСПокупателямиОбороты.СуммаРасход * (Продажи.ПродСтоимость / Продажи.КредитныйДокумент.СуммаДокумента) КАК Оплата
	|ИЗ
	|	РегистрНакопления.ВзаиморасчетыСПокупателями.Обороты(&НачалоПериода, &КонецПериода, , ) КАК ВзаиморасчетыСПокупателямиОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Продажи КАК Продажи
	|		ПО ВзаиморасчетыСПокупателямиОбороты.КредитныйДокумент = Продажи.Регистратор
	|ГДЕ
	|	Продажи.Номенклатура "+?(Направление="Сыр","","НЕ ")+"В ИЕРАРХИИ(&Сыр) И
	|	Продажи.Менеджер = &Менеджер
	|ИТОГИ
	|	СУММА(Оплата)
	|ПО
	|	Менеджер");
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Объект.ПериодРегистрации));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Объект.ПериодРегистрации));
	
	Запрос.УстановитьПараметр("Подразделение", Объект.Подразделение);
	Запрос.УстановитьПараметр("Менеджер", Менеджер);
	Запрос.УстановитьПараметр("Сыр", Сыр);
	
	РезультатЗапроса  = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		
		Результат = Выборка.Оплата;
		
	КонецЕсли;
	
	
	Возврат (Результат);
	
КонецФункции

&НаСервере
Процедура ЗаполнитьСервер()
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	СотрудникиПлановыеНачисления.Ссылка.Ссылка КАК Сотрудник,
	               |	СотрудникиПлановыеНачисления.ВидРасчета,
	               |	СотрудникиПлановыеНачисления.Показатель1
	               |ИЗ
	               |	Справочник.Сотрудники.ПлановыеНачисления КАК СотрудникиПлановыеНачисления
	               |ГДЕ
	               |	СотрудникиПлановыеНачисления.Ссылка.СтруктурнаяЕдиница = &Подразделение
	               |	И СотрудникиПлановыеНачисления.Ссылка.КатегорияРаботника = &КатегорияРаботников";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Объект.ПериодРегистрации));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Объект.ПериодРегистрации));
	Запрос.УстановитьПараметр("КатегорияРаботников", Объект.КатегорияРаботников);
	Запрос.УстановитьПараметр("Подразделение", Объект.Подразделение);
	
	Объект.Состав.Очистить();
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = Объект.Состав.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
		СтруктураДанные = Новый Структура("Сотрудник, ПериодРегистрации", Выборка.Сотрудник, Объект.ПериодРегистрации);
		СтруктураДанные = ПолучитьСменыПоВидуВремени(СтруктураДанные);
		
		МетодРасчета = НоваяСтрока.ВидРасчета.МетодРасчета;
		
		Если  НоваяСтрока.ВидРасчета.Код = "000000017" Тогда
			// % за колбасу
			НоваяСтрока.Результат = ПолучитьЗаносДенегПоНаправлению("Колбаса", НоваяСтрока.Сотрудник.Менеджер) * НоваяСтрока.Показатель1/100;
			
		ИначеЕсли  НоваяСтрока.ВидРасчета.Код = "000000018" Тогда
			// % за сыр
			НоваяСтрока.Результат = ПолучитьЗаносДенегПоНаправлению("Сыр", НоваяСтрока.Сотрудник.Менеджер) * НоваяСтрока.Показатель1/100;
			
		ИначеЕсли МетодРасчета = Перечисления.МетодыРасчетаНачислений.ФиксированнаяСумма Тогда
			
			НоваяСтрока.Результат = НоваяСтрока.Показатель1;
			
		ИначеЕсли МетодРасчета = Перечисления.МетодыРасчетаНачислений.ПоДневнымСменам Тогда
			
			НоваяСтрока.Результат = НоваяСтрока.Показатель1*СтруктураДанные.ДневныеСмены;
			
		ИначеЕсли МетодРасчета = Перечисления.МетодыРасчетаНачислений.ПоНочнымСменам Тогда
			
			НоваяСтрока.Результат = НоваяСтрока.Показатель1*СтруктураДанные.НочныеСмены;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	ЗаполнитьСервер();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УправлениеНебольшойФирмойСервер.ЗаполнитьШапкуДокумента(
		Объект,
		,
		Параметры.ЗначениеКопирования,
		Параметры.Основание,
		СостояниеДокумента,
		КартинкаСостоянияДокумента,
		РазрешеноПроведение,
		Параметры.ЗначенияЗаполнения
	);
	
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события Регулирования реквизита ПериодРегистрации.
//
Процедура ПериодРегистрацииРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	УправлениеНебольшойФирмойКлиент.ПриРегулированииПериодаРегистрации(ЭтаФорма, Направление);
	УправлениеНебольшойФирмойКлиент.ПриИзмененииПериодаРегистрации(ЭтаФорма);
	
КонецПроцедуры //ПериодРегистрацииРегулирование()

&НаКлиенте
// Процедура - обработчик события НачалоВыбора реквизита ПериодРегистрации.
//
Процедура ПериодРегистрацииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка	 = Ложь;
	
	ДатаКалендаряПриОткрытии = ?(ЗначениеЗаполнено(Объект.ПериодРегистрации), Объект.ПериодРегистрации, УправлениеНебольшойФирмойПовтИсп.ПолучитьТекущуюДатаСеанса());
	
	ОткрытьФорму("ОбщаяФорма.ФормаКалендаря", УправлениеНебольшойФирмойКлиент.ПолучитьПараметрыОткрытияФормыКалендаря(ДатаКалендаряПриОткрытии), ЭтаФорма);
	
КонецПроцедуры //ПериодРегистрацииНачалоВыбора()

&НаКлиенте
// Процедура - обработчик события Очистки реквизита ПериодРегистрации.
//
Процедура ПериодРегистрацииОчистка(Элемент, СтандартнаяОбработка)
	
	ПериодРегистрации = Неопределено;
	УправлениеНебольшойФирмойКлиент.ПриИзмененииПериодаРегистрации(ЭтаФорма);
	
КонецПроцедуры //ПериодРегистрацииОчистка()


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОтображениеПериодаРегистрации = Формат(Объект.ПериодРегистрации, "ДФ='MMMM yyyy'");

КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события формы ОбработкаВыбора
//
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ИсточникВыбора) = Тип("УправляемаяФорма")
		И Найти(ИсточникВыбора.ИмяФормы, "ФормаКалендаря") > 0 Тогда
		
		Объект.ПериодРегистрации = НачалоДня(ВыбранноеЗначение);
		УправлениеНебольшойФирмойКлиент.ПриИзмененииПериодаРегистрации(ЭтаФорма);
		
	КонецЕсли;
	
КонецПроцедуры // ОбработкаВыбора()


