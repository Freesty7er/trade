
&НаСервере
Процедура ЗаполнитьТипыЦенПоУмолчанию()
	
	запрос = Новый Запрос;
	
	#Область ТекстЗапроса
	
	запрос.Текст =
	"ВЫБРАТЬ
	|	ЦенообразованиеСрезПоследних.НеРасчитыватьЦена1,
	|	ЦенообразованиеСрезПоследних.НеРасчитыватьЦена2,
	|	ЦенообразованиеСрезПоследних.НеРасчитыватьЦена3,
	|	ЦенообразованиеСрезПоследних.НеРасчитыватьЦена4,
	|	ЦенообразованиеСрезПоследних.НеРасчитыватьЦена5,
	|	ЦенообразованиеСрезПоследних.НеРасчитыватьЦена6,
	|	ЦенообразованиеСрезПоследних.НеРасчитыватьЦена7,
	|	ЦенообразованиеСрезПоследних.НеРасчитыватьЦена8,
	|	ЦенообразованиеСрезПоследних.НеРасчитыватьЦена9,
	|	ЦенообразованиеСрезПоследних.НеРасчитыватьЦена10,
	|	ЦенообразованиеСрезПоследних.НеРасчитыватьЦена11,
	|	ЦенообразованиеСрезПоследних.НеРасчитыватьЦена12,
	|	ЦенообразованиеСрезПоследних.НеРасчитыватьЦена13,
	|	ЦенообразованиеСрезПоследних.НеРасчитыватьЦена14,
	|	ЦенообразованиеСрезПоследних.НеРасчитыватьЦена15,
	|	ЦенообразованиеСрезПоследних.НеРасчитыватьЦена16,
	|	ЦенообразованиеСрезПоследних.НеРасчитыватьЦена17,
	|	ЦенообразованиеСрезПоследних.НеРасчитыватьЦена18,
	|	ЦенообразованиеСрезПоследних.НеРасчитыватьЦена19,
	|	ЦенообразованиеСрезПоследних.НеРасчитыватьЦена20,
	|	ЦенообразованиеСрезПоследних.НеРасчитыватьЦена21,
	|	ЦенообразованиеСрезПоследних.НеРасчитыватьЦена22,
	|	ЦенообразованиеСрезПоследних.НеРасчитыватьЦена23,
	|	ЦенообразованиеСрезПоследних.НеРасчитыватьЦена24,
	|	ЦенообразованиеСрезПоследних.НеРасчитыватьЦена25,
	|	ЦенообразованиеСрезПоследних.НеРасчитыватьЦена26,
	|	ЦенообразованиеСрезПоследних.НеРасчитыватьЦена27,
	|	ЦенообразованиеСрезПоследних.НеРасчитыватьЦена28,
	|	ЦенообразованиеСрезПоследних.НеРасчитыватьЦена29,
	|	ЦенообразованиеСрезПоследних.НеРасчитыватьЦена30
	|ИЗ
	|	РегистрСведений.Ценообразование.СрезПоследних(
	|			&ДатаСреза,
	|			Подразделение = &Подразделение
	|				И НоменклатурнаяГруппа = &НоменклатурнаяГруппа
	|				И ЦеноваяГруппа = &ПустаяЦеноваяГруппа) КАК ЦенообразованиеСрезПоследних";
	
	#КонецОбласти
	
	
	запрос.УстановитьПараметр("ДатаСреза", 				Объект.Дата);
	запрос.УстановитьПараметр("Подразделение", 			Объект.Подразделение);
	запрос.УстановитьПараметр("НоменклатурнаяГруппа",	Объект.НоменклатурнаяГруппа);
	запрос.УстановитьПараметр("ПустаяЦеноваяГруппа", 	Справочники.ЦеновыеГруппы.ПустаяСсылка());
	
	ВыбранныеЦены.Очистить();
	
	результатЗапроса = Запрос.Выполнить();
	Если результатЗапроса.Пустой() Тогда
		
	Иначе
		выборка = РезультатЗапроса.Выбрать();
		выборка.Следующий();
	КонецЕсли;
	
	новаяСтрока = ВыбранныеЦены.Добавить();
	новаяСтрока.Выбрана = Истина;
	новаяСтрока.Ссылка 	= Справочники.ТипыЦен.Закупка;
	
	Для индекс = 1 По 30 Цикл
		
		новаяСтрока = ВыбранныеЦены.Добавить();
		
		Если Не результатЗапроса.Пустой() Тогда
			новаяСтрока.Выбрана = Не выборка["НеРасчитыватьЦена"+СокрЛП(индекс)];
		КонецЕсли;
		
		новаяСтрока.Ссылка 	= Справочники.ТипыЦен.НайтиПоНаименованию("Категория "+СокрЛП(индекс));
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСервер()
	
	
	запрос = Новый Запрос;
	
	#Область ТекстЗапроса
	
	запрос.Текст =
	"ВЫБРАТЬ
	|	СписокНоменклатуры.Номенклатура,
	|	ЕСТЬNULL(Цены.Цена, 0) КАК Цена,
	|	ЕСТЬNULL(Цены.Цена1, 0) КАК Цена1,
	|	ЕСТЬNULL(Цены.Цена2, 0) КАК Цена2,
	|	ЕСТЬNULL(Цены.Цена3, 0) КАК Цена3,
	|	ЕСТЬNULL(Цены.Цена4, 0) КАК Цена4,
	|	ЕСТЬNULL(Цены.Цена5, 0) КАК Цена5,
	|	ЕСТЬNULL(Цены.Цена6, 0) КАК Цена6,
	|	ЕСТЬNULL(Цены.Цена7, 0) КАК Цена7,
	|	ЕСТЬNULL(Цены.Цена8, 0) КАК Цена8,
	|	ЕСТЬNULL(Цены.Цена9, 0) КАК Цена9,
	|	ЕСТЬNULL(Цены.Цена10, 0) КАК Цена10,
	|	ЕСТЬNULL(Цены.Цена11, 0) КАК Цена11,
	|	ЕСТЬNULL(Цены.Цена12, 0) КАК Цена12,
	|	ЕСТЬNULL(Цены.Цена13, 0) КАК Цена13,
	|	ЕСТЬNULL(Цены.Цена14, 0) КАК Цена14,
	|	ЕСТЬNULL(Цены.Цена15, 0) КАК Цена15,
	|	ЕСТЬNULL(Цены.Цена16, 0) КАК Цена16,
	|	ЕСТЬNULL(Цены.Цена17, 0) КАК Цена17,
	|	ЕСТЬNULL(Цены.Цена18, 0) КАК Цена18,
	|	ЕСТЬNULL(Цены.Цена19, 0) КАК Цена19,
	|	ЕСТЬNULL(Цены.Цена20, 0) КАК Цена20,
	|	ЕСТЬNULL(Цены.Цена21, 0) КАК Цена21,
	|	ЕСТЬNULL(Цены.Цена22, 0) КАК Цена22,
	|	ЕСТЬNULL(Цены.Цена23, 0) КАК Цена23,
	|	ЕСТЬNULL(Цены.Цена24, 0) КАК Цена24,
	|	ЕСТЬNULL(Цены.Цена25, 0) КАК Цена25,
	|	ЕСТЬNULL(Цены.Цена26, 0) КАК Цена26,
	|	ЕСТЬNULL(Цены.Цена27, 0) КАК Цена27,
	|	ЕСТЬNULL(Цены.Цена28, 0) КАК Цена28,
	|	ЕСТЬNULL(Цены.Цена29, 0) КАК Цена29,
	|	ЕСТЬNULL(Цены.Цена30, 0) КАК Цена30
	|ИЗ
	|	(ВЫБРАТЬ
	|		Номенклатура.Ссылка КАК Номенклатура
	|	ИЗ
	|		Справочник.Номенклатура КАК Номенклатура
	|	ГДЕ
	|		Номенклатура.Ссылка В ИЕРАРХИИ(&НоменклатурнаяГруппа)
	|		И Номенклатура.ЭтоГруппа = ЛОЖЬ
	|		И Номенклатура.НеАктуально = ЛОЖЬ) КАК СписокНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
	|			МАКСИМУМ(ВЫБОР
	|					КОГДА ЦеныНоменклатурыСрезПоследних.ТипЦен = ЗНАЧЕНИЕ(Справочник.ТипыЦен.Закупка)
	|						ТОГДА ЦеныНоменклатурыСрезПоследних.Цена
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК Цена,
	|			МАКСИМУМ(ВЫБОР
	|					КОГДА ЦеныНоменклатурыСрезПоследних.ТипЦен.Код = ""000000001""
	|						ТОГДА ЦеныНоменклатурыСрезПоследних.Цена
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК Цена1,
	|			МАКСИМУМ(ВЫБОР
	|					КОГДА ЦеныНоменклатурыСрезПоследних.ТипЦен.Код = ""000000002""
	|						ТОГДА ЦеныНоменклатурыСрезПоследних.Цена
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК Цена2,
	|			МАКСИМУМ(ВЫБОР
	|					КОГДА ЦеныНоменклатурыСрезПоследних.ТипЦен.Код = ""000000003""
	|						ТОГДА ЦеныНоменклатурыСрезПоследних.Цена
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК Цена3,
	|			МАКСИМУМ(ВЫБОР
	|					КОГДА ЦеныНоменклатурыСрезПоследних.ТипЦен.Код = ""000000004""
	|						ТОГДА ЦеныНоменклатурыСрезПоследних.Цена
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК Цена4,
	|			МАКСИМУМ(ВЫБОР
	|					КОГДА ЦеныНоменклатурыСрезПоследних.ТипЦен.Код = ""000000005""
	|						ТОГДА ЦеныНоменклатурыСрезПоследних.Цена
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК Цена5,
	|			МАКСИМУМ(ВЫБОР
	|					КОГДА ЦеныНоменклатурыСрезПоследних.ТипЦен.Код = ""000000006""
	|						ТОГДА ЦеныНоменклатурыСрезПоследних.Цена
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК Цена6,
	|			МАКСИМУМ(ВЫБОР
	|					КОГДА ЦеныНоменклатурыСрезПоследних.ТипЦен.Код = ""000000007""
	|						ТОГДА ЦеныНоменклатурыСрезПоследних.Цена
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК Цена7,
	|			МАКСИМУМ(ВЫБОР
	|					КОГДА ЦеныНоменклатурыСрезПоследних.ТипЦен.Код = ""000000008""
	|						ТОГДА ЦеныНоменклатурыСрезПоследних.Цена
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК Цена8,
	|			МАКСИМУМ(ВЫБОР
	|					КОГДА ЦеныНоменклатурыСрезПоследних.ТипЦен.Код = ""000000009""
	|						ТОГДА ЦеныНоменклатурыСрезПоследних.Цена
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК Цена9,
	|			МАКСИМУМ(ВЫБОР
	|					КОГДА ЦеныНоменклатурыСрезПоследних.ТипЦен.Код = ""000000010""
	|						ТОГДА ЦеныНоменклатурыСрезПоследних.Цена
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК Цена10,
	|			МАКСИМУМ(ВЫБОР
	|					КОГДА ЦеныНоменклатурыСрезПоследних.ТипЦен.Код = ""000000011""
	|						ТОГДА ЦеныНоменклатурыСрезПоследних.Цена
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК Цена11,
	|			МАКСИМУМ(ВЫБОР
	|					КОГДА ЦеныНоменклатурыСрезПоследних.ТипЦен.Код = ""000000012""
	|						ТОГДА ЦеныНоменклатурыСрезПоследних.Цена
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК Цена12,
	|			МАКСИМУМ(ВЫБОР
	|					КОГДА ЦеныНоменклатурыСрезПоследних.ТипЦен.Код = ""000000013""
	|						ТОГДА ЦеныНоменклатурыСрезПоследних.Цена
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК Цена13,
	|			МАКСИМУМ(ВЫБОР
	|					КОГДА ЦеныНоменклатурыСрезПоследних.ТипЦен.Код = ""000000014""
	|						ТОГДА ЦеныНоменклатурыСрезПоследних.Цена
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК Цена14,
	|			МАКСИМУМ(ВЫБОР
	|					КОГДА ЦеныНоменклатурыСрезПоследних.ТипЦен.Код = ""000000015""
	|						ТОГДА ЦеныНоменклатурыСрезПоследних.Цена
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК Цена15,
	|			МАКСИМУМ(ВЫБОР
	|					КОГДА ЦеныНоменклатурыСрезПоследних.ТипЦен.Код = ""000000016""
	|						ТОГДА ЦеныНоменклатурыСрезПоследних.Цена
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК Цена16,
	|			МАКСИМУМ(ВЫБОР
	|					КОГДА ЦеныНоменклатурыСрезПоследних.ТипЦен.Код = ""000000017""
	|						ТОГДА ЦеныНоменклатурыСрезПоследних.Цена
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК Цена17,
	|			МАКСИМУМ(ВЫБОР
	|					КОГДА ЦеныНоменклатурыСрезПоследних.ТипЦен.Код = ""000000018""
	|						ТОГДА ЦеныНоменклатурыСрезПоследних.Цена
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК Цена18,
	|			МАКСИМУМ(ВЫБОР
	|					КОГДА ЦеныНоменклатурыСрезПоследних.ТипЦен.Код = ""000000019""
	|						ТОГДА ЦеныНоменклатурыСрезПоследних.Цена
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК Цена19,
	|			МАКСИМУМ(ВЫБОР
	|					КОГДА ЦеныНоменклатурыСрезПоследних.ТипЦен.Код = ""000000020""
	|						ТОГДА ЦеныНоменклатурыСрезПоследних.Цена
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК Цена20,
	|			МАКСИМУМ(ВЫБОР
	|					КОГДА ЦеныНоменклатурыСрезПоследних.ТипЦен.Код = ""000000021""
	|						ТОГДА ЦеныНоменклатурыСрезПоследних.Цена
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК Цена21,
	|			МАКСИМУМ(ВЫБОР
	|					КОГДА ЦеныНоменклатурыСрезПоследних.ТипЦен.Код = ""000000022""
	|						ТОГДА ЦеныНоменклатурыСрезПоследних.Цена
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК Цена22,
	|			МАКСИМУМ(ВЫБОР
	|					КОГДА ЦеныНоменклатурыСрезПоследних.ТипЦен.Код = ""000000023""
	|						ТОГДА ЦеныНоменклатурыСрезПоследних.Цена
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК Цена23,
	|			МАКСИМУМ(ВЫБОР
	|					КОГДА ЦеныНоменклатурыСрезПоследних.ТипЦен.Код = ""000000024""
	|						ТОГДА ЦеныНоменклатурыСрезПоследних.Цена
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК Цена24,
	|			МАКСИМУМ(ВЫБОР
	|					КОГДА ЦеныНоменклатурыСрезПоследних.ТипЦен.Код = ""000000025""
	|						ТОГДА ЦеныНоменклатурыСрезПоследних.Цена
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК Цена25,
	|			МАКСИМУМ(ВЫБОР
	|					КОГДА ЦеныНоменклатурыСрезПоследних.ТипЦен.Код = ""000000026""
	|						ТОГДА ЦеныНоменклатурыСрезПоследних.Цена
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК Цена26,
	|			МАКСИМУМ(ВЫБОР
	|					КОГДА ЦеныНоменклатурыСрезПоследних.ТипЦен.Код = ""000000027""
	|						ТОГДА ЦеныНоменклатурыСрезПоследних.Цена
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК Цена27,
	|			МАКСИМУМ(ВЫБОР
	|					КОГДА ЦеныНоменклатурыСрезПоследних.ТипЦен.Код = ""000000028""
	|						ТОГДА ЦеныНоменклатурыСрезПоследних.Цена
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК Цена28,
	|			МАКСИМУМ(ВЫБОР
	|					КОГДА ЦеныНоменклатурыСрезПоследних.ТипЦен.Код = ""000000029""
	|						ТОГДА ЦеныНоменклатурыСрезПоследних.Цена
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК Цена29,
	|			МАКСИМУМ(ВЫБОР
	|					КОГДА ЦеныНоменклатурыСрезПоследних.ТипЦен.Код = ""000000030""
	|						ТОГДА ЦеныНоменклатурыСрезПоследних.Цена
	|					ИНАЧЕ 0
	|				КОНЕЦ) КАК Цена30
	|		ИЗ
	|			РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|					&ДатаСреза,
	|					Подразделение = &Подразделение
	|						И Номенклатура В ИЕРАРХИИ (&НоменклатурнаяГруппа)) КАК ЦеныНоменклатурыСрезПоследних
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ЦеныНоменклатурыСрезПоследних.Номенклатура) КАК Цены
	|		ПО СписокНоменклатуры.Номенклатура = Цены.Номенклатура
	|
	|УПОРЯДОЧИТЬ ПО
	|	СписокНоменклатуры.Номенклатура.Наименование";
	
	#КонецОбласти 
	
	запрос.УстановитьПараметр("НоменклатурнаяГруппа", Объект.НоменклатурнаяГруппа);
	запрос.УстановитьПараметр("ДатаСреза", Объект.Дата);
	запрос.УстановитьПараметр("Подразделение", Объект.Подразделение);
	
	выборка = запрос.Выполнить().Выбрать();
	
	запасы = Объект.СтрокиДокумента;
	запасы.Очистить();
	
	Пока выборка.Следующий() Цикл
		
		новаяСтрока = запасы.Добавить();
		
		ЗаполнитьЗначенияСвойств(новаяСтрока, выборка);
		
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	
	ЕстьОшибки = Ложь;
	
	//Проверим заполнение реквизитов
	Если НЕ ЗначениеЗаполнено(Объект.НоменклатурнаяГруппа) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не выбрана номенклатурная группа");
		ЕстьОшибки = Истина;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.Подразделение) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не выбрано подразделение");
		ЕстьОшибки = Истина;
	КонецЕсли;
	
	Если НЕ ЕстьОшибки Тогда
		ЗаполнитьСервер();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура РасчитатьСервер()
	
	
	мНоменклатура = ОбработкаТабличныхЧастейКлиентСервер.ВыгрузитьКолонку(Объект.СтрокиДокумента, "Номенклатура");

	соХарактеристикиЦен = ПолучитьХарактеристикиЦен(Объект.Подразделение, Объект.Дата, мНоменклатура);
	
	порядокРасчетаЦен = Новый Массив;
	порядокРасчетаЦен.Добавить("1");
	порядокРасчетаЦен.Добавить("10");
	порядокРасчетаЦен.Добавить("2");
	порядокРасчетаЦен.Добавить("3");
	порядокРасчетаЦен.Добавить("4");
	порядокРасчетаЦен.Добавить("5");
	порядокРасчетаЦен.Добавить("6");
	порядокРасчетаЦен.Добавить("7");
	порядокРасчетаЦен.Добавить("8");
	порядокРасчетаЦен.Добавить("9");
	порядокРасчетаЦен.Добавить("11");
	порядокРасчетаЦен.Добавить("12");
	порядокРасчетаЦен.Добавить("13");
	порядокРасчетаЦен.Добавить("14");
	порядокРасчетаЦен.Добавить("15");
	порядокРасчетаЦен.Добавить("16");
	порядокРасчетаЦен.Добавить("17");
	порядокРасчетаЦен.Добавить("18");
	порядокРасчетаЦен.Добавить("19");
	порядокРасчетаЦен.Добавить("20");
	порядокРасчетаЦен.Добавить("21");
	порядокРасчетаЦен.Добавить("22");
	порядокРасчетаЦен.Добавить("23");
	порядокРасчетаЦен.Добавить("24");
	порядокРасчетаЦен.Добавить("25");
	порядокРасчетаЦен.Добавить("26");
	порядокРасчетаЦен.Добавить("27");
	порядокРасчетаЦен.Добавить("28");
	порядокРасчетаЦен.Добавить("29");
	порядокРасчетаЦен.Добавить("30");
	
	
	массивТиповЦен = Новый Массив;
	Для Каждого текСтрока Из ВыбранныеЦены Цикл
		Если текСтрока.Выбрана Тогда
			массивТиповЦен.Добавить(текСтрока.Ссылка);
		КонецЕсли;
	КонецЦикла;
	
	строкиДокумента = Объект.СтрокиДокумента;
	Для Каждого строкаДокумента Из строкиДокумента Цикл
		
		результатЗапроса = соХарактеристикиЦен.Получить(строкаДокумента.Номенклатура);
		
		Если результатЗапроса.НоменклатурнаяГруппа = Неопределено Тогда
			сообщить("Не установлена ценовая политика для - " + СокрЛП(строкаДокумента.Номенклатура));
			Продолжить;
		КонецЕсли;
		
		строкаДокумента.ИндивидуальнаяСтратегияЦенообразования = результатЗапроса.ИндивидуальнаяСтратегияЦенообразования;
		
		Для _индекс = 1 По 30 Цикл
			
			индекс = порядокРасчетаЦен[_индекс-1];
			
			//НеРасчитывать 	= Объект.НоменклатурнаяГруппа["НеРасчитыватьЦена"+СокрЛП(Индекс)];
			//ТекНаценка 		= Объект.НоменклатурнаяГруппа["Наценка"+СокрЛП(Индекс)];
			неРасчитывать 	= результатЗапроса["НеРасчитыватьЦена"+СокрЛП(индекс)];
			текНаценка 		= результатЗапроса["Наценка"+СокрЛП(индекс)];
			текМетодРасчета	= результатЗапроса["МетодРасчета"+СокрЛП(индекс)];
			
			текЦенаНаименование = "Цена"+СокрЛП(индекс);
			
			// Расчитываем только по выбранным категориям
			Если массивТиповЦен.Найти(Справочники.ТипыЦен.НайтиПоНаименованию("Категория "+СокрЛП(индекс))) = Неопределено Тогда
				//СтрокаДокумента[ТекЦенаНаименование] = 0;
				Продолжить;
			Иначе
				неРасчитывать = Ложь;
			КонецЕсли;
			
			Если Не неРасчитывать Тогда
				
				текЦена = СтрокаДокумента[ТекЦенаНаименование];
				
				
				
				базовыйТипЦен = результатЗапроса["БазовыйТипЦен"+СокрЛП(индекс)];
				
				Если ЗначениеЗаполнено(базовыйТипЦен) Тогда
					
					Если базовыйТипЦен = Справочники.ТипыЦен.Закупка Тогда
						базовыйТипЦенНаименование = "Цена";
					Иначе
						базовыйТипЦенНаименование = СтрЗаменить(СокрЛП(базовыйТипЦен), "Категория ", "Цена");
					КонецЕсли;
					
				Иначе
					 базовыйТипЦенНаименование = "Цена"+?(Индекс="1","","1");
				КонецЕсли;
				
				// Методы расчета:
				// 	0 - Процент от Кат1
				//	1 - +/- сумма к закупке
				//	2 - Процент от Закупки ... уже не нужен
				Если (текМетодРасчета = 0) Тогда
					
					Если (текНаценка >= 0) Тогда
						текЦена = строкаДокумента[базовыйТипЦенНаименование] * текНаценка;
					Иначе
						текЦена = -1*(строкаДокумента[базовыйТипЦенНаименование] / текНаценка);
					КонецЕсли;
					
				ИначеЕсли текМетодРасчета = 1 Тогда
					
					 текЦена = строкаДокумента[базовыйТипЦенНаименование] + текНаценка;
					 
				ИначеЕсли (текМетодРасчета = 2) Тогда
					// % от закупки ... уже не нужен
					Если (текНаценка > 0) Тогда
						текЦена = строкаДокумента[базовыйТипЦенНаименование] * текНаценка;
					Иначе
						текЦена = -1*(строкаДокумента[базовыйТипЦенНаименование] / текНаценка);
					КонецЕсли;
					
				КонецЕсли;
				
				строкаДокумента[текЦенаНаименование] = текЦена;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Расчитать(Команда)
	РасчитатьСервер();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УправлениеНебольшойФирмойСервер.ЗаполнитьШапкуДокумента(
		Объект,
		,
		Параметры.ЗначениеКопирования,
		Параметры.Основание,
		СостояниеДокумента,
		КартинкаСостоянияДокумента,
		РазрешеноПроведение,
		Параметры.ЗначенияЗаполнения
	);
	

	ИнициализироватьВыбранныеЦены();

	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	Для Каждого СтрокаДокумента Из Объект.СтрокиДокумента Цикл
		
		СтрокаДокумента.Код8 = СтрокаДокумента.Номенклатура.Код;
        
    КонецЦикла;	
	
КонецПроцедуры


&НаКлиенте
Процедура СтрокиДокументаНоменклатураПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.СтрокиДокумента.ТекущиеДанные;

	
	СтруктураДанных = Новый Структура("Номенклатура, Подразделение, ДатаСреза", СтрокаТабличнойЧасти.Номенклатура, Объект.Подразделение, Объект.Дата);	
	СтруктураДанных = ПолучитьДанныеНоменклатураПриИзменении(СтруктураДанных);
	
	СтрокаТабличнойЧасти.Цена 	= СтруктураДанных.Цена;
	СтрокаТабличнойЧасти.Код8	= СтруктураДанных.Код8;
	

КонецПроцедуры

Функция ПолучитьДанныеНоменклатураПриИзменении(СтруктураДанные)
	
	// Получим цену
	//СтруктураПараметров = Новый Структура("Номенклатура, ТипЦен, Подразделение, ДатаСреза, Контрагент", СтруктураДанные.Номенклатура, СтруктураДанные.ТипЦен, СтруктураДанные.Подразделение, СтруктураДанные.ДатаСреза, СтруктураДанные.Контрагент);
	
	СтруктураДанные.Вставить("ТипЦен", Справочники.ТипыЦен.Закупка);
	
	СтруктураДанные.Вставить("Цена", ЦенообразованиеСервер.ВернутьЦенуНоменклатуры(СтруктураДанные));
	СтруктураДанные.Вставить("Код8", СтруктураДанные.Номенклатура.Код);
	
	
	Возврат СтруктураДанные;
	
КонецФункции // ПолучитьДанныеНоменклатураПриИзменении()


&НаКлиенте
Процедура ВыбратьВсеВидыЦен(Команда)
	
	Для Каждого СтрокаТаблицы Из ВыбранныеЦены Цикл
		Если Не СтрокаТаблицы.Выбрана Тогда
			СтрокаТаблицы.Выбрана = Истина;
		КонецЕсли;
	КонецЦикла;
	
	ВыбранныеЦеныИзменены = Истина;
	
	УправлениеВидимостьюКолонок();
	
КонецПроцедуры

&НаКлиенте
Процедура ИсключитьВсеВидыЦен(Команда)
	
	Для Каждого СтрокаТаблицы Из ВыбранныеЦены Цикл
		Если СтрокаТаблицы.Выбрана Тогда
			СтрокаТаблицы.Выбрана = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	ВыбранныеЦеныИзменены = Истина;
	
	УправлениеВидимостьюКолонок();

КонецПроцедуры

&НаКлиенте
Процедура ВосстановитьНастройкиПоУмолчанию(Команда)
	
	ЗаполнитьТипыЦенПоУмолчанию();
	
	УправлениеВидимостьюКолонок();
	
КонецПроцедуры

&НаКлиенте
Процедура УправлениеВидимостьюКолонок()
	
	Для Каждого СтрокаТаблицы Из ВыбранныеЦены Цикл
		
		ТипЦеныСтр = СокрЛП(СтрокаТаблицы.Ссылка);
		
		Если ТипЦеныСтр = "Закупка" Тогда
			Элементы.СтрокиДокументаЦена.Видимость = СтрокаТаблицы.Выбрана;
		Иначе
			Элементы[СтрЗаменить(ТипЦеныСтр, "Категория ", "СтрокиДокументаЦена")].Видимость = СтрокаТаблицы.Выбрана;
		КонецЕсли;
		
	КонецЦикла;

	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатурнаяГруппаПриИзменении(Элемент)
	
	ЗаполнитьТипыЦенПоУмолчанию();
	
	УправлениеВидимостьюКолонок();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УправлениеВидимостьюКолонок();
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Модифицированность ИЛИ Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ПоместитьВидыЦенВТабличнуюЧасть(ТекущийОбъект);
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПоместитьВидыЦенВТабличнуюЧасть(ТекущийОбъект)
	
	ТекущийОбъект.ТипыЦен.Очистить();
	
	МассивВыбранныхВидовЦен = ВыбранныеСтрокиТаблицыВидовЦен();
	Для Каждого СтрокаВидЦены Из МассивВыбранныхВидовЦен Цикл
		
		НоваяСтрока = ТекущийОбъект.ТипыЦен.Добавить();
		НоваяСтрока.ТипЦен = СтрокаВидЦены.Ссылка;
		
	КонецЦикла;
	
КонецПроцедуры

// Возвращает массив строк выбранных пользователем видов цен
//
&НаСервере
Функция ВыбранныеСтрокиТаблицыВидовЦен()
	
	ВидыЦен = Новый Массив();
	
	Для Каждого ТекСтрока Из ВыбранныеЦены Цикл
		Если ТекСтрока.Выбрана Тогда
			ВидыЦен.Добавить(ТекСтрока);
		КонецЕсли;
	КонецЦикла;
	
	Возврат ВидыЦен;
	
КонецФункции

&НаСервере
Процедура ИнициализироватьВыбранныеЦены()
	
	ВыбранныеЦены.Очистить();
	
	МассивТиповЦен = Новый Массив;
	МассивТиповЦен.Добавить(Справочники.ТипыЦен.Закупка);
	Для Индекс = 1 По 30 Цикл
		МассивТиповЦен.Добавить(Справочники.ТипыЦен.НайтиПоНаименованию("Категория "+СокрЛП(Индекс)));
	КонецЦикла;
	
	МассивВыбранные = Новый Массив;
	Для Каждого ВыбранныйТиЦен Из Объект.ТипыЦен Цикл
		МассивВыбранные.Добавить(ВыбранныйТиЦен.ТипЦен);
	КонецЦикла;
	
	// ИСПРАВИТЬ!!! Заглушка: так как нет доступа к выбранным ценам из модуля документа
	Если массивВыбранные.Количество() = 0 И ЗначениеЗаполнено(Объект.ДокументОснование) Тогда
		массивВыбранные.Добавить(Справочники.ТипыЦен.НайтиПоНаименованию("Закупка"));	
		массивВыбранные.Добавить(Справочники.ТипыЦен.НайтиПоНаименованию("Категория 1"));	
		массивВыбранные.Добавить(Справочники.ТипыЦен.НайтиПоНаименованию("Категория 10"));	
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТипыЦен.Ссылка
	|ИЗ
	|	Справочник.ТипыЦен КАК ТипыЦен
	|ГДЕ
	|	ТипыЦен.Ссылка В(&МассивТиповЦен)");
	
	
	Запрос.УстановитьПараметр("МассивТиповЦен", МассивТиповЦен);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = ВыбранныеЦены.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
		Если МассивВыбранные.Найти(Выборка.Ссылка) = Неопределено Тогда
		Иначе
			НоваяСтрока.Выбрана = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеЦеныПриИзменении(Элемент)
	
	// Вставить содержимое обработчика.
	УправлениеВидимостьюКолонок();
	
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	
	ЗаполнитьТипыЦенПоУмолчанию();
	
	УправлениеВидимостьюКолонок();

КонецПроцедуры


#Область Ценообразование

функция ПолучитьРезультатЗапросаПоЦенообразованию(подразделение, период, номенклатура)
	
	запрос = Новый Запрос;
	запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	#Область ТекстЗапроса
	
	запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СтруктурныеЕдиницы.Ссылка КАК Подразделение,
	|	ЕСТЬNULL(ПараметрыУчетаПоПодразделениямСрезПоследних.ИспользоватьЦеновыеГруппы, ЛОЖЬ) КАК ИспользоватьЦеновыеГруппы
	|ПОМЕСТИТЬ ВТ_ПараметрыУчетаПоПодразделению
	|ИЗ
	|	Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыУчетаПоПодразделениям.СрезПоследних(НАЧАЛОПЕРИОДА(&Период, ДЕНЬ), СтруктурнаяЕдиница = &Подразделение) КАК ПараметрыУчетаПоПодразделениямСрезПоследних
	|		ПО (ПараметрыУчетаПоПодразделениямСрезПоследних.СтруктурнаяЕдиница = СтруктурныеЕдиницы.Ссылка)
	|ГДЕ
	|	СтруктурныеЕдиницы.Ссылка = &подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтратегияПродвиженияАссортимент.Номенклатура КАК НоменклатураСсылка,
	|	МАКСИМУМ(1 + СтратегияПродвиженияАссортимент.ПроцентНаценки / 100) КАК Наценка30
	|ПОМЕСТИТЬ ВТ_ИндивидуальноеЦенообразование
	|ИЗ
	|	Документ.СтратегияПродвижения.Ассортимент КАК СтратегияПродвиженияАссортимент
	|ГДЕ
	|	&Период МЕЖДУ СтратегияПродвиженияАссортимент.Ссылка.ДатаНачала И КОНЕЦПЕРИОДА(СтратегияПродвиженияАссортимент.Ссылка.ДатаОкончания, ДЕНЬ)
	|	И СтратегияПродвиженияАссортимент.Ссылка.Проведен = ИСТИНА
	|	И СтратегияПродвиженияАссортимент.Ссылка.Подразделение = &Подразделение
	|
	|СГРУППИРОВАТЬ ПО
	|	СтратегияПродвиженияАссортимент.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Номенклатура,
	|	ЕСТЬNULL(ЦенообразованиеСрезПоследних.НоменклатурнаяГруппа, НЕОПРЕДЕЛЕНО) КАК НоменклатурнаяГруппа,
	|	ЦенообразованиеСрезПоследних.ЦеноваяГруппа,
	|	ЦенообразованиеСрезПоследних.Наценка1,
	|	ЦенообразованиеСрезПоследних.Наценка2,
	|	ЦенообразованиеСрезПоследних.Наценка3,
	|	ЦенообразованиеСрезПоследних.Наценка4,
	|	ЦенообразованиеСрезПоследних.Наценка5,
	|	ЦенообразованиеСрезПоследних.Наценка6,
	|	ЦенообразованиеСрезПоследних.Наценка7,
	|	ЦенообразованиеСрезПоследних.Наценка8,
	|	ЦенообразованиеСрезПоследних.Наценка9,
	|	ЦенообразованиеСрезПоследних.Наценка10 КАК Наценка10,
	|	ЦенообразованиеСрезПоследних.Наценка11,
	|	ЦенообразованиеСрезПоследних.Наценка12,
	|	ЦенообразованиеСрезПоследних.Наценка13,
	|	ЦенообразованиеСрезПоследних.Наценка14,
	|	ЦенообразованиеСрезПоследних.Наценка15,
	|	ЦенообразованиеСрезПоследних.Наценка16,
	|	ЦенообразованиеСрезПоследних.Наценка17,
	|	ЦенообразованиеСрезПоследних.Наценка18,
	|	ЦенообразованиеСрезПоследних.Наценка19,
	|	ЦенообразованиеСрезПоследних.Наценка20,
	|	ЦенообразованиеСрезПоследних.Наценка21,
	|	ЦенообразованиеСрезПоследних.Наценка22,
	|	ЦенообразованиеСрезПоследних.Наценка23,
	|	ЦенообразованиеСрезПоследних.Наценка24,
	|	ЦенообразованиеСрезПоследних.Наценка25,
	|	ЦенообразованиеСрезПоследних.Наценка26,
	|	ЦенообразованиеСрезПоследних.Наценка27,
	|	ЦенообразованиеСрезПоследних.Наценка28,
	|	ЦенообразованиеСрезПоследних.Наценка29,
	|	ВЫБОР
	|		КОГДА ВТ_ИндивидуальноеЦенообразование.Наценка30 ЕСТЬ NULL 
	|			ТОГДА ЦенообразованиеСрезПоследних.Наценка30
	|		ИНАЧЕ ВТ_ИндивидуальноеЦенообразование.Наценка30
	|	КОНЕЦ КАК Наценка30,
	|	ЦенообразованиеСрезПоследних.БазовыйТипЦен1,
	|	ЦенообразованиеСрезПоследних.БазовыйТипЦен10,
	|	ЦенообразованиеСрезПоследних.БазовыйТипЦен11,
	|	ЦенообразованиеСрезПоследних.БазовыйТипЦен12,
	|	ЦенообразованиеСрезПоследних.БазовыйТипЦен13,
	|	ЦенообразованиеСрезПоследних.БазовыйТипЦен14,
	|	ЦенообразованиеСрезПоследних.БазовыйТипЦен15,
	|	ЦенообразованиеСрезПоследних.БазовыйТипЦен16,
	|	ЦенообразованиеСрезПоследних.БазовыйТипЦен2,
	|	ЦенообразованиеСрезПоследних.БазовыйТипЦен3,
	|	ЦенообразованиеСрезПоследних.БазовыйТипЦен4,
	|	ЦенообразованиеСрезПоследних.БазовыйТипЦен5,
	|	ЦенообразованиеСрезПоследних.БазовыйТипЦен6,
	|	ЦенообразованиеСрезПоследних.БазовыйТипЦен7,
	|	ЦенообразованиеСрезПоследних.БазовыйТипЦен8,
	|	ЦенообразованиеСрезПоследних.БазовыйТипЦен9,
	|	ЦенообразованиеСрезПоследних.МетодРасчета1,
	|	ЦенообразованиеСрезПоследних.МетодРасчета10,
	|	ЦенообразованиеСрезПоследних.МетодРасчета11,
	|	ЦенообразованиеСрезПоследних.МетодРасчета12,
	|	ЦенообразованиеСрезПоследних.МетодРасчета13,
	|	ЦенообразованиеСрезПоследних.МетодРасчета14,
	|	ЦенообразованиеСрезПоследних.МетодРасчета15,
	|	ЦенообразованиеСрезПоследних.МетодРасчета16,
	|	ЦенообразованиеСрезПоследних.МетодРасчета2,
	|	ЦенообразованиеСрезПоследних.МетодРасчета3,
	|	ЦенообразованиеСрезПоследних.МетодРасчета4,
	|	ЦенообразованиеСрезПоследних.МетодРасчета5,
	|	ЦенообразованиеСрезПоследних.МетодРасчета6,
	|	ЦенообразованиеСрезПоследних.МетодРасчета7,
	|	ЦенообразованиеСрезПоследних.МетодРасчета8,
	|	ЦенообразованиеСрезПоследних.МетодРасчета9,
	|	ЦенообразованиеСрезПоследних.НеРасчитыватьЦена1,
	|	ЦенообразованиеСрезПоследних.НеРасчитыватьЦена10,
	|	ЦенообразованиеСрезПоследних.НеРасчитыватьЦена11,
	|	ЦенообразованиеСрезПоследних.НеРасчитыватьЦена12,
	|	ЦенообразованиеСрезПоследних.НеРасчитыватьЦена13,
	|	ЦенообразованиеСрезПоследних.НеРасчитыватьЦена14,
	|	ЦенообразованиеСрезПоследних.НеРасчитыватьЦена15,
	|	ЦенообразованиеСрезПоследних.НеРасчитыватьЦена16,
	|	ЦенообразованиеСрезПоследних.НеРасчитыватьЦена2,
	|	ЦенообразованиеСрезПоследних.НеРасчитыватьЦена3,
	|	ЦенообразованиеСрезПоследних.НеРасчитыватьЦена4,
	|	ЦенообразованиеСрезПоследних.НеРасчитыватьЦена5,
	|	ЦенообразованиеСрезПоследних.НеРасчитыватьЦена6,
	|	ЦенообразованиеСрезПоследних.НеРасчитыватьЦена7,
	|	ЦенообразованиеСрезПоследних.НеРасчитыватьЦена8,
	|	ЦенообразованиеСрезПоследних.НеРасчитыватьЦена9,
	|	ЦенообразованиеСрезПоследних.Приоритет1,
	|	ЦенообразованиеСрезПоследних.Приоритет10,
	|	ЦенообразованиеСрезПоследних.Приоритет11,
	|	ЦенообразованиеСрезПоследних.Приоритет12,
	|	ЦенообразованиеСрезПоследних.Приоритет13,
	|	ЦенообразованиеСрезПоследних.Приоритет14,
	|	ЦенообразованиеСрезПоследних.Приоритет15,
	|	ЦенообразованиеСрезПоследних.Приоритет16,
	|	ЦенообразованиеСрезПоследних.Приоритет2,
	|	ЦенообразованиеСрезПоследних.Приоритет3,
	|	ЦенообразованиеСрезПоследних.Приоритет4,
	|	ЦенообразованиеСрезПоследних.Приоритет5,
	|	ЦенообразованиеСрезПоследних.Приоритет6,
	|	ЦенообразованиеСрезПоследних.Приоритет7,
	|	ЦенообразованиеСрезПоследних.Приоритет8,
	|	ЦенообразованиеСрезПоследних.Приоритет9,
	|	ЦенообразованиеСрезПоследних.БазовыйТипЦен17,
	|	ЦенообразованиеСрезПоследних.БазовыйТипЦен18,
	|	ЦенообразованиеСрезПоследних.БазовыйТипЦен19,
	|	ЦенообразованиеСрезПоследних.БазовыйТипЦен20,
	|	ЦенообразованиеСрезПоследних.БазовыйТипЦен21,
	|	ЦенообразованиеСрезПоследних.БазовыйТипЦен22,
	|	ЦенообразованиеСрезПоследних.БазовыйТипЦен23,
	|	ЦенообразованиеСрезПоследних.БазовыйТипЦен24,
	|	ЦенообразованиеСрезПоследних.БазовыйТипЦен25,
	|	ЦенообразованиеСрезПоследних.БазовыйТипЦен26,
	|	ЦенообразованиеСрезПоследних.БазовыйТипЦен27,
	|	ЦенообразованиеСрезПоследних.БазовыйТипЦен28,
	|	ЦенообразованиеСрезПоследних.БазовыйТипЦен29,
	|	ЦенообразованиеСрезПоследних.БазовыйТипЦен30,
	|	ЦенообразованиеСрезПоследних.МетодРасчета17,
	|	ЦенообразованиеСрезПоследних.МетодРасчета18,
	|	ЦенообразованиеСрезПоследних.МетодРасчета19,
	|	ЦенообразованиеСрезПоследних.МетодРасчета20,
	|	ЦенообразованиеСрезПоследних.МетодРасчета21,
	|	ЦенообразованиеСрезПоследних.МетодРасчета22,
	|	ЦенообразованиеСрезПоследних.МетодРасчета23,
	|	ЦенообразованиеСрезПоследних.МетодРасчета24,
	|	ЦенообразованиеСрезПоследних.МетодРасчета25,
	|	ЦенообразованиеСрезПоследних.МетодРасчета26,
	|	ЦенообразованиеСрезПоследних.МетодРасчета27,
	|	ЦенообразованиеСрезПоследних.МетодРасчета28,
	|	ЦенообразованиеСрезПоследних.МетодРасчета29,
	|	ЦенообразованиеСрезПоследних.МетодРасчета30,
	|	ЦенообразованиеСрезПоследних.НеРасчитыватьЦена17,
	|	ЦенообразованиеСрезПоследних.НеРасчитыватьЦена18,
	|	ЦенообразованиеСрезПоследних.НеРасчитыватьЦена19,
	|	ЦенообразованиеСрезПоследних.НеРасчитыватьЦена20,
	|	ЦенообразованиеСрезПоследних.НеРасчитыватьЦена21,
	|	ЦенообразованиеСрезПоследних.НеРасчитыватьЦена22,
	|	ЦенообразованиеСрезПоследних.НеРасчитыватьЦена23,
	|	ЦенообразованиеСрезПоследних.НеРасчитыватьЦена24,
	|	ЦенообразованиеСрезПоследних.НеРасчитыватьЦена25,
	|	ЦенообразованиеСрезПоследних.НеРасчитыватьЦена26,
	|	ЦенообразованиеСрезПоследних.НеРасчитыватьЦена27,
	|	ЦенообразованиеСрезПоследних.НеРасчитыватьЦена28,
	|	ЦенообразованиеСрезПоследних.НеРасчитыватьЦена29,
	|	ЦенообразованиеСрезПоследних.НеРасчитыватьЦена30,
	|	ЦенообразованиеСрезПоследних.Приоритет17,
	|	ЦенообразованиеСрезПоследних.Приоритет18,
	|	ЦенообразованиеСрезПоследних.Приоритет19,
	|	ЦенообразованиеСрезПоследних.Приоритет20,
	|	ЦенообразованиеСрезПоследних.Приоритет21,
	|	ЦенообразованиеСрезПоследних.Приоритет22,
	|	ЦенообразованиеСрезПоследних.Приоритет23,
	|	ЦенообразованиеСрезПоследних.Приоритет24,
	|	ЦенообразованиеСрезПоследних.Приоритет25,
	|	ЦенообразованиеСрезПоследних.Приоритет26,
	|	ЦенообразованиеСрезПоследних.Приоритет27,
	|	ЦенообразованиеСрезПоследних.Приоритет28,
	|	ЦенообразованиеСрезПоследних.Приоритет29,
	|	ЦенообразованиеСрезПоследних.Приоритет30,
	|	ВЫБОР
	|		КОГДА ВТ_ИндивидуальноеЦенообразование.НоменклатураСсылка ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ИндивидуальнаяСтратегияЦенообразования,
	|	ВТ_ПараметрыУчетаПоПодразделению.ИспользоватьЦеновыеГруппы
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПараметрыУчетаПоПодразделению КАК ВТ_ПараметрыУчетаПоПодразделению
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Ценообразование.СрезПоследних(НАЧАЛОПЕРИОДА(&Период, ДЕНЬ), Подразделение = &подразделение) КАК ЦенообразованиеСрезПоследних
	|		ПО Номенклатура.Родитель = ЦенообразованиеСрезПоследних.НоменклатурнаяГруппа
	|			И (ВЫБОР
	|				КОГДА ВТ_ПараметрыУчетаПоПодразделению.ИспользоватьЦеновыеГруппы = ИСТИНА
	|					ТОГДА Номенклатура.ЦеноваяГруппа = ЦенообразованиеСрезПоследних.ЦеноваяГруппа
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ИндивидуальноеЦенообразование КАК ВТ_ИндивидуальноеЦенообразование
	|		ПО Номенклатура.Ссылка = ВТ_ИндивидуальноеЦенообразование.НоменклатураСсылка
	|ГДЕ
	|	Номенклатура.Ссылка В(&мНоменклатура)";
	
	#КонецОбласти
	
	запрос.УстановитьПараметр("Период", период);
	запрос.УстановитьПараметр("Подразделение", подразделение);
	запрос.УстановитьПараметр("мНоменклатура", номенклатура);
	
	результат = запрос.Выполнить();
	
	#Область ПолучениеВременныхТаблиц
	
	запрос.Текст = "выбрать * из ВТ_ПараметрыУчетаПоПодразделению";
	запрос.Текст = "выбрать * из ВТ_ИндивидуальноеЦенообразование";
	
	#КонецОбласти
	
	Возврат результат;
	
КонецФункции

функция ХарактеристикиЦен()
	
	#Область ПоляСтруктуры
	
	поляСтруктуры =
	"Номенклатура,
	|ИндивидуальнаяСтратегияЦенообразования,
	|ИспользоватьЦеновыеГруппы,
	|НоменклатурнаяГруппа,
	|ЦеноваяГруппа,
	|БазовыйТипЦен1,
	|БазовыйТипЦен10,
	|БазовыйТипЦен11,
	|БазовыйТипЦен12,
	|БазовыйТипЦен13,
	|БазовыйТипЦен14,
	|БазовыйТипЦен15,
	|БазовыйТипЦен16,
	|БазовыйТипЦен17,
	|БазовыйТипЦен18,
	|БазовыйТипЦен19,
	|БазовыйТипЦен2,
	|БазовыйТипЦен20,
	|БазовыйТипЦен21,
	|БазовыйТипЦен22,
	|БазовыйТипЦен23,
	|БазовыйТипЦен24,
	|БазовыйТипЦен25,
	|БазовыйТипЦен26,
	|БазовыйТипЦен27,
	|БазовыйТипЦен28,
	|БазовыйТипЦен29,
	|БазовыйТипЦен3,
	|БазовыйТипЦен30,
	|БазовыйТипЦен4,
	|БазовыйТипЦен5,
	|БазовыйТипЦен6,
	|БазовыйТипЦен7,
	|БазовыйТипЦен8,
	|БазовыйТипЦен9,
	|МетодРасчета1,
	|МетодРасчета10,
	|МетодРасчета11,
	|МетодРасчета12,
	|МетодРасчета13,
	|МетодРасчета14,
	|МетодРасчета15,
	|МетодРасчета16,
	|МетодРасчета17,
	|МетодРасчета18,
	|МетодРасчета19,
	|МетодРасчета2,
	|МетодРасчета20,
	|МетодРасчета21,
	|МетодРасчета22,
	|МетодРасчета23,
	|МетодРасчета24,
	|МетодРасчета25,
	|МетодРасчета26,
	|МетодРасчета27,
	|МетодРасчета28,
	|МетодРасчета29,
	|МетодРасчета3,
	|МетодРасчета30,
	|МетодРасчета4,
	|МетодРасчета5,
	|МетодРасчета6,
	|МетодРасчета7,
	|МетодРасчета8,
	|МетодРасчета9,
	|Наценка1,
	|Наценка10,
	|Наценка11,
	|Наценка12,
	|Наценка13,
	|Наценка14,
	|Наценка15,
	|Наценка16,
	|Наценка17,
	|Наценка18,
	|Наценка19,
	|Наценка2,
	|Наценка20,
	|Наценка21,
	|Наценка22,
	|Наценка23,
	|Наценка24,
	|Наценка25,
	|Наценка26,
	|Наценка27,
	|Наценка28,
	|Наценка29,
	|Наценка3,
	|Наценка30,
	|Наценка4,
	|Наценка5,
	|Наценка6,
	|Наценка7,
	|Наценка8,
	|Наценка9,
	|НеРасчитыватьЦена1,
	|НеРасчитыватьЦена10,
	|НеРасчитыватьЦена11,
	|НеРасчитыватьЦена12,
	|НеРасчитыватьЦена13,
	|НеРасчитыватьЦена14,
	|НеРасчитыватьЦена15,
	|НеРасчитыватьЦена16,
	|НеРасчитыватьЦена17,
	|НеРасчитыватьЦена18,
	|НеРасчитыватьЦена19,
	|НеРасчитыватьЦена2,
	|НеРасчитыватьЦена20,
	|НеРасчитыватьЦена21,
	|НеРасчитыватьЦена22,
	|НеРасчитыватьЦена23,
	|НеРасчитыватьЦена24,
	|НеРасчитыватьЦена25,
	|НеРасчитыватьЦена26,
	|НеРасчитыватьЦена27,
	|НеРасчитыватьЦена28,
	|НеРасчитыватьЦена29,
	|НеРасчитыватьЦена3,
	|НеРасчитыватьЦена30,
	|НеРасчитыватьЦена4,
	|НеРасчитыватьЦена5,
	|НеРасчитыватьЦена6,
	|НеРасчитыватьЦена7,
	|НеРасчитыватьЦена8,
	|НеРасчитыватьЦена9,
	|Приоритет1,
	|Приоритет10,
	|Приоритет11,
	|Приоритет12,
	|Приоритет13,
	|Приоритет14,
	|Приоритет15,
	|Приоритет16,
	|Приоритет17,
	|Приоритет18,
	|Приоритет19,
	|Приоритет2,
	|Приоритет20,
	|Приоритет21,
	|Приоритет22,
	|Приоритет23,
	|Приоритет24,
	|Приоритет25,
	|Приоритет26,
	|Приоритет27,
	|Приоритет28,
	|Приоритет29,
	|Приоритет3,
	|Приоритет30,
	|Приоритет4,
	|Приоритет5,
	|Приоритет6,
	|Приоритет7,
	|Приоритет8,
	|Приоритет9";
	
	#КонецОбласти
	
	Возврат Новый Структура(поляСтруктуры);
	
КонецФункции

функция ПолучитьХарактеристикиЦен(подразделение, период, номенклатура)
	
	УстановитьПривилегированныйРежим(Истина);
	
	соХарактеристикиЦен = Новый Соответствие;
	
	результатЗапроса = ПолучитьРезультатЗапросаПоЦенообразованию(подразделение, период, номенклатура);
	
	выборка = результатЗапроса.Выбрать();
	Пока выборка.Следующий() Цикл
		
		стХарактеристикиЦен = ХарактеристикиЦен();
		
		ЗаполнитьЗначенияСвойств(стХарактеристикиЦен, выборка);
		
		соХарактеристикиЦен.Вставить(выборка.Номенклатура, стХарактеристикиЦен);

		
	КонецЦикла;
	
	Возврат соХарактеристикиЦен;
	
конецФункции

#КонецОбласти