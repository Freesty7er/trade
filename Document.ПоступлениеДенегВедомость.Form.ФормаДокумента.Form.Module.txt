
#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ОбработкаВыбора(выбранноеЗначение, источникВыбора)
	
	типВыбранногоЗначения = ТипЗнч(выбранноеЗначение);
	
	Если типВыбранногоЗначения = Тип("Структура") Тогда
		
		обработкаВыбораДолгов = Неопределено;
		Если выбранноеЗначение.Свойство("ОбработкаВыбораДолгов", обработкаВыбораДолгов) И обработкаВыбораДолгов Тогда
			
			Элементы.СтрокиДокумента.ТекущиеДанные.КредДокумент = выбранноеЗначение.КредДокумент;
			Элементы.СтрокиДокумента.ТекущиеДанные.Долг = выбранноеЗначение.Долг;
			Элементы.СтрокиДокумента.ТекущиеДанные.Сумма = выбранноеЗначение.Долг;
			
		КонецЕсли;
		
	КонецЕсли;
	
	
КонецПроцедуры

#КонецОбласти

#Область КомандыФормы

&НаКлиенте
Процедура ЗаполнитьДокумент(Команда)
	ЗаполнитьДокументСервер();
КонецПроцедуры

#КонецОбласти

#Область ОбработчиикиСобытий

&НаКлиенте
Процедура СтрокиДокументаКредДокументНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	стандартнаяОбработка = Ложь;
	
	ДатаДолгов = Объект.Дата;
	
	Если Объект.Ссылка.Пустая() Тогда
		ДатаДолгов = КонецДня(ДатаДолгов);
	КонецЕсли;
	
	структураПараметров = Новый Структура("Подразделение, ОкончаниеПериода, Контрагент, ДенежныйСчет", Объект.Подразделение, ДатаДолгов, Элементы.СтрокиДокумента.ТекущиеДанные.Контрагент, Объект.ДенежныйСчет);
	
	ОткрытьФорму("ОбщаяФорма.ФормаПодбораДолгов", СтруктураПараметров, ЭтаФорма,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

#КонецОбласти

#Область ДополнительныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьДокументСервер()
	
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	              |	ПоступлениеДенегВедомость.Дата КАК Дата,
	              |	ПоступлениеДенегВедомость.Маршрут КАК Маршрут
	              |ИЗ
	              |	Документ.ПоступлениеДенегВедомость КАК ПоступлениеДенегВедомость
	              |ГДЕ
	              |	ПоступлениеДенегВедомость.Маршрут = &Менеджер
	              |	И ПоступлениеДенегВедомость.Проведен = ИСТИНА
	              |ИТОГИ
	              |	МАКСИМУМ(Дата)
	              |ПО
	              |	Маршрут";
				  
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Менеджер", Объект.Маршрут);
	
	Результат = Запрос.Выполнить();
	Попытка
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ДатаПоследнейВедомости = КонецДня(Выборка.Дата);
	Исключение
		ДатаПоследнейВедомости = НачалоМесяца(ТекущаяДата()) - 1;
	КонецПопытки;

	
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПланируемоеПоступлениеДенег.Контрагент,
	|	ПланируемоеПоступлениеДенег.КредДокумент,
	|	ПланируемоеПоступлениеДенег.Сумма,
	|	ЕСТЬNULL(ВзаиморасчетыСПокупателямиОстатки.СуммаОстаток, 0) КАК Долг,
	|	ПланируемоеПоступлениеДенег.СуммаСкидки
	|ИЗ
	|	(ВЫБРАТЬ
	|		КпкКасса.Контрагент КАК Контрагент,
	|		КпкКасса.Сделка КАК КредДокумент,
	|		СУММА(ВЫБОР
	|				КОГДА КпкКасса.ЭтоРасход = ЛОЖЬ
	|					ТОГДА КпкКасса.СуммаДокумента
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК Сумма,
	|		СУММА(ВЫБОР
	|				КОГДА КпкКасса.ЭтоРасход = ЛОЖЬ
	|					ТОГДА 0
	|				ИНАЧЕ КпкКасса.СуммаДокумента
	|			КОНЕЦ) КАК СуммаСкидки
	|	ИЗ
	|		Документ.КпкКасса КАК КпкКасса
	|	ГДЕ
	|		КпкКасса.Агент.Менеджер = &Менеджер
	|		И КпкКасса.Дата >= &НачалоПериода
	|		И КпкКасса.Дата <= &ОкончаниеПериода
	|		И НЕ КпкКасса.ИспользуетсяРасшифровкаПлатежа
	|	
	|	СГРУППИРОВАТЬ ПО
	|		КпкКасса.Контрагент,
	|		КпкКасса.Сделка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		КпкКассаСтрокиДокумента.Контрагент,
	|		КпкКассаСтрокиДокумента.КредДокумент,
	|		КпкКассаСтрокиДокумента.Сумма,
	|		КпкКассаСтрокиДокумента.СуммаСкидки
	|	ИЗ
	|		Документ.КпкКасса.СтрокиДокумента КАК КпкКассаСтрокиДокумента
	|	ГДЕ
	|		КпкКассаСтрокиДокумента.Ссылка.ИспользуетсяРасшифровкаПлатежа
	|		И КпкКассаСтрокиДокумента.Ссылка.Менеджер = &Менеджер
	|		И КпкКассаСтрокиДокумента.Ссылка.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|		И НЕ КпкКассаСтрокиДокумента.Ссылка.ПометкаУдаления) КАК ПланируемоеПоступлениеДенег
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВзаиморасчетыСПокупателями.Остатки(&ОкончаниеПериода, ) КАК ВзаиморасчетыСПокупателямиОстатки
	|		ПО ПланируемоеПоступлениеДенег.КредДокумент = ВзаиморасчетыСПокупателямиОстатки.КредитныйДокумент");
	
	Запрос.УстановитьПараметр("НачалоПериода", КонецДня(ДатаПоследнейВедомости) + 1);
	Запрос.УстановитьПараметр("ОкончаниеПериода", КонецДня(Объект.Дата));
	
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Документ заполняется за период с "+СокрЛП(КонецДня(ДатаПоследнейВедомости) + 1)+" по " + СокрЛП(КонецДня(Объект.Дата)));
	
	
	Запрос.УстановитьПараметр("Менеджер", Объект.Маршрут);
	
	
	СтрокиДокумента = Объект.СтрокиДокумента;
	СтрокиДокумента.Очистить();
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.Прямой);
	
	Пока Выборка.Следующий() Цикл
		
		//Если Выборка.Группировка() = "КредДокумент" Тогда
			НоваяСтрока = СтрокиДокумента.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		//КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

#КонецОбласти
