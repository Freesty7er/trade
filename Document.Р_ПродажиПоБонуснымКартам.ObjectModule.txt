#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, Режим)
	
	тзПорогиБонусов = ПолучитьПорогиБонусов();
	
	начисленнаяСуммаБонусов = 0;
	начисленнаяСуммаБонусовРеферала = 0;

	Движения.Р_ПродажиПоБонуснымКартам.Записывать = Истина;
	Движения.Р_ПродажиПоБонуснымКартам.Очистить();
	Для каждого ТекСтрокаТовары Из Товары Цикл
		
		// Бонусы от продажи.
		Движение = Движения.Р_ПродажиПоБонуснымКартам.Добавить();
		
		//Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период						= Дата;
		
		Движение.ДисконтнаяКарта			= ДисконтнаяКарта;
		Движение.Номенклатура				= ТекСтрокаТовары.Номенклатура;
		Движение.ХарактеристикаНоменклатуры	= ТекСтрокаТовары.ХарактеристикаНоменклатуры;
		Движение.ИсточникБонусов			= Перечисления.ИсточникиБонусов.Продажа;
		
		Движение.Количество					= ТекСтрокаТовары.Количество;
		Движение.СуммаПродажи				= ТекСтрокаТовары.Сумма;
		Движение.СуммаБонусов				= ТекСтрокаТовары.СуммаБонусов;
		Движение.СуммаБонусовЗачислено		= ТекСтрокаТовары.СуммаБонусовЗачислено;
		Движение.СуммаБонусовСписано		= ТекСтрокаТовары.СуммаБонусовСписано;
		
		Движение.ККР						= ККР;
		Движение.НомерЧека					= НомерЧека;
		Движение.ВозвратТоваров				= ВозвратТоваров;
		Движение.ЕдиницаИзмерения			= ТекСтрокаТовары.ЕдиницаИзмерения;
		Движение.ПроцентБонусов				= ПроцентБонусаПоЧеку;
		
		Движение.Подразделение				= Подразделение;
		
		начисленнаяСуммаБонусов = начисленнаяСуммаБонусов + Движение.СуммаБонусов;
		
		// Бонусы от партнёрской программы.
		Если Не ДисконтнаяКарта.Реферал.Пустая() Тогда
			
			стБонусРеферала = ПолучитьБонусРеферала(тзПорогиБонусов, ТекСтрокаТовары.Сумма);
			СуммаБонусовРеферала = стБонусРеферала.Сумма;
			Если СуммаБонусовРеферала > 0 Тогда
			
				Движение = Движения.Р_ПродажиПоБонуснымКартам.Добавить();
				
				Движение.Период						= Дата;
				
				Движение.ДисконтнаяКарта			= ДисконтнаяКарта.Реферал;
				Движение.Номенклатура				= ТекСтрокаТовары.Номенклатура;
				Движение.ХарактеристикаНоменклатуры	= ТекСтрокаТовары.ХарактеристикаНоменклатуры;
				Движение.ИсточникБонусов			= Перечисления.ИсточникиБонусов.ПартнёрскаяПрограмма;
				
				Движение.Количество					= ТекСтрокаТовары.Количество;
				Движение.СуммаПродажи				= ТекСтрокаТовары.Сумма;
				Движение.СуммаБонусов				= СуммаБонусовРеферала;
				Движение.СуммаБонусовЗачислено		= СуммаБонусовРеферала;
				Движение.СуммаБонусовСписано		= 0;
				
				Движение.ККР						= ККР;
				Движение.НомерЧека					= НомерЧека;
				Движение.ВозвратТоваров				= ВозвратТоваров;
				Движение.ЕдиницаИзмерения			= ТекСтрокаТовары.ЕдиницаИзмерения;
				Движение.ПроцентБонусов				= стБонусРеферала.Процент;
				
				Движение.Подразделение				= Подразделение;
				Движение.ДисконтнаяКартаРеферала	= ДисконтнаяКарта;
				
				начисленнаяСуммаБонусовРеферала = начисленнаяСуммаБонусовРеферала + Движение.СуммаБонусов;
			
			КонецЕсли; 
			
		КонецЕсли; 
		
	КонецЦикла;
	
	// Регистрация нового задания для рассылки SMS.
	Если начисленнаяСуммаБонусов > 0 или начисленнаяСуммаБонусовРеферала > 0 Тогда
		
		блокировкаДанных = Новый БлокировкаДанных;
		
		элементБлокировки = блокировкаДанных.Добавить("РегистрСведений.СписокРассылкиSMS");
		элементБлокировки.УстановитьЗначение("Документ", Ссылка);
		
		блокировкаДанных.Заблокировать();
		
		запрос = Новый Запрос;
		
		#Область ТекстЗапроса
		запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	СписокРассылкиSMS.ФизическоеЛицо
		|ИЗ
		|	РегистрСведений.СписокРассылкиSMS КАК СписокРассылкиSMS
		|ГДЕ
		|	СписокРассылкиSMS.Документ = &Документ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Р_ПродажиПоБонуснымКартамОбороты.ДисконтнаяКарта,
		|	Р_ПродажиПоБонуснымКартамОбороты.СуммаБонусовОборот КАК СуммаБонусов
		|ИЗ
		|	РегистрНакопления.Р_ПродажиПоБонуснымКартам.Обороты(, &КонецПериода, , ДисконтнаяКарта В (&ДисконтнаяКарта, &ДисконтнаяКартаРеферала)) КАК Р_ПродажиПоБонуснымКартамОбороты";
		#КонецОбласти
		
		запрос.УстановитьПараметр("Документ", Ссылка);
		запрос.УстановитьПараметр("КонецПериода", Новый Граница(МоментВремени(), ВидГраницы.Исключая));
		запрос.УстановитьПараметр("ДисконтнаяКарта", ДисконтнаяКарта);
		запрос.УстановитьПараметр("ДисконтнаяКартаРеферала", ДисконтнаяКарта.Реферал);
		
		результаты = запрос.ВыполнитьПакет();
		
		накопленныеБонусы = результаты[1].Выгрузить();
		
		Если результаты[0].Пустой() Тогда
			
			ДобавитьВСписокРассылкиSMS(начисленнаяСуммаБонусов, ДисконтнаяКарта, накопленныеБонусы);
			ДобавитьВСписокРассылкиSMS(начисленнаяСуммаБонусовРеферала, ДисконтнаяКарта.Реферал, накопленныеБонусы);
			
		КонецЕсли; 
	
	КонецЕсли; 
	
	// регистрация изменений для всех узлов ... "ПланыОбмена.Р_POS"
	Выборка = ПланыОбмена.Р_POS.Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.Ссылка = ПланыОбмена.Р_POS.ЭтотУзел() Тогда
			Продолжить;
		КонецЕсли;
		
		ПланыОбмена.ЗарегистрироватьИзменения(Выборка.Ссылка, Ссылка);
		
	КонецЦикла;


КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если Подразделение.Пустая() Тогда
		Подразделение = ККР.ОбособленноеПодразделение;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(объектКопирования)
	
	ЗаполнениеОбъектовСервер.ЗаполнитьДанныеСкопированногоДокумента(ЭтотОбъект, объектКопирования);
	
КонецПроцедуры

#КонецОбласти 

#Область ДополнительныеПроцедурыИФункции

// Возвращает данные бонуса реферала в зависимости от суммы продажи.
//
// Параметры:
//  тзПорогиБонусов  - ТаблицаЗначений - Таблица порогов бонусов, полученная функцией
//                 ПолучитьПорогиБонусов().
//  Сумма  - Число - Сумма продажи, от которой будут расчитываться параметры бонуса.
//
// Возвращаемое значение:
//   Структура   - Данные бонуса. Содержит следующие свойства:
//                 Сумма  - Число - Сумма расчитанного бонуса.
//                 Процент  - Число - Процент, по которому рассчитывался бонус.
//
Функция ПолучитьБонусРеферала(тзПорогиБонусов, Сумма)
	
	ЗначениеПорога = 0;
	
	Для каждого СтрокаПорогиБонусов Из тзПорогиБонусов Цикл
	
		Если Сумма >= СтрокаПорогиБонусов.НижняяГраница Тогда
			ЗначениеПорога = СтрокаПорогиБонусов.ЗначениеПорога;
		Иначе
			Прервать;
		КонецЕсли; 
	
	КонецЦикла; 
	
	стБонусРеферала = Новый Структура;
	стБонусРеферала.Вставить("Сумма", Сумма / 100 * ЗначениеПорога);
	стБонусРеферала.Вставить("Процент", ЗначениеПорога);
	
	Возврат стБонусРеферала;

КонецФункции // ПолучитьБонусРеферала()

// Возвращает набор порогов бонусов партнёров, действующих на дату документа.
//
// Возвращаемое значение:
//   ТаблицаЗначений   - пороги бонусов. Содержит следующие колонки:
//                 НижняяГраница  - Число - Нижняя граница расчёта бонуса.
//                 ЗначениеПорога  - Число - Процент, по которому рассчитывается бонус
//                 		по текущей границе.
//
Функция ПолучитьПорогиБонусов()

	Запрос = Новый Запрос;
	
	#Область ТекстЗапроса
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Р_ПорогиНачисленияБонусовПартнёров.НижняяГраница КАК НижняяГраница,
	|	Р_ПорогиНачисленияБонусовПартнёров.ЗначениеПорога
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(Р_ПорогиНачисленияБонусовПартнёров.НачалоДействия) КАК НачалоДействия
	|	ИЗ
	|		РегистрСведений.Р_ПорогиНачисленияБонусовПартнёров КАК Р_ПорогиНачисленияБонусовПартнёров
	|	ГДЕ
	|		Р_ПорогиНачисленияБонусовПартнёров.НачалоДействия <= &Период) КАК МаксимальныйПериод
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Р_ПорогиНачисленияБонусовПартнёров КАК Р_ПорогиНачисленияБонусовПартнёров
	|		ПО МаксимальныйПериод.НачалоДействия = Р_ПорогиНачисленияБонусовПартнёров.НачалоДействия
	|
	|УПОРЯДОЧИТЬ ПО
	|	НижняяГраница";
	#КонецОбласти
	
	Запрос.УстановитьПараметр("Период", Дата);
	
	ЗначениеПорога = 0;
	
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции // ПолучитьПорогиБонусов()

// Добавляет новое задание в список рассылки SMS.
//
// Параметры:
//  суммаБонусов  - Число - Размер бонусов, насчитанных по текущему документу.
//  информационнаяКарта  - СправочникСсылка.ИнформационныеКарты - Бонусная карта, на которую
//                 начислены бонусы.
//  накопленныеБонусы  - ТаблицаЗначений - Таблица с накопленными на момент документа бонусами
//                 по выбранной в документе бонусной карте и её рефералу.
//
Процедура ДобавитьВСписокРассылкиSMS(суммаБонусов, информационнаяКарта, накопленныеБонусы)
	
	Если суммаБонусов > 0 И информационнаяКарта.СМС_Информирование Тогда
		
		// проверим номер телефона
		номерТелефона = Прав("XXXXXXXXXX" + СокрЛП(информационнаяКарта.ВладелецКарты.Телефон), 10);
		
		Если Лев(номерТелефона, 1) = "0" Тогда
			
			общаяСуммаБонусов = суммаБонусов;
			строкаНакопленныеБонусы = накопленныеБонусы.Найти(информационнаяКарта, "ДисконтнаяКарта");
			Если строкаНакопленныеБонусы <> Неопределено Тогда
				общаяСуммаБонусов = общаяСуммаБонусов + строкаНакопленныеБонусы.СуммаБонусов;
			КонецЕсли; 
			
			менеджерЗаписи = РегистрыСведений.СписокРассылкиSMS.СоздатьМенеджерЗаписи();
			менеджерЗаписи.Заполнить(Неопределено);
			
			менеджерЗаписи.Документ = Ссылка;
			менеджерЗаписи.ФизическоеЛицо = информационнаяКарта.ВладелецКарты;
			
			шаблонСообщения = НСтр("ru = 'Вам начислены бонусы %1, общее кол-во бонусов %2.'");	
			менеджерЗаписи.ТекстСообщения = СтрШаблон(шаблонСообщения, суммаБонусов, общаяСуммаБонусов);
			
			менеджерЗаписи.Записать();
			
		КонецЕсли;
		
	КонецЕсли; 

КонецПроцедуры // ДобавитьВСписокРассылкиSMS()

#КонецОбласти
