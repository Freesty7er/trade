&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ДатаНачала = НачалоМесяца(ТекущаяДата());
	ДатаОкончания = КонецМесяца(ТекущаяДата());
КонецПроцедуры

&НаКлиенте
//Проверка заполнения формы
Функция ПроверкаФормы()
	ВсеХорошо = Истина;
	
	Если ДатаНачала>ДатаОкончания Тогда
		ВсеХорошо = Ложь;
	КонецЕсли; 
	
Возврат ВсеХорошо;
КонецФункции // ВсеХорошо()
 
&НаСервере
Процедура СформироватьОтчет()
	ТаблицаЛогов = ПолучитьТаблицуЛогов();
	Если ТаблицаЛогов.Количество() = 0 Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Для заданных настроек данные отсутсвуют!!!";
		Сообщение.Сообщить(); 
	Иначе
	
		Макет = Отчеты.кпкЖурналОбмена.ПолучитьМакет("Макет");
		
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		ОбластьДанные = Макет.ПолучитьОбласть("Данные");
		Результат.Очистить();
		
		Результат.Вывести(ОбластьШапка);
		
		Красный = Новый Цвет(240,70,70);
		Коричневый = Новый Цвет(150,50,0);
		Синий = Новый Цвет(0,0,180);
		Зеленый = Новый Цвет(0,150,0);
		
		НомСтр = 3;
		
		Для каждого СтрокаЛога Из ТаблицаЛогов Цикл
					
			ОбластьДанные.Параметры.Заполнить(СтрокаЛога);
			Результат.Вывести(ОбластьДанные);
				
			Если СтрокаЛога[0] = "Важное" Тогда
				Значение = Результат.Область("R"+НомСтр+"C1");
				Значение.ЦветТекста = Красный;
			ИначеЕсли СтрокаЛога[0] = "Внимание" Тогда
				Значение = Результат.Область("R"+НомСтр+"C1");
				Значение.ЦветТекста = Коричневый;
	        ИначеЕсли СтрокаЛога[0] = "Информация" Тогда
				Значение = Результат.Область("R"+НомСтр+"C1");
				Значение.ЦветТекста = Зеленый;

			КонецЕсли;
			
			НомСтр = НомСтр + 1;		
			
		КонецЦикла;
	
	КонецЕсли; 
	
КонецПроцедуры // СформироватьОтчет()
 
&НаСервере
Функция ПолучитьТаблицуЛогов()
	
        КСТ = Новый КвалификаторыСтроки(50);
        КДД = Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя);
        КСС = Новый КвалификаторыСтроки(0);
        КСП = Новый ОписаниеТипов("СправочникСсылка.Пользователи");
        КСА = Новый ОписаниеТипов("СправочникСсылка.Агенты");
        
        ТаблицаЛогов = Новый ТаблицаЗначений;
        ТаблицаЛогов.Колонки.Добавить("ТипСобытия", Новый ОписаниеТипов("Строка", , , , КСТ, ));
		ТаблицаЛогов.Колонки.Добавить("Дата", Новый ОписаниеТипов("Дата", , , КДД, , ));
        ТаблицаЛогов.Колонки.Добавить("Событие", Новый ОписаниеТипов("Строка", , , , КСС, ));
        ТаблицаЛогов.Колонки.Добавить("Пользователь", Новый ОписаниеТипов(КСП, , , , , ));
        ТаблицаЛогов.Колонки.Добавить("Агент", Новый ОписаниеТипов(КСА, , , , , ));
        ТаблицаЛогов.Колонки.Добавить("СсылкаНаОбъект");
	
	
	    ЕстьВыборПользователя = ЛОЖЬ;
		ЕстьВыборАгента = Ложь;
		
		Если ЗначениеЗаполнено(Пользователь) Тогда
			ЕстьВыборПользователя = Истина;	
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Агент) Тогда
			ЕстьВыборАгента = Истина;	
		КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СохраненныеНастройки.Пользователь
		|ИЗ
		|	РегистрСведений.кпкСохраненныеНастройки КАК СохраненныеНастройки
		|ГДЕ
		|	СохраненныеНастройки.ИмяОбъекта = &ИмяОбъекта" +
		?(ЕстьВыборПользователя, " 
		|И СохраненныеНастройки.Пользователь = &Пользователь", "") +
		" 
		|И
		|	СохраненныеНастройки.НаименованиеНастройки МЕЖДУ &ДатаНачала И &ДатаОкончания
		|
		|СГРУППИРОВАТЬ ПО
		|	СохраненныеНастройки.Пользователь";
		
		Запрос.УстановитьПараметр("ИмяОбъекта", "кпкОбменДанными");
		Если ЕстьВыборПользователя Тогда
			Запрос.УстановитьПараметр("Пользователь", Пользователь);
		КонецЕсли;
		Запрос.УстановитьПараметр("ДатаНачала", Строка(Формат(ДатаНачала, "ДФ=yyyy.MM.dd")));
		Запрос.УстановитьПараметр("ДатаОкончания", Строка(Формат(ДатаОкончания, "ДФ=yyyy.MM.dd")));
		
		СписокПользователей = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Пользователь");
	
	Для Каждого ТекПользователь Из СписокПользователей Цикл
		
		ЗапросМенеджеров = Новый Запрос;
		ЗапросМенеджеров.Текст = 
		"ВЫБРАТЬ
		|	СохраненныеНастройки.СохраненнаяНастройка
		|ИЗ
		|	РегистрСведений.кпкСохраненныеНастройки КАК СохраненныеНастройки
		|ГДЕ
		|	СохраненныеНастройки.ИмяОбъекта = &ИмяОбъекта
		|	И СохраненныеНастройки.НаименованиеНастройки МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И СохраненныеНастройки.Пользователь = &Пользователь
		|	И (НЕ СохраненныеНастройки.Пользователь ЕСТЬ NULL )";
		ЗапросМенеджеров.УстановитьПараметр("ИмяОбъекта", "кпкОбменДанными");
		ЗапросМенеджеров.УстановитьПараметр("ДатаНачала", Строка(Формат(ДатаНачала, "ДФ=yyyy.MM.dd")));
		ЗапросМенеджеров.УстановитьПараметр("ДатаОкончания", Строка(Формат(ДатаОкончания, "ДФ=yyyy.MM.dd")));
        ЗапросМенеджеров.УстановитьПараметр("Пользователь", ТекПользователь);
		ЛогОбмена = ЗапросМенеджеров.Выполнить().Выбрать();
		
		Пока ЛогОбмена.Следующий() Цикл
			
			ТекТаблица = ЛогОбмена.СохраненнаяНастройка.Получить();
			Если ТипЗнч(ТекТаблица) = Тип("ТаблицаЗначений") Тогда
				Для Каждого СтрокаТекТаблица Из ТекТаблица цикл
					СтрокаТаблицаЛогов = ТаблицаЛогов.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаТаблицаЛогов,СтрокаТекТаблица);
				КонецЦикла;
			КонецЕсли;
			
		КонецЦикла;
	КонецЦикла;
	
	
	Если ЕстьВыборАгента Тогда
		
		Сч = 0;
		Пока Сч < ТаблицаЛогов.Количество() Цикл
			СтрокаТабицы = ТаблицаЛогов.Получить(Сч);
			Если СтрокаТабицы[4] <> Агент ИЛИ ПустаяСтрока(СтрокаТабицы[4]) Тогда
				ТаблицаЛогов.Удалить(СтрокаТабицы);
			Иначе 
				Сч = Сч + 1;
			КонецЕсли;
		КонецЦикла;
	
	КонецЕсли; 
	
	Возврат ТаблицаЛогов;
	
КонецФункции
 
&НаКлиенте
Процедура Сформировать(Команда)
	Если ПроверкаФормы() Тогда
		СформироватьОтчет();
	Иначе Сообщение = Новый СообщениеПользователю;
		  Сообщение.Текст = "Проверьте правильность заполнения формы!!!";
		  Сообщение.Сообщить(); 
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаПриИзменении(Элемент)
	ДатаНачала = ДатаНачала;
КонецПроцедуры

&НаКлиенте
Процедура ДатаОкончанияПриИзменении(Элемент)
	ДатаОкончания = ДатаОкончания;
КонецПроцедуры










