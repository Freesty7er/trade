#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(отказ)
	
	Элементы.РолиПоказатьТолькоВыбранныеРоли.Пометка = ПоказатьТолькоВыбранныеРоли;
	Элементы.РолиПоказатьПодсистемыРолей.Пометка     = ПоказатьПодсистемыРолей;
	
	СкрытьРольПолныеПрава = Ложь;
	ОбновитьДеревоРолей();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(текущийОбъект)
	
	записатьТекущийОбъект = Ложь;
	
	ролиУдалить = Новый СписокЗначений;
	
	Для Каждого роль ИЗ ТекущийОбъект.Роли Цикл
		
		Если Метаданные.Роли.Найти(роль.Роль) = Неопределено Тогда
			ролиУдалить.Добавить(роль.Роль);
		КонецЕсли;
		
	КонецЦикла;
	
	Если ролиУдалить.Количество() > 0 Тогда
		
		записатьТекущийОбъект = Истина;
		
		Для Каждого рольУдалить ИЗ ролиУдалить Цикл
			
			ролиНайтиСтроки = ТекущийОбъект.Роли.НайтиСтроки(Новый Структура("Роль",рольУдалить.Значение));
			Для Каждого рольНайтиСтроки ИЗ ролиНайтиСтроки Цикл
				
				ТекущийОбъект.Роли.Удалить(рольНайтиСтроки);
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если записатьТекущийОбъект Тогда
		ТекущийОбъект.Записать();
	КонецЕсли;
	
	ПользователиИнфБазыРоли.Загрузить(ТекущийОбъект.Роли.Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(отказ, текущийОбъект, параметрыЗаписи)
	текущийОбъект.Роли.Загрузить(ПользователиИнфБазыРоли.Выгрузить());
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(текущийОбъект, параметрыЗаписи)
	
	запросПользователи = Новый Запрос;
	
	#Область ТекстЗапроса
	
	запросПользователи.Текст = 
	"ВЫБРАТЬ
	|	Пользователи.Ссылка
	|ИЗ
	|	Справочник.Пользователи КАК Пользователи
	|ГДЕ
	|	Пользователи.ПрофильПользователя = &ПрофильПользователя
	|	И НЕ Пользователи.ПометкаУдаления";
	
	#КонецОбласти
	
	запросПользователи.УстановитьПараметр("ПрофильПользователя", текущийОбъект.Ссылка); 
	
	результатПользователи = запросПользователи.Выполнить();
	Если Не результатПользователи.Пустой() Тогда
		
		УстановитьПривилегированныйРежим(Истина);
		
		выборкаПользователи = результатПользователи.Выбрать();
		Пока выборкаПользователи.Следующий() Цикл
			
			
			пользовательИБ = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(выборкаПользователи.Ссылка.ИдентификаторПользователяИБ);
			
			Если пользовательИБ = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			пользовательИБРоли = ПользовательИБ.Роли;
			пользовательИБРоли.Очистить();
			
			Для Каждого роль ИЗ пользователиИнфБазыРоли Цикл
				пользовательИБРоли.Добавить(Метаданные.Роли.Найти(роль.Роль));
			КонецЦикла;
			
			пользовательИБ.Записать();
			
			
			новыйЗаписьПользователиОповещения = РегистрыСведений.ПользователиОповещения.СоздатьМенеджерЗаписи();
			
			новыйЗаписьПользователиОповещения.Идентификатор			 = Новый УникальныйИдентификатор;
			новыйЗаписьПользователиОповещения.Пользователь			 = выборкаПользователи.Ссылка;
			новыйЗаписьПользователиОповещения.ЗавершитьРаботуСистемы = Истина;
			новыйЗаписьПользователиОповещения.КоличествоЗапросов	 = 20;
			новыйЗаписьПользователиОповещения.ТекстСообщения		 = "Изменен состав ролей";
			
			новыйЗаписьПользователиОповещения.Записать();
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область КомандыФормы

&НаКлиенте
Процедура РолиВыбратьВсе(команда)
	ОбновитьСоставРолей(Неопределено, Истина);
КонецПроцедуры

&НаКлиенте
Процедура РолиУбратьВсе(команда)
	ОбновитьСоставРолей(Неопределено, Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьТолькоВыбранныеРоли(команда)
		
	ПоказатьТолькоВыбранныеРоли = Не ПоказатьТолькоВыбранныеРоли;
	Элементы.РолиПоказатьТолькоВыбранныеРоли.Пометка = ПоказатьТолькоВыбранныеРоли;
	
	ОбновитьДеревоРолей();
	РазвернутьПодсистемыРолей();

КонецПроцедуры

&НаКлиенте
Процедура РолиПоказатьПодсистемыРолей(команда)
	
	ПоказатьПодсистемыРолей = Не ПоказатьПодсистемыРолей;
	Элементы.РолиПоказатьПодсистемыРолей.Пометка = ПоказатьПодсистемыРолей;
	
	ОбновитьДеревоРолей();
	РазвернутьПодсистемыРолей();


КонецПроцедуры

#КонецОбласти

#Область ДополнительныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьДеревоРолей()
	
	// Запоминание текущей строки
	ТекущаяПодсистема = "";
	ТекущаяРоль       = "";
	
	Если Элементы.Роли.ТекущаяСтрока <> Неопределено Тогда
		ТекущиеДанные = Роли.НайтиПоИдентификатору(Элементы.Роли.ТекущаяСтрока);
		Если ТекущиеДанные.ЭтоРоль Тогда
			ТекущаяПодсистема = ?(ТекущиеДанные.ПолучитьРодителя() = Неопределено, "", ТекущиеДанные.ПолучитьРодителя().Имя);
			ТекущаяРоль       = ТекущиеДанные.Имя;
		Иначе
			ТекущаяПодсистема = ТекущиеДанные.Имя;
			ТекущаяРоль       = "";
		КонецЕсли;
	КонецЕсли;
	
	ДеревоРолей = ПользователиСерверПовтИсп.ДеревоРолей(ПоказатьПодсистемыРолей).Скопировать();
	ДеревоРолей.Колонки.Добавить("Пометка",       Новый ОписаниеТипов("Булево"));
	ДеревоРолей.Колонки.Добавить("НомерКартинки", Новый ОписаниеТипов("Число"));
	ПодготовитьДеревоРолей(ДеревоРолей.Строки, СкрытьРольПолныеПрава, ПоказатьТолькоВыбранныеРоли);
	
	ЗначениеВРеквизитФормы(ДеревоРолей, "Роли");
	
	Элементы.Роли.Отображение = ?(ДеревоРолей.Строки.Найти(Ложь, "ЭтоРоль") = Неопределено, ОтображениеТаблицы.Список, ОтображениеТаблицы.Дерево);
	
	// Восстановление текущей строки
	НайденныеСтроки = ДеревоРолей.Строки.НайтиСтроки(Новый Структура("ЭтоРоль, Имя", Ложь, ТекущаяПодсистема), Истина);
	Если НайденныеСтроки.Количество() <> 0 Тогда
		ОписаниеПодсистемы = НайденныеСтроки[0];
		ИндексПодсистемы = ?(ОписаниеПодсистемы.Родитель = Неопределено, ДеревоРолей.Строки, ОписаниеПодсистемы.Родитель.Строки).Индекс(ОписаниеПодсистемы);
		СтрокаПодсистемы = ДанныеФормыКоллекцияЭлементовДерева(Роли, ОписаниеПодсистемы).Получить(ИндексПодсистемы);
		Если ЗначениеЗаполнено(ТекущаяРоль) Тогда
			НайденныеСтроки = ОписаниеПодсистемы.Строки.НайтиСтроки(Новый Структура("ЭтоРоль, Имя", Истина, ТекущаяРоль));
			Если НайденныеСтроки.Количество() <> 0 Тогда
				ОписаниеРоли = НайденныеСтроки[0];
				Элементы.Роли.ТекущаяСтрока = СтрокаПодсистемы.ПолучитьЭлементы().Получить(ОписаниеПодсистемы.Строки.Индекс(ОписаниеРоли)).ПолучитьИдентификатор();
			Иначе
				Элементы.Роли.ТекущаяСтрока = СтрокаПодсистемы.ПолучитьИдентификатор();
			КонецЕсли;
		Иначе
			Элементы.Роли.ТекущаяСтрока = СтрокаПодсистемы.ПолучитьИдентификатор();
		КонецЕсли;
	Иначе
		НайденныеСтроки = ДеревоРолей.Строки.НайтиСтроки(Новый Структура("ЭтоРоль, Имя", Истина, ТекущаяРоль), Истина);
		Если НайденныеСтроки.Количество() <> 0 Тогда
			ОписаниеРоли = НайденныеСтроки[0];
			ИндексРоли = ?(ОписаниеРоли.Родитель = Неопределено, ДеревоРолей.Строки, ОписаниеРоли.Родитель.Строки).Индекс(ОписаниеРоли);
			СтрокаРоли = ДанныеФормыКоллекцияЭлементовДерева(Роли, ОписаниеРоли).Получить(ИндексРоли);
			Элементы.Роли.ТекущаяСтрока = СтрокаРоли.ПолучитьИдентификатор();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПодготовитьДеревоРолей(Знач Коллекция, Знач СкрытьРольПолныеПрава, Знач ПоказатьТолькоВыбранныеРоли)
	
	Индекс = Коллекция.Количество()-1;
	
	Пока Индекс >= 0 Цикл
		Строка = Коллекция[Индекс];
		
		ПодготовитьДеревоРолей(Строка.Строки, СкрытьРольПолныеПрава, ПоказатьТолькоВыбранныеРоли);
		
		Если Строка.ЭтоРоль Тогда
			Если СкрытьРольПолныеПрава И ВРег(Строка.Имя) = ВРег("ПолныеПрава") Тогда
				Коллекция.Удалить(Индекс);
			Иначе
				Строка.НомерКартинки = 6;
				Строка.Пометка = КоллекцияРолей().НайтиСтроки(Новый Структура("Роль", Строка.Имя)).Количество() > 0;
				Если ПоказатьТолькоВыбранныеРоли И НЕ Строка.Пометка Тогда
					Коллекция.Удалить(Индекс);
				КонецЕсли;
			КонецЕсли;
		Иначе
			Если Строка.Строки.Количество() = 0 Тогда
				Коллекция.Удалить(Индекс);
			Иначе
				Строка.НомерКартинки = 5;
				Строка.Пометка = Строка.Строки.НайтиСтроки(Новый Структура("Пометка", Ложь)).Количество() = 0;
			КонецЕсли;
		КонецЕсли;
		
		Индекс = Индекс-1;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ДанныеФормыКоллекцияЭлементовДерева(Знач ДанныеФормыДерево, Знач СтрокаДереваЗначений)
	
	Если СтрокаДереваЗначений.Родитель = Неопределено Тогда
		ДанныеФормыКоллекцияЭлементовДерева = ДанныеФормыДерево.ПолучитьЭлементы();
	Иначе
		ИндексРодителя = ?(СтрокаДереваЗначений.Родитель.Родитель = Неопределено, СтрокаДереваЗначений.Владелец().Строки, СтрокаДереваЗначений.Родитель.Родитель.Строки).Индекс(СтрокаДереваЗначений.Родитель);
		ДанныеФормыКоллекцияЭлементовДерева = ДанныеФормыКоллекцияЭлементовДерева(ДанныеФормыДерево, СтрокаДереваЗначений.Родитель).Получить(ИндексРодителя).ПолучитьЭлементы();
	КонецЕсли;
	
	Возврат ДанныеФормыКоллекцияЭлементовДерева;
	
КонецФункции

&НаСервере
Функция КоллекцияРолей(ТаблицаЗначенийДляЧтения = Ложь)
	
	Если ТаблицаЗначенийДляЧтения Тогда
		Возврат РеквизитФормыВЗначение("ПользователиИнфБазыРоли");
	КонецЕсли;
	
	Возврат ПользователиИнфБазыРоли;
	
КонецФункции

&НаКлиенте
Процедура РолиПометкаПриИзменении(Элемент)
	
	Если Элементы.Роли.ТекущиеДанные <> Неопределено Тогда
		ОбновитьСоставРолей(Элементы.Роли.ТекущаяСтрока, Элементы.Роли.ТекущиеДанные.Пометка);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСоставРолей(ИндентификаторСтроки, Добавить);
	
	Если ИндентификаторСтроки = Неопределено Тогда
		// Обработка всех
		КоллекцияРолей = КоллекцияРолей();
		КоллекцияРолей.Очистить();
		Если Добавить Тогда
			ВсеРоли = ПользователиСерверПовтИсп.ВсеРоли();
			Для каждого ОписаниеРоли Из ВсеРоли Цикл
				Если ОписаниеРоли.Имя <> "ПолныеПрава" Тогда
					КоллекцияРолей.Добавить().Роль = ОписаниеРоли.Имя;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		Если ПоказатьТолькоВыбранныеРоли Тогда
			Если КоллекцияРолей.Количество() > 0 Тогда
				ОбновитьДеревоРолей();
			Иначе
				Роли.ПолучитьЭлементы().Очистить();
			КонецЕсли;
			// Возврат
			Возврат;
			// Возврат
		КонецЕсли;
		
	Иначе
		ТекущиеДанные = Роли.НайтиПоИдентификатору(ИндентификаторСтроки);
		Если ТекущиеДанные.ЭтоРоль Тогда
			ДобавитьУдалитьРоль(ТекущиеДанные.Имя, Добавить);
		Иначе
			ДобавитьУдалитьРолиПодсистемы(ТекущиеДанные.ПолучитьЭлементы(), Добавить);
		КонецЕсли;
	КонецЕсли;
	
	ОбновитьПометкуВыбранныхРолей(Роли.ПолучитьЭлементы());
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьУдалитьРоль(Знач Роль, Знач Добавить)
	
	НайденныеРоли = КоллекцияРолей().НайтиСтроки(Новый Структура("Роль", Роль));
	
	Если Добавить Тогда
		Если НайденныеРоли.Количество() = 0 Тогда
			КоллекцияРолей().Добавить().Роль = Роль;
		КонецЕсли;
	Иначе
		Если НайденныеРоли.Количество() > 0 Тогда
			КоллекцияРолей().Удалить(НайденныеРоли[0]);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьУдалитьРолиПодсистемы(Знач Коллекция, Знач Добавить)
	
	Для каждого Строка Из Коллекция Цикл
		Если Строка.ЭтоРоль Тогда
			ДобавитьУдалитьРоль(Строка.Имя, Добавить);
		Иначе
			ДобавитьУдалитьРолиПодсистемы(Строка.ПолучитьЭлементы(), Добавить);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры


&НаСервере
Процедура ОбновитьПометкуВыбранныхРолей(Знач Коллекция)
	
	Индекс = Коллекция.Количество()-1;
	
	Пока Индекс >= 0 Цикл
		Строка = Коллекция[Индекс];
		
		Если Строка.ЭтоРоль Тогда
			Строка.Пометка = КоллекцияРолей().НайтиСтроки(Новый Структура("Роль", Строка.Имя)).Количество() > 0;
			Если ПоказатьТолькоВыбранныеРоли И НЕ Строка.Пометка Тогда
				Коллекция.Удалить(Индекс);
			КонецЕсли;
		Иначе
			ОбновитьПометкуВыбранныхРолей(Строка.ПолучитьЭлементы());
			Если Строка.ПолучитьЭлементы().Количество() = 0 Тогда
				Коллекция.Удалить(Индекс);
			Иначе
				Строка.Пометка = Истина;
				Для каждого Элемент Из Строка.ПолучитьЭлементы() Цикл
					Если НЕ Элемент.Пометка Тогда
						Строка.Пометка = Ложь;
						Прервать;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
		Индекс = Индекс-1;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьПодсистемыРолей(Коллекция = Неопределено);
	
	Если Коллекция = Неопределено Тогда
		Коллекция = Роли.ПолучитьЭлементы();
	КонецЕсли;
	
	// Развернуть все
	Для каждого Строка ИЗ Коллекция Цикл
		Элементы.Роли.Развернуть(Строка.ПолучитьИдентификатор());
		Если НЕ Строка.ЭтоРоль Тогда
			РазвернутьПодсистемыРолей(Строка.ПолучитьЭлементы());
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти








