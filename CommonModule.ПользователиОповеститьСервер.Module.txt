
Процедура ПриНачалеРаботыСистемы() Экспорт
	
	ТекущийПользовательОповещенияОбновитьСостояние();
	
КонецПроцедуры

Функция ТекущийПользовательПоказатьПредупреждениеЗавершитьРаботуСистемыПараметры() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьПрофилиПользователей") Тогда
		Возврат Неопределено
	КонецЕсли;
	
	параметры = Неопределено;
	
	запросОпопвещения = Новый Запрос;
	
	#Область ТекстЗапроса
	
	запросОпопвещения.Текст = "
	
	|ВЫБРАТЬ
	|	Идентификатор
	|	,Пользователь
	|	,ЗавершитьРаботуСистемы
	|	,Выполнено
	|	,КоличествоЗапросов
	|	,КоличествоЗапросовВыполнено
	|	,ТекстСообщения
	|ИЗ
	|	РегистрСведений.ПользователиОповещения
	|ГДЕ
	|	Пользователь = &Пользователь
	|	И ЗавершитьРаботуСистемы
	|	И НЕ Выполнено
	|";
	
	#КонецОбласти 

	
	запросОпопвещения.УстановитьПараметр("Пользователь", Пользователи.ТекущийПользователь());
	
	результатОповещения = запросОпопвещения.Выполнить();
	Если Не результатОповещения.Пустой() Тогда
		
		завершитьРаботуСистемы = Ложь;
		текстПредупреждения = "В систему внесены изменения. Для принятия изменений треубется перезапуск системы." + Символы.ПС + Символы.ПС + "Изменения:";
		
		записи = результатОповещения.Выгрузить();
		Для Каждого запись ИЗ записи Цикл
			
			запись.КоличествоЗапросовВыполнено = запись.КоличествоЗапросовВыполнено + 1;
			Если запись.КоличествоЗапросовВыполнено >= запись.КоличествоЗапросов Тогда
				
				запись.Выполнено = Истина;
				завершитьРаботуСистемы = Истина;
				
				наборЗаписей = РегистрыСведений.ПользователиОповещения.СоздатьНаборЗаписей();
				наборЗаписей.Отбор.Идентификатор.Установить(запись.Идентификатор);
				наборЗаписей.Записать();
				
				менеджерЗаписи								 = РегистрыСведений.ПользователиОповещения.СоздатьМенеджерЗаписи();
				менеджерЗаписи.Идентификатор				 = запись.Идентификатор;
				менеджерЗаписи.Пользователь					 = запись.Пользователь;
				менеджерЗаписи.ЗавершитьРаботуСистемы		 = запись.ЗавершитьРаботуСистемы;
				менеджерЗаписи.Выполнено					 = запись.Выполнено;
				менеджерЗаписи.КоличествоЗапросов			 = запись.КоличествоЗапросов;
				менеджерЗаписи.КоличествоЗапросовВыполнено	 = запись.КоличествоЗапросовВыполнено;
				менеджерЗаписи.ТекстСообщения				 = запись.ТекстСообщения;
				менеджерЗаписи.Записать();
				
			Иначе
				
				наборЗаписей = РегистрыСведений.ПользователиОповещения.СоздатьНаборЗаписей();
				наборЗаписей.Отбор.Идентификатор.Установить(запись.Идентификатор);
				наборЗаписей.Прочитать();
				
				наборЗаписейЗапись = НаборЗаписей.Получить(0);
				
				наборЗаписейЗапись.КоличествоЗапросовВыполнено = запись.КоличествоЗапросовВыполнено;
				
				наборЗаписей.Записать();
				
			КонецЕсли;
			
			текстПредупреждения = текстПредупреждения + Символы.ПС + Символы.Таб + запись.ТекстСообщения;
			
		КонецЦикла;
		
		параметры = Новый Структура;
		параметры.Вставить("ЗавершитьРаботуСистемы",завершитьРаботуСистемы);
		параметры.Вставить("ТекстПредупреждения",текстПредупреждения);
		
	КонецЕсли;
	
	Возврат параметры;
	
КонецФункции

Процедура ТекущийПользовательОповещенияОбновитьСостояние() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьПрофилиПользователей") Тогда
		Возврат;
	КонецЕсли;
	
	записиЗапрос = Новый Запрос;
	
	#Область ТекстЗапроса
	
	записиЗапрос.Текст = "
	
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Идентификатор
	|	,Пользователь
	|	,ЗавершитьРаботуСистемы
	|	,Выполнено
	|	,КоличествоЗапросов
	|	,КоличествоЗапросовВыполнено
	|	,ТекстСообщения
	|ИЗ
	|	РегистрСведений.ПользователиОповещения
	|ГДЕ
	|	Пользователь = &ТекущийПользователь
	|	И ЗавершитьРаботуСистемы
	|	И НЕ Выполнено
	|";
	
	#КонецОбласти
	
	записиЗапрос.УстановитьПараметр("ТекущийПользователь", Пользователи.ТекущийПользователь());
	
	записиРезультат = записиЗапрос.Выполнить();
	Если Не записиРезультат.Пустой() Тогда
		
		записи = записиРезультат.Выгрузить();
		
		Для Каждого запись ИЗ записи Цикл
			
			наборЗаписей = РегистрыСведений.ПользователиОповещения.СоздатьНаборЗаписей();
			наборЗаписей.Отбор.Идентификатор.Установить(запись.Идентификатор);
			наборЗаписей.Записать();
			
			менеджерЗаписи								 = РегистрыСведений.ПользователиОповещения.СоздатьМенеджерЗаписи();
			менеджерЗаписи.Идентификатор				 = запись.Идентификатор;
			менеджерЗаписи.Пользователь					 = запись.Пользователь;
			менеджерЗаписи.ЗавершитьРаботуСистемы		 = запись.ЗавершитьРаботуСистемы;
			менеджерЗаписи.Выполнено					 = Истина;
			менеджерЗаписи.КоличествоЗапросов			 = запись.КоличествоЗапросов;
			менеджерЗаписи.КоличествоЗапросовВыполнено	 = запись.КоличествоЗапросовВыполнено;
			менеджерЗаписи.ТекстСообщения				 = запись.ТекстСообщения;
			менеджерЗаписи.Записать();
			
		КонецЦикла;;
		
	КонецЕсли;
	
КонецПроцедуры
